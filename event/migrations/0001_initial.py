# Generated by Django 4.2.15 on 2024-12-08 06:13

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EventCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_date_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EventGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_featured_image', models.BooleanField(default=False)),
                ('image', models.ImageField(upload_to='event_images/')),
                ('created_date_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EventOrganizer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('image', models.ImageField(upload_to='event_organizer/')),
                ('link', models.URLField(blank=True, null=True)),
                ('is_show', models.BooleanField(default=False)),
                ('created_date_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta_title', models.CharField(blank=True, help_text='Title for search engines.', max_length=255, null=True)),
                ('meta_tag', models.CharField(blank=True, help_text='Primary meta tag for SEO.', max_length=255, null=True)),
                ('meta_description', models.TextField(blank=True, help_text='Short description for SEO.', null=True)),
                ('meta_keywords', models.TextField(blank=True, help_text='Comma-separated keywords for SEO.', null=True)),
                ('meta_author', models.CharField(blank=True, help_text='Author information for SEO.', max_length=255, null=True)),
                ('canonical_url', models.URLField(blank=True, help_text='Canonical URL to avoid duplicate content.', null=True)),
                ('og_title', models.CharField(blank=True, help_text='Title for social sharing.', max_length=255, null=True)),
                ('og_description', models.TextField(blank=True, help_text='Description for social sharing.', null=True)),
                ('og_url', models.URLField(blank=True, help_text='URL to share on social platforms.', null=True)),
                ('og_image', models.ImageField(blank=True, null=True, upload_to='college/og_image/')),
                ('og_type', models.CharField(blank=True, help_text='Type of the OG content (e.g., website, article).', max_length=50, null=True)),
                ('og_locale', models.CharField(blank=True, default='en_US', help_text='Locale for OG tags (e.g., en_US).', max_length=10, null=True)),
                ('dc_title', models.CharField(blank=True, help_text='Title for Dublin Core Metadata.', max_length=255, null=True)),
                ('dc_description', models.TextField(blank=True, help_text='Description for Dublin Core Metadata.', null=True)),
                ('dc_language', models.CharField(blank=True, default='en', help_text='Language code for Dublin Core Metadata (e.g., en, fr).', max_length=10, null=True)),
                ('event_name', models.CharField(max_length=255)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('duration', models.CharField(max_length=255)),
                ('event_type', models.CharField(choices=[('physical', 'Physical'), ('online', 'Online'), ('hybrid', 'Hybrid')], max_length=10)),
                ('venue', models.CharField(blank=True, max_length=255, null=True)),
                ('online_seat_limit', models.PositiveIntegerField(default=0)),
                ('offline_seat_limit', models.PositiveIntegerField(default=0)),
                ('is_offline_seat_limit', models.BooleanField(default=False)),
                ('is_online_seat_limit', models.BooleanField(default=False)),
                ('is_registration', models.BooleanField(default=False)),
                ('registration_link', models.URLField(blank=True, null=True)),
                ('registration_type', models.CharField(choices=[('paid', 'Paid'), ('free', 'Free')], default='free', max_length=10)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('amount_type', models.CharField(blank=True, max_length=100, null=True)),
                ('amount_country', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_featured_event', models.BooleanField(default=False)),
                ('created_date_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
                ('category', models.ManyToManyField(related_name='event_category', to='event.eventcategory')),
                ('organizer', models.ManyToManyField(related_name='organizer', to='event.eventorganizer')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
