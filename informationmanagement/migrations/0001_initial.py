# Generated by Django 4.2.15 on 2024-09-26 06:24

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('level', '__first__'),
        ('certification', '0001_initial'),
        ('coursemanagement', '__first__'),
        ('collegetype', '0001_initial'),
        ('collegeleveltype', '__first__'),
        ('affiliation', '0001_initial'),
        ('district', '0001_initial'),
        ('semester', '__first__'),
        ('faculty', '0001_initial'),
        ('college', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='InformationCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('is_show', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='information_category/')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InformationTagging',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('is_show', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='information_tagging/')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Year',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Information',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_template', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=255)),
                ('publish_date', models.DateTimeField()),
                ('active_period_start', models.DateField()),
                ('active_period_end', models.DateField()),
                ('course_level_type', models.CharField(choices=[('Year', 'Year'), ('Semester', 'Semester')], max_length=10)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='information_images/')),
                ('is_view', models.BooleanField(default=False)),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
                ('affiliation', models.ManyToManyField(to='affiliation.affiliation')),
                ('certification', models.ManyToManyField(blank=True, to='certification.certification')),
                ('college', models.ManyToManyField(blank=True, to='college.college')),
                ('college_level_type', models.ManyToManyField(blank=True, to='collegeleveltype.collegeleveltype')),
                ('college_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='collegetype.collegetype')),
                ('course', models.ManyToManyField(blank=True, to='coursemanagement.course')),
                ('district', models.ManyToManyField(blank=True, to='district.district')),
                ('faculty', models.ManyToManyField(blank=True, to='faculty.faculty')),
                ('information_category', models.ManyToManyField(blank=True, to='informationmanagement.informationcategory')),
                ('information_tagging', models.ManyToManyField(blank=True, to='informationmanagement.informationtagging')),
                ('level', models.ManyToManyField(blank=True, to='level.level')),
                ('semesters', models.ManyToManyField(blank=True, to='semester.semester')),
                ('years', models.ManyToManyField(blank=True, to='informationmanagement.year')),
            ],
        ),
    ]
