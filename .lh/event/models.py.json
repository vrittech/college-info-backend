{
    "sourceFile": "event/models.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 186,
            "patches": [
                {
                    "date": 1726568467190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1726568476482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,4 @@\n from django.db import models\n \n # Create your models here.\n-event name\n\\ No newline at end of file\n+event_name\n\\ No newline at end of file\n"
                },
                {
                    "date": 1726568488279,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,10 @@\n from django.db import models\n \n # Create your models here.\n-event_name\n\\ No newline at end of file\n+event_name\n+\n+class duration\n+DetailView(DetailView):\n+    model = duration\n+    \n+    template_name = \"TEMPLATE_NAME\"\n"
                },
                {
                    "date": 1726568493555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,5 @@\n from django.db import models\n \n # Create your models here.\n event_name\n-\n-class duration\n-DetailView(DetailView):\n-    model = duration\n-    \n-    template_name = \"TEMPLATE_NAME\"\n+date\n"
                },
                {
                    "date": 1726568506795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,4 +2,6 @@\n \n # Create your models here.\n event_name\n date\n+duration\n+type\n"
                },
                {
                    "date": 1726568517070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,5 +3,5 @@\n # Create your models here.\n event_name\n date\n duration\n-type\n+type --\n"
                },
                {
                    "date": 1726568526205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,5 +3,5 @@\n # Create your models here.\n event_name\n date\n duration\n-type --\n+type --> physical,online,hybrid\n"
                },
                {
                    "date": 1726568535887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,4 +4,6 @@\n event_name\n date\n duration\n type --> physical,online,hybrid\n+seat limit\n+\n"
                },
                {
                    "date": 1726568545182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,5 +5,5 @@\n date\n duration\n type --> physical,online,hybrid\n seat limit\n-\n+is\n"
                },
                {
                    "date": 1726568551761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,5 +5,5 @@\n date\n duration\n type --> physical,online,hybrid\n seat limit\n-is\n+is_registration\n"
                },
                {
                    "date": 1726568563279,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,4 +6,5 @@\n duration\n type --> physical,online,hybrid\n seat limit\n is_registration\n+registration type___\n"
                },
                {
                    "date": 1726568575946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,5 +6,5 @@\n duration\n type --> physical,online,hybrid\n seat limit\n is_registration\n-registration type___\n+registration type--> paid,FIELDNAME = forms.RegexField(, regex=REGEX, required=False)\n"
                },
                {
                    "date": 1726568586461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,5 +6,7 @@\n duration\n type --> physical,online,hybrid\n seat limit\n is_registration\n-registration type--> paid,FIELDNAME = forms.RegexField(, regex=REGEX, required=False)\n+registration type--> paid,free \n+description\n+\n"
                },
                {
                    "date": 1726568591613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,5 +8,5 @@\n seat limit\n is_registration\n registration type--> paid,free \n description\n-\n+images\n"
                },
                {
                    "date": 1726568623364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,5 +8,5 @@\n seat limit\n is_registration\n registration type--> paid,free \n description\n-images\n+images model foreign\n"
                },
                {
                    "date": 1726568629714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,5 +8,5 @@\n seat limit\n is_registration\n registration type--> paid,free \n description\n-images model foreign\n+images model foreign(multiple images)\n"
                },
                {
                    "date": 1726568641548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,4 +9,5 @@\n is_registration\n registration type--> paid,free \n description\n images model foreign(multiple images)\n+is_featured image\n"
                },
                {
                    "date": 1726568668775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,4 +10,6 @@\n registration type--> paid,free \n description\n images model foreign(multiple images)\n is_featured image\n+multiple organizer\n+multiple \n"
                },
                {
                    "date": 1726568674802,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,5 +11,5 @@\n description\n images model foreign(multiple images)\n is_featured image\n multiple organizer\n-multiple \n+multiple categories\n"
                },
                {
                    "date": 1726568724007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n date\n duration\n type --> physical,online,hybrid\n seat limit\n+venue\n is_registration\n registration type--> paid,free \n description\n images model foreign(multiple images)\n"
                },
                {
                    "date": 1726568731736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,10 @@\n duration\n type --> physical,online,hybrid\n seat limit\n venue\n+links\n+\n is_registration\n registration type--> paid,free \n description\n images model foreign(multiple images)\n"
                },
                {
                    "date": 1726568744404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n event_name\n date\n duration\n type --> physical,online,hybrid\n-seat limit\n+online seat limit\n venue\n links\n \n is_registration\n"
                },
                {
                    "date": 1726568750307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n date\n duration\n type --> physical,online,hybrid\n online seat limit\n+offline seat limit\n venue\n links\n \n is_registration\n"
                },
                {
                    "date": 1726568764953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n online seat limit\n offline seat limit\n venue\n links\n-\n+registration \n is_registration\n registration type--> paid,free \n description\n images model foreign(multiple images)\n"
                },
                {
                    "date": 1726568776896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,11 +8,12 @@\n online seat limit\n offline seat limit\n venue\n links\n-registration \n+registration links\n is_registration\n registration type--> paid,free \n+amount\n description\n images model foreign(multiple images)\n is_featured image\n multiple organizer\n"
                },
                {
                    "date": 1726568814679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n duration\n type --> physical,online,hybrid\n online seat limit\n offline seat limit\n+is_seat\n venue\n links\n registration links\n is_registration\n"
                },
                {
                    "date": 1726568917678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,21 +1,22 @@\n-from django.db import models\n+# from django.db import models\n \n-# Create your models here.\n-event_name\n-date\n-duration\n-type --> physical,online,hybrid\n-online seat limit\n-offline seat limit\n-is_seat\n-venue\n-links\n-registration links\n-is_registration\n-registration type--> paid,free \n-amount\n-description\n-images model foreign(multiple images)\n-is_featured image\n-multiple organizer\n-multiple categories\n+# # Create your models here.\n+# event_name\n+# date\n+# duration\n+# type --> physical,online,hybrid\n+# online seat limit\n+# offline seat limit\n+# is_seat_limit\n+# venue\n+# links\n+# registration links\n+# is_registration\n+# registration type--> paid,free \n+# amount\n+price type\n+# description\n+# images model foreign(multiple images)\n+# is_featured image\n+# multiple organizer\n+# multiple categories\n"
                },
                {
                    "date": 1726568923309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n # registration links\n # is_registration\n # registration type--> paid,free \n # amount\n-price type\n+# price type\n # description\n # images model foreign(multiple images)\n # is_featured image\n # multiple organizer\n"
                },
                {
                    "date": 1726569118776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,9 @@\n # is_registration\n # registration type--> paid,free \n # amount\n # price type\n+\n # description\n # images model foreign(multiple images)\n # is_featured image\n # multiple organizer\n"
                },
                {
                    "date": 1726569124790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n # is_registration\n # registration type--> paid,free \n # amount\n # price type\n-\n+price\n # description\n # images model foreign(multiple images)\n # is_featured image\n # multiple organizer\n"
                },
                {
                    "date": 1726569133575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n # is_registration\n # registration type--> paid,free \n # amount\n # price type\n-price\n+#price_country\n # description\n # images model foreign(multiple images)\n # is_featured image\n # multiple organizer\n"
                },
                {
                    "date": 1726569340893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,6 +18,6 @@\n #price_country\n # description\n # images model foreign(multiple images)\n # is_featured image\n-# multiple organizer\n+#  organizer\n # multiple categories\n"
                },
                {
                    "date": 1726569349934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,6 +18,6 @@\n #price_country\n # description\n # images model foreign(multiple images)\n # is_featured image\n-#  organizer\n+#  organizer name foreign key from model\n # multiple categories\n"
                },
                {
                    "date": 1726569356189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,5 +19,5 @@\n # description\n # images model foreign(multiple images)\n # is_featured image\n #  organizer name foreign key from model\n-# multiple categories\n+#  categories \n"
                },
                {
                    "date": 1726569366010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,5 +19,5 @@\n # description\n # images model foreign(multiple images)\n # is_featured image\n #  organizer name foreign key from model\n-#  categories \n+#  categories name foreign key from model\n"
                },
                {
                    "date": 1726569372260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,23 @@\n+# from django.db import models\n+\n+# # Create your models here.\n+# event_name\n+# date\n+# duration\n+# type --> physical,online,hybrid\n+# online seat limit\n+# offline seat limit\n+# is_seat_limit\n+# venue\n+# links\n+# registration links\n+# is_registration\n+# registration type--> paid,free \n+# amount\n+# price type\n+#price_country\n+# description\n+# images model foreign key(multiple images)\n+# is_featured image\n+#  organizer name foreign key from model\n+#  categories name foreign key from model\n"
                },
                {
                    "date": 1726569382301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,31 +16,8 @@\n # amount\n # price type\n #price_country\n # description\n-# images model foreign key(multiple images)\n+# images foreign key from model(multiple images)\n # is_featured image\n #  organizer name foreign key from model\n #  categories name foreign key from model\n-# from django.db import models\n-\n-# # Create your models here.\n-# event_name\n-# date\n-# duration\n-# type --> physical,online,hybrid\n-# online seat limit\n-# offline seat limit\n-# is_seat_limit\n-# venue\n-# links\n-# registration links\n-# is_registration\n-# registration type--> paid,free \n-# amount\n-# price type\n-#price_country\n-# description\n-# images model foreign(multiple images)\n-# is_featured image\n-#  organizer name foreign key from model\n-#  categories name foreign key from model\n"
                },
                {
                    "date": 1726569535167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,4 +20,58 @@\n # images foreign key from model(multiple images)\n # is_featured image\n #  organizer name foreign key from model\n #  categories name foreign key from model\n+from django.db import models\n+\n+class Event(models.Model):\n+    # Basic event fields\n+    event_name = models.CharField(max_length=255)\n+    date = models.DateTimeField()\n+    duration = models.DurationField()\n+    TYPE_CHOICES = [\n+        ('physical', 'Physical'),\n+        ('online', 'Online'),\n+        ('hybrid', 'Hybrid'),\n+    ]\n+    type = models.CharField(max_length=10, choices=TYPE_CHOICES)\n+\n+    # Seat limit fields\n+    online_seat_limit = models.PositiveIntegerField(default=0)\n+    offline_seat_limit = models.PositiveIntegerField(default=0)\n+    is_seat_limit = models.BooleanField(default=False)\n+\n+    # Venue and link fields\n+    venue = models.CharField(max_length=255, blank=True, null=True)\n+    links = models.URLField(blank=True, null=True)\n+    registration_link = models.URLField(blank=True, null=True)\n+\n+    # Registration fields\n+    is_registration = models.BooleanField(default=False)\n+    REGISTRATION_TYPE_CHOICES = [\n+        ('paid', 'Paid'),\n+        ('free', 'Free'),\n+    ]\n+    registration_type = models.CharField(max_length=10, choices=REGISTRATION_TYPE_CHOICES, default='free')\n+    amount = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)\n+    price_type = models.CharField(max_length=100, blank=True, null=True)\n+    price_country = models.CharField(max_length=100, blank=True, null=True)\n+\n+    # Description and image fields\n+    description = models.TextField(blank=True, null=True)\n+    is_featured_image = models.BooleanField(default=False)\n+\n+    # Foreign key fields\n+    organizer_name = models.ForeignKey('Organizer', on_delete=models.CASCADE)\n+    categories_name = models.ForeignKey('Category', on_delete=models.CASCADE)\n+    \n+class Image(models.Model):\n+    event = models.ForeignKey(Event, related_name='images', on_delete=models.CASCADE)\n+    image = models.ImageField(upload_to='event_images/')\n+\n+class Organizer(models.Model):\n+    name = models.CharField(max_length=255)\n+    contact_info = models.CharField(max_length=255, blank=True, null=True)\n+\n+class Category(models.Model):\n+    name = models.CharField(max_length=100)\n+    description = models.TextField(blank=True, null=True)\n"
                },
                {
                    "date": 1726569705823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n     organizer_name = models.ForeignKey('Organizer', on_delete=models.CASCADE)\n     categories_name = models.ForeignKey('Category', on_delete=models.CASCADE)\n     \n class Image(models.Model):\n-    event = models.ForeignKey(Event, related_name='images', on_delete=models.CASCADE)\n+    event = models.Man(Event, related_name='images', on_delete=models.CASCADE)\n     image = models.ImageField(upload_to='event_images/')\n \n class Organizer(models.Model):\n     name = models.CharField(max_length=255)\n"
                },
                {
                    "date": 1726569771347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,12 +64,13 @@\n     organizer_name = models.ForeignKey('Organizer', on_delete=models.CASCADE)\n     categories_name = models.ForeignKey('Category', on_delete=models.CASCADE)\n     \n class Image(models.Model):\n-    event = models.Man(Event, related_name='images', on_delete=models.CASCADE)\n+    event = models.ManyToManyField(Event, related_name='images', on_delete=models.CASCADE)\n     image = models.ImageField(upload_to='event_images/')\n \n class Organizer(models.Model):\n+    event = models.ManyToManyField(Event, related_name='images', on_delete=models.CASCADE)\n     name = models.CharField(max_length=255)\n     contact_info = models.CharField(max_length=255, blank=True, null=True)\n \n class Category(models.Model):\n"
                },
                {
                    "date": 1726569811021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,11 +68,12 @@\n     event = models.ManyToManyField(Event, related_name='images', on_delete=models.CASCADE)\n     image = models.ImageField(upload_to='event_images/')\n \n class Organizer(models.Model):\n-    event = models.ManyToManyField(Event, related_name='images', on_delete=models.CASCADE)\n+    event = models.ManyToManyField(Event, related_name='organiser', on_delete=models.CASCADE)\n     name = models.CharField(max_length=255)\n     contact_info = models.CharField(max_length=255, blank=True, null=True)\n \n class Category(models.Model):\n+    event = models.ManyToManyField(Event, related_name='images', on_delete=models.CASCADE)\n     name = models.CharField(max_length=100)\n     description = models.TextField(blank=True, null=True)\n"
                },
                {
                    "date": 1726569817565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n     event = models.ManyToManyField(Event, related_name='images', on_delete=models.CASCADE)\n     image = models.ImageField(upload_to='event_images/')\n \n class Organizer(models.Model):\n-    event = models.ManyToManyField(Event, related_name='organiser', on_delete=models.CASCADE)\n+    event = models.ManyToManyField(Event, related_name='organizer', on_delete=models.CASCADE)\n     name = models.CharField(max_length=255)\n     contact_info = models.CharField(max_length=255, blank=True, null=True)\n \n class Category(models.Model):\n"
                },
                {
                    "date": 1726569827581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,79 @@\n+# from django.db import models\n+\n+# # Create your models here.\n+# event_name\n+# date\n+# duration\n+# type --> physical,online,hybrid\n+# online seat limit\n+# offline seat limit\n+# is_seat_limit\n+# venue\n+# links\n+# registration links\n+# is_registration\n+# registration type--> paid,free \n+# amount\n+# price type\n+#price_country\n+# description\n+# images foreign key from model(multiple images)\n+# is_featured image\n+#  organizer name foreign key from model\n+#  categories name foreign key from model\n+from django.db import models\n+\n+class Event(models.Model):\n+    # Basic event fields\n+    event_name = models.CharField(max_length=255)\n+    date = models.DateTimeField()\n+    duration = models.DurationField()\n+    TYPE_CHOICES = [\n+        ('physical', 'Physical'),\n+        ('online', 'Online'),\n+        ('hybrid', 'Hybrid'),\n+    ]\n+    type = models.CharField(max_length=10, choices=TYPE_CHOICES)\n+\n+    # Seat limit fields\n+    online_seat_limit = models.PositiveIntegerField(default=0)\n+    offline_seat_limit = models.PositiveIntegerField(default=0)\n+    is_seat_limit = models.BooleanField(default=False)\n+\n+    # Venue and link fields\n+    venue = models.CharField(max_length=255, blank=True, null=True)\n+    links = models.URLField(blank=True, null=True)\n+    registration_link = models.URLField(blank=True, null=True)\n+\n+    # Registration fields\n+    is_registration = models.BooleanField(default=False)\n+    REGISTRATION_TYPE_CHOICES = [\n+        ('paid', 'Paid'),\n+        ('free', 'Free'),\n+    ]\n+    registration_type = models.CharField(max_length=10, choices=REGISTRATION_TYPE_CHOICES, default='free')\n+    amount = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)\n+    price_type = models.CharField(max_length=100, blank=True, null=True)\n+    price_country = models.CharField(max_length=100, blank=True, null=True)\n+\n+    # Description and image fields\n+    description = models.TextField(blank=True, null=True)\n+    is_featured_image = models.BooleanField(default=False)\n+\n+    # Foreign key fields\n+    organizer_name = models.ForeignKey('Organizer', on_delete=models.CASCADE)\n+    categories_name = models.ForeignKey('Category', on_delete=models.CASCADE)\n+    \n+class Image(models.Model):\n+    event = models.ManyToManyField(Event, related_name='images', on_delete=models.CASCADE)\n+    image = models.ImageField(upload_to='event_images/')\n+\n+class Organizer(models.Model):\n+    event = models.ManyToManyField(Event, related_name='organizer)\n+    name = models.CharField(max_length=255)\n+    contact_info = models.CharField(max_length=255, blank=True, null=True)\n+\n+class Category(models.Model):\n+    event = models.ManyToManyField(Event, related_name='category', on_delete=models.CASCADE)\n+    name = models.CharField(max_length=100)\n+    description = models.TextField(blank=True, null=True)\n"
                },
                {
                    "date": 1726569833124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,7 +73,7 @@\n     name = models.CharField(max_length=255)\n     contact_info = models.CharField(max_length=255, blank=True, null=True)\n \n class Category(models.Model):\n-    event = models.ManyToManyField(Event, related_name='category', on_delete=models.CASCADE)\n+    event = models.ManyToManyField(Event, related_name='category')\n     name = models.CharField(max_length=100)\n     description = models.TextField(blank=True, null=True)\n"
                },
                {
                    "date": 1726569840500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,95 +64,16 @@\n     organizer_name = models.ForeignKey('Organizer', on_delete=models.CASCADE)\n     categories_name = models.ForeignKey('Category', on_delete=models.CASCADE)\n     \n class Image(models.Model):\n-    event = models.ManyToManyField(Event, related_name='images', on_delete=models.CASCADE)\n+    event = models.ManyToManyField(Event, related_name='images')\n     image = models.ImageField(upload_to='event_images/')\n \n class Organizer(models.Model):\n-    event = models.ManyToManyField(Event, related_name='organizer)\n+    event = models.ManyToManyField(Event, related_name='organizer')\n     name = models.CharField(max_length=255)\n     contact_info = models.CharField(max_length=255, blank=True, null=True)\n \n class Category(models.Model):\n     event = models.ManyToManyField(Event, related_name='category')\n     name = models.CharField(max_length=100)\n     description = models.TextField(blank=True, null=True)\n-# from django.db import models\n-\n-# # Create your models here.\n-# event_name\n-# date\n-# duration\n-# type --> physical,online,hybrid\n-# online seat limit\n-# offline seat limit\n-# is_seat_limit\n-# venue\n-# links\n-# registration links\n-# is_registration\n-# registration type--> paid,free \n-# amount\n-# price type\n-#price_country\n-# description\n-# images foreign key from model(multiple images)\n-# is_featured image\n-#  organizer name foreign key from model\n-#  categories name foreign key from model\n-from django.db import models\n-\n-class Event(models.Model):\n-    # Basic event fields\n-    event_name = models.CharField(max_length=255)\n-    date = models.DateTimeField()\n-    duration = models.DurationField()\n-    TYPE_CHOICES = [\n-        ('physical', 'Physical'),\n-        ('online', 'Online'),\n-        ('hybrid', 'Hybrid'),\n-    ]\n-    type = models.CharField(max_length=10, choices=TYPE_CHOICES)\n-\n-    # Seat limit fields\n-    online_seat_limit = models.PositiveIntegerField(default=0)\n-    offline_seat_limit = models.PositiveIntegerField(default=0)\n-    is_seat_limit = models.BooleanField(default=False)\n-\n-    # Venue and link fields\n-    venue = models.CharField(max_length=255, blank=True, null=True)\n-    links = models.URLField(blank=True, null=True)\n-    registration_link = models.URLField(blank=True, null=True)\n-\n-    # Registration fields\n-    is_registration = models.BooleanField(default=False)\n-    REGISTRATION_TYPE_CHOICES = [\n-        ('paid', 'Paid'),\n-        ('free', 'Free'),\n-    ]\n-    registration_type = models.CharField(max_length=10, choices=REGISTRATION_TYPE_CHOICES, default='free')\n-    amount = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)\n-    price_type = models.CharField(max_length=100, blank=True, null=True)\n-    price_country = models.CharField(max_length=100, blank=True, null=True)\n-\n-    # Description and image fields\n-    description = models.TextField(blank=True, null=True)\n-    is_featured_image = models.BooleanField(default=False)\n-\n-    # Foreign key fields\n-    organizer_name = models.ForeignKey('Organizer', on_delete=models.CASCADE)\n-    categories_name = models.ForeignKey('Category', on_delete=models.CASCADE)\n-    \n-class Image(models.Model):\n-    event = models.ManyToManyField(Event, related_name='images', on_delete=models.CASCADE)\n-    image = models.ImageField(upload_to='event_images/')\n-\n-class Organizer(models.Model):\n-    event = models.ManyToManyField(Event, related_name='organizer', on_delete=models.CASCADE)\n-    name = models.CharField(max_length=255)\n-    contact_info = models.CharField(max_length=255, blank=True, null=True)\n-\n-class Category(models.Model):\n-    event = models.ManyToManyField(Event, related_name='images', on_delete=models.CASCADE)\n-    name = models.CharField(max_length=100)\n-    description = models.TextField(blank=True, null=True)\n"
                },
                {
                    "date": 1726569854493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,11 +59,8 @@\n     # Description and image fields\n     description = models.TextField(blank=True, null=True)\n     is_featured_image = models.BooleanField(default=False)\n \n-    # Foreign key fields\n-    organizer_name = models.ForeignKey('Organizer', on_delete=models.CASCADE)\n-    categories_name = models.ForeignKey('Category', on_delete=models.CASCADE)\n     \n class Image(models.Model):\n     event = models.ManyToManyField(Event, related_name='images')\n     image = models.ImageField(upload_to='event_images/')\n"
                },
                {
                    "date": 1726569865602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,8 +58,10 @@\n \n     # Description and image fields\n     description = models.TextField(blank=True, null=True)\n     is_featured_image = models.BooleanField(default=False)\n+    \n+    created_date = \n \n     \n class Image(models.Model):\n     event = models.ManyToManyField(Event, related_name='images')\n"
                },
                {
                    "date": 1726569873290,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,78 @@\n+# from django.db import models\n+\n+# # Create your models here.\n+# event_name\n+# date\n+# duration\n+# type --> physical,online,hybrid\n+# online seat limit\n+# offline seat limit\n+# is_seat_limit\n+# venue\n+# links\n+# registration links\n+# is_registration\n+# registration type--> paid,free \n+# amount\n+# price type\n+#price_country\n+# description\n+# images foreign key from model(multiple images)\n+# is_featured image\n+#  organizer name foreign key from model\n+#  categories name foreign key from model\n+from django.db import models\n+\n+class Event(models.Model):\n+    # Basic event fields\n+    event_name = models.CharField(max_length=255)\n+    date = models.DateTimeField()\n+    duration = models.DurationField()\n+    TYPE_CHOICES = [\n+        ('physical', 'Physical'),\n+        ('online', 'Online'),\n+        ('hybrid', 'Hybrid'),\n+    ]\n+    type = models.CharField(max_length=10, choices=TYPE_CHOICES)\n+\n+    # Seat limit fields\n+    online_seat_limit = models.PositiveIntegerField(default=0)\n+    offline_seat_limit = models.PositiveIntegerField(default=0)\n+    is_seat_limit = models.BooleanField(default=False)\n+\n+    # Venue and link fields\n+    venue = models.CharField(max_length=255, blank=True, null=True)\n+    links = models.URLField(blank=True, null=True)\n+    registration_link = models.URLField(blank=True, null=True)\n+\n+    # Registration fields\n+    is_registration = models.BooleanField(default=False)\n+    REGISTRATION_TYPE_CHOICES = [\n+        ('paid', 'Paid'),\n+        ('free', 'Free'),\n+    ]\n+    registration_type = models.CharField(max_length=10, choices=REGISTRATION_TYPE_CHOICES, default='free')\n+    amount = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)\n+    price_type = models.CharField(max_length=100, blank=True, null=True)\n+    price_country = models.CharField(max_length=100, blank=True, null=True)\n+\n+    # Description and image fields\n+    description = models.TextField(blank=True, null=True)\n+    is_featured_image = models.BooleanField(default=False)\n+    \n+    created_date = models.Da\n+\n+    \n+class Image(models.Model):\n+    event = models.ManyToManyField(Event, related_name='images')\n+    image = models.ImageField(upload_to='event_images/')\n+\n+class Organizer(models.Model):\n+    event = models.ManyToManyField(Event, related_name='organizer')\n+    name = models.CharField(max_length=255)\n+    contact_info = models.CharField(max_length=255, blank=True, null=True)\n+\n+class Category(models.Model):\n+    event = models.ManyToManyField(Event, related_name='category')\n+    name = models.CharField(max_length=100)\n+    description = models.TextField(blank=True, null=True)\n"
                },
                {
                    "date": 1726569880792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,10 @@\n     # Description and image fields\n     description = models.TextField(blank=True, null=True)\n     is_featured_image = models.BooleanField(default=False)\n     \n-    created_date = models.Da\n+    created_date = models.DateTimeField()\n+    created_date = models.DateTimeField()\n \n     \n class Image(models.Model):\n     event = models.ManyToManyField(Event, related_name='images')\n@@ -75,82 +76,4 @@\n class Category(models.Model):\n     event = models.ManyToManyField(Event, related_name='category')\n     name = models.CharField(max_length=100)\n     description = models.TextField(blank=True, null=True)\n-# from django.db import models\n-\n-# # Create your models here.\n-# event_name\n-# date\n-# duration\n-# type --> physical,online,hybrid\n-# online seat limit\n-# offline seat limit\n-# is_seat_limit\n-# venue\n-# links\n-# registration links\n-# is_registration\n-# registration type--> paid,free \n-# amount\n-# price type\n-#price_country\n-# description\n-# images foreign key from model(multiple images)\n-# is_featured image\n-#  organizer name foreign key from model\n-#  categories name foreign key from model\n-from django.db import models\n-\n-class Event(models.Model):\n-    # Basic event fields\n-    event_name = models.CharField(max_length=255)\n-    date = models.DateTimeField()\n-    duration = models.DurationField()\n-    TYPE_CHOICES = [\n-        ('physical', 'Physical'),\n-        ('online', 'Online'),\n-        ('hybrid', 'Hybrid'),\n-    ]\n-    type = models.CharField(max_length=10, choices=TYPE_CHOICES)\n-\n-    # Seat limit fields\n-    online_seat_limit = models.PositiveIntegerField(default=0)\n-    offline_seat_limit = models.PositiveIntegerField(default=0)\n-    is_seat_limit = models.BooleanField(default=False)\n-\n-    # Venue and link fields\n-    venue = models.CharField(max_length=255, blank=True, null=True)\n-    links = models.URLField(blank=True, null=True)\n-    registration_link = models.URLField(blank=True, null=True)\n-\n-    # Registration fields\n-    is_registration = models.BooleanField(default=False)\n-    REGISTRATION_TYPE_CHOICES = [\n-        ('paid', 'Paid'),\n-        ('free', 'Free'),\n-    ]\n-    registration_type = models.CharField(max_length=10, choices=REGISTRATION_TYPE_CHOICES, default='free')\n-    amount = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)\n-    price_type = models.CharField(max_length=100, blank=True, null=True)\n-    price_country = models.CharField(max_length=100, blank=True, null=True)\n-\n-    # Description and image fields\n-    description = models.TextField(blank=True, null=True)\n-    is_featured_image = models.BooleanField(default=False)\n-    \n-    created_date = \n-\n-    \n-class Image(models.Model):\n-    event = models.ManyToManyField(Event, related_name='images')\n-    image = models.ImageField(upload_to='event_images/')\n-\n-class Organizer(models.Model):\n-    event = models.ManyToManyField(Event, related_name='organizer')\n-    name = models.CharField(max_length=255)\n-    contact_info = models.CharField(max_length=255, blank=True, null=True)\n-\n-class Category(models.Model):\n-    event = models.ManyToManyField(Event, related_name='category')\n-    name = models.CharField(max_length=100)\n-    description = models.TextField(blank=True, null=True)\n"
                },
                {
                    "date": 1726569886082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n     description = models.TextField(blank=True, null=True)\n     is_featured_image = models.BooleanField(default=False)\n     \n     created_date = models.DateTimeField()\n-    created_date = models.DateTimeField()\n+    created_date = models.DateField()\n \n     \n class Image(models.Model):\n     event = models.ManyToManyField(Event, related_name='images')\n"
                },
                {
                    "date": 1726569893373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n     # Description and image fields\n     description = models.TextField(blank=True, null=True)\n     is_featured_image = models.BooleanField(default=False)\n     \n-    created_date = models.DateTimeField()\n+    created_date_time = models.DateTimeField()\n     created_date = models.DateField()\n \n     \n class Image(models.Model):\n"
                },
                {
                    "date": 1726569898477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,8 +60,9 @@\n     description = models.TextField(blank=True, null=True)\n     is_featured_image = models.BooleanField(default=False)\n     \n     created_date_time = models.DateTimeField()\n+    created_date_time = models.DateTimeField()\n     created_date = models.DateField()\n \n     \n class Image(models.Model):\n"
                },
                {
                    "date": 1726569904594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,80 @@\n+# from django.db import models\n+\n+# # Create your models here.\n+# event_name\n+# date\n+# duration\n+# type --> physical,online,hybrid\n+# online seat limit\n+# offline seat limit\n+# is_seat_limit\n+# venue\n+# links\n+# registration links\n+# is_registration\n+# registration type--> paid,free \n+# amount\n+# price type\n+#price_country\n+# description\n+# images foreign key from model(multiple images)\n+# is_featured image\n+#  organizer name foreign key from model\n+#  categories name foreign key from model\n+from django.db import models\n+\n+class Event(models.Model):\n+    # Basic event fields\n+    event_name = models.CharField(max_length=255)\n+    date = models.DateTimeField()\n+    duration = models.DurationField()\n+    TYPE_CHOICES = [\n+        ('physical', 'Physical'),\n+        ('online', 'Online'),\n+        ('hybrid', 'Hybrid'),\n+    ]\n+    type = models.CharField(max_length=10, choices=TYPE_CHOICES)\n+\n+    # Seat limit fields\n+    online_seat_limit = models.PositiveIntegerField(default=0)\n+    offline_seat_limit = models.PositiveIntegerField(default=0)\n+    is_seat_limit = models.BooleanField(default=False)\n+\n+    # Venue and link fields\n+    venue = models.CharField(max_length=255, blank=True, null=True)\n+    links = models.URLField(blank=True, null=True)\n+    registration_link = models.URLField(blank=True, null=True)\n+\n+    # Registration fields\n+    is_registration = models.BooleanField(default=False)\n+    REGISTRATION_TYPE_CHOICES = [\n+        ('paid', 'Paid'),\n+        ('free', 'Free'),\n+    ]\n+    registration_type = models.CharField(max_length=10, choices=REGISTRATION_TYPE_CHOICES, default='free')\n+    amount = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)\n+    price_type = models.CharField(max_length=100, blank=True, null=True)\n+    price_country = models.CharField(max_length=100, blank=True, null=True)\n+\n+    # Description and image fields\n+    description = models.TextField(blank=True, null=True)\n+    is_featured_image = models.BooleanField(default=False)\n+    \n+    created_date_time = models.DateTimeField()\n+    updated_date = models.DateTimeField()\n+    created_date = models.DateField()\n+\n+    \n+class Image(models.Model):\n+    event = models.ManyToManyField(Event, related_name='images')\n+    image = models.ImageField(upload_to='event_images/')\n+\n+class Organizer(models.Model):\n+    event = models.ManyToManyField(Event, related_name='organizer')\n+    name = models.CharField(max_length=255)\n+    contact_info = models.CharField(max_length=255, blank=True, null=True)\n+\n+class Category(models.Model):\n+    event = models.ManyToManyField(Event, related_name='category')\n+    name = models.CharField(max_length=100)\n+    description = models.TextField(blank=True, null=True)\n"
                },
                {
                    "date": 1726569909739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n     # Description and image fields\n     description = models.TextField(blank=True, null=True)\n     is_featured_image = models.BooleanField(default=False)\n     \n-    created_date_time = models.DateTimeField()\n+    created_date_time = models.DateTimeField(a)\n     updated_date = models.DateTimeField()\n     created_date = models.DateField()\n \n     \n@@ -77,84 +77,4 @@\n class Category(models.Model):\n     event = models.ManyToManyField(Event, related_name='category')\n     name = models.CharField(max_length=100)\n     description = models.TextField(blank=True, null=True)\n-# from django.db import models\n-\n-# # Create your models here.\n-# event_name\n-# date\n-# duration\n-# type --> physical,online,hybrid\n-# online seat limit\n-# offline seat limit\n-# is_seat_limit\n-# venue\n-# links\n-# registration links\n-# is_registration\n-# registration type--> paid,free \n-# amount\n-# price type\n-#price_country\n-# description\n-# images foreign key from model(multiple images)\n-# is_featured image\n-#  organizer name foreign key from model\n-#  categories name foreign key from model\n-from django.db import models\n-\n-class Event(models.Model):\n-    # Basic event fields\n-    event_name = models.CharField(max_length=255)\n-    date = models.DateTimeField()\n-    duration = models.DurationField()\n-    TYPE_CHOICES = [\n-        ('physical', 'Physical'),\n-        ('online', 'Online'),\n-        ('hybrid', 'Hybrid'),\n-    ]\n-    type = models.CharField(max_length=10, choices=TYPE_CHOICES)\n-\n-    # Seat limit fields\n-    online_seat_limit = models.PositiveIntegerField(default=0)\n-    offline_seat_limit = models.PositiveIntegerField(default=0)\n-    is_seat_limit = models.BooleanField(default=False)\n-\n-    # Venue and link fields\n-    venue = models.CharField(max_length=255, blank=True, null=True)\n-    links = models.URLField(blank=True, null=True)\n-    registration_link = models.URLField(blank=True, null=True)\n-\n-    # Registration fields\n-    is_registration = models.BooleanField(default=False)\n-    REGISTRATION_TYPE_CHOICES = [\n-        ('paid', 'Paid'),\n-        ('free', 'Free'),\n-    ]\n-    registration_type = models.CharField(max_length=10, choices=REGISTRATION_TYPE_CHOICES, default='free')\n-    amount = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)\n-    price_type = models.CharField(max_length=100, blank=True, null=True)\n-    price_country = models.CharField(max_length=100, blank=True, null=True)\n-\n-    # Description and image fields\n-    description = models.TextField(blank=True, null=True)\n-    is_featured_image = models.BooleanField(default=False)\n-    \n-    created_date_time = models.DateTimeField()\n-    created_date_time = models.DateTimeField()\n-    created_date = models.DateField()\n-\n-    \n-class Image(models.Model):\n-    event = models.ManyToManyField(Event, related_name='images')\n-    image = models.ImageField(upload_to='event_images/')\n-\n-class Organizer(models.Model):\n-    event = models.ManyToManyField(Event, related_name='organizer')\n-    name = models.CharField(max_length=255)\n-    contact_info = models.CharField(max_length=255, blank=True, null=True)\n-\n-class Category(models.Model):\n-    event = models.ManyToManyField(Event, related_name='category')\n-    name = models.CharField(max_length=100)\n-    description = models.TextField(blank=True, null=True)\n"
                },
                {
                    "date": 1726569931148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,11 +59,10 @@\n     # Description and image fields\n     description = models.TextField(blank=True, null=True)\n     is_featured_image = models.BooleanField(default=False)\n     \n-    created_date_time = models.DateTimeField(a)\n-    updated_date = models.DateTimeField()\n-    created_date = models.DateField()\n+       created_date = models.DateTimeField(auto_now_add=True, null = True,blank = True)\n+    updated_date = models.DateTimeField(auto_now=True, null = True,blank = True)\n \n     \n class Image(models.Model):\n     event = models.ManyToManyField(Event, related_name='images')\n"
                },
                {
                    "date": 1726569936627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,10 @@\n     # Description and image fields\n     description = models.TextField(blank=True, null=True)\n     is_featured_image = models.BooleanField(default=False)\n     \n-       created_date = models.DateTimeField(auto_now_add=True, null = True,blank = True)\n+    created_date = models.DateTimeField(auto_now_add=True, null = True,blank = True)\n+    created_date = models.DateTimeField(auto_now_add=True, null = True,blank = True)\n     updated_date = models.DateTimeField(auto_now=True, null = True,blank = True)\n \n     \n class Image(models.Model):\n"
                },
                {
                    "date": 1726569946538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,10 +59,10 @@\n     # Description and image fields\n     description = models.TextField(blank=True, null=True)\n     is_featured_image = models.BooleanField(default=False)\n     \n-    created_date = models.DateTimeField(auto_now_add=True, null = True,blank = True)\n-    created_date = models.DateTimeField(auto_now_add=True, null = True,blank = True)\n+    created_date_time = models.DateTimeField(auto_now_add=True, null = True,blank = True)\n+    created_date = models.DateField(auto_now_add=True, null = True,blank = True)\n     updated_date = models.DateTimeField(auto_now=True, null = True,blank = True)\n \n     \n class Image(models.Model):\n"
                },
                {
                    "date": 1726570053792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n class Event(models.Model):\n     # Basic event fields\n     event_name = models.CharField(max_length=255)\n     date = models.DateTimeField()\n-    duration = models.DurationField()\n+    duration = models.CharField(max_length=255)\n     TYPE_CHOICES = [\n         ('physical', 'Physical'),\n         ('online', 'Online'),\n         ('hybrid', 'Hybrid'),\n"
                },
                {
                    "date": 1726570103884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n     price_country = models.CharField(max_length=100, blank=True, null=True)\n \n     # Description and image fields\n     description = models.TextField(blank=True, null=True)\n-    is_featured_image = models.BooleanField(default=False)\n+   \n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null = True,blank = True)\n     created_date = models.DateField(auto_now_add=True, null = True,blank = True)\n     updated_date = models.DateTimeField(auto_now=True, null = True,blank = True)\n"
                },
                {
                    "date": 1726570109812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,8 +66,9 @@\n \n     \n class Image(models.Model):\n     event = models.ManyToManyField(Event, related_name='images')\n+     is_featured_image = models.BooleanField(default=False)\n     image = models.ImageField(upload_to='event_images/')\n \n class Organizer(models.Model):\n     event = models.ManyToManyField(Event, related_name='organizer')\n"
                },
                {
                    "date": 1726570123636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,11 +66,12 @@\n \n     \n class Image(models.Model):\n     event = models.ManyToManyField(Event, related_name='images')\n-     is_featured_image = models.BooleanField(default=False)\n+    is_featured_image = models.BooleanField(default=False)\n     image = models.ImageField(upload_to='event_images/')\n \n+\n class Organizer(models.Model):\n     event = models.ManyToManyField(Event, related_name='organizer')\n     name = models.CharField(max_length=255)\n     contact_info = models.CharField(max_length=255, blank=True, null=True)\n"
                },
                {
                    "date": 1726570129146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,10 +68,10 @@\n class Image(models.Model):\n     event = models.ManyToManyField(Event, related_name='images')\n     is_featured_image = models.BooleanField(default=False)\n     image = models.ImageField(upload_to='event_images/')\n+    \n \n-\n class Organizer(models.Model):\n     event = models.ManyToManyField(Event, related_name='organizer')\n     name = models.CharField(max_length=255)\n     contact_info = models.CharField(max_length=255, blank=True, null=True)\n"
                },
                {
                    "date": 1726570138123,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,14 +68,21 @@\n class Image(models.Model):\n     event = models.ManyToManyField(Event, related_name='images')\n     is_featured_image = models.BooleanField(default=False)\n     image = models.ImageField(upload_to='event_images/')\n-    \n \n+    created_date_time = models.DateTimeField(auto_now_add=True, null = True,blank = True)\n+    created_date = models.DateField(auto_now_add=True, null = True,blank = True)\n+    updated_date = models.DateTimeField(auto_now=True, null = True,blank = True)\n+\n class Organizer(models.Model):\n     event = models.ManyToManyField(Event, related_name='organizer')\n     name = models.CharField(max_length=255)\n     contact_info = models.CharField(max_length=255, blank=True, null=True)\n+    \n+    created_date_time = models.DateTimeField(auto_now_add=True, null = True,blank = True)\n+    created_date = models.DateField(auto_now_add=True, null = True,blank = True)\n+    updated_date = models.DateTimeField(auto_now=True, null = True,blank = True)\n \n class Category(models.Model):\n     event = models.ManyToManyField(Event, related_name='category')\n     name = models.CharField(max_length=100)\n"
                },
                {
                    "date": 1726570399757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,70 +20,4 @@\n # images foreign key from model(multiple images)\n # is_featured image\n #  organizer name foreign key from model\n #  categories name foreign key from model\n-from django.db import models\n-\n-class Event(models.Model):\n-    # Basic event fields\n-    event_name = models.CharField(max_length=255)\n-    date = models.DateTimeField()\n-    duration = models.CharField(max_length=255)\n-    TYPE_CHOICES = [\n-        ('physical', 'Physical'),\n-        ('online', 'Online'),\n-        ('hybrid', 'Hybrid'),\n-    ]\n-    type = models.CharField(max_length=10, choices=TYPE_CHOICES)\n-\n-    # Seat limit fields\n-    online_seat_limit = models.PositiveIntegerField(default=0)\n-    offline_seat_limit = models.PositiveIntegerField(default=0)\n-    is_seat_limit = models.BooleanField(default=False)\n-\n-    # Venue and link fields\n-    venue = models.CharField(max_length=255, blank=True, null=True)\n-    links = models.URLField(blank=True, null=True)\n-    registration_link = models.URLField(blank=True, null=True)\n-\n-    # Registration fields\n-    is_registration = models.BooleanField(default=False)\n-    REGISTRATION_TYPE_CHOICES = [\n-        ('paid', 'Paid'),\n-        ('free', 'Free'),\n-    ]\n-    registration_type = models.CharField(max_length=10, choices=REGISTRATION_TYPE_CHOICES, default='free')\n-    amount = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)\n-    price_type = models.CharField(max_length=100, blank=True, null=True)\n-    price_country = models.CharField(max_length=100, blank=True, null=True)\n-\n-    # Description and image fields\n-    description = models.TextField(blank=True, null=True)\n-   \n-    \n-    created_date_time = models.DateTimeField(auto_now_add=True, null = True,blank = True)\n-    created_date = models.DateField(auto_now_add=True, null = True,blank = True)\n-    updated_date = models.DateTimeField(auto_now=True, null = True,blank = True)\n-\n-    \n-class Image(models.Model):\n-    event = models.ManyToManyField(Event, related_name='images')\n-    is_featured_image = models.BooleanField(default=False)\n-    image = models.ImageField(upload_to='event_images/')\n-\n-    created_date_time = models.DateTimeField(auto_now_add=True, null = True,blank = True)\n-    created_date = models.DateField(auto_now_add=True, null = True,blank = True)\n-    updated_date = models.DateTimeField(auto_now=True, null = True,blank = True)\n-\n-class Organizer(models.Model):\n-    event = models.ManyToManyField(Event, related_name='organizer')\n-    name = models.CharField(max_length=255)\n-    contact_info = models.CharField(max_length=255, blank=True, null=True)\n-    \n-    created_date_time = models.DateTimeField(auto_now_add=True, null = True,blank = True)\n-    created_date = models.DateField(auto_now_add=True, null = True,blank = True)\n-    updated_date = models.DateTimeField(auto_now=True, null = True,blank = True)\n-\n-class Category(models.Model):\n-    event = models.ManyToManyField(Event, related_name='category')\n-    name = models.CharField(max_length=100)\n-    description = models.TextField(blank=True, null=True)\n"
                },
                {
                    "date": 1726570504371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,4 +20,59 @@\n # images foreign key from model(multiple images)\n # is_featured image\n #  organizer name foreign key from model\n #  categories name foreign key from model\n+from django.db import models\n+\n+class Event(models.Model):\n+    event_name = models.CharField(max_length=255)\n+    date = models.DateTimeField()\n+    duration = models.CharField(max_length=255)\n+    TYPE_CHOICES = [\n+        ('physical', 'Physical'),\n+        ('online', 'Online'),\n+        ('hybrid', 'Hybrid'),\n+    ]\n+    type = models.CharField(max_length=10, choices=TYPE_CHOICES)\n+    online_seat_limit = models.PositiveIntegerField(default=0)\n+    offline_seat_limit = models.PositiveIntegerField(default=0)\n+    is_seat_limit = models.BooleanField(default=False)\n+    venue = models.CharField(max_length=255, blank=True, null=True)\n+    links = models.URLField(blank=True, null=True)\n+    registration_link = models.URLField(blank=True, null=True)\n+    is_registration = models.BooleanField(default=False)\n+    REGISTRATION_TYPE_CHOICES = [\n+        ('paid', 'Paid'),\n+        ('free', 'Free'),\n+    ]\n+    registration_type = models.CharField(max_length=10, choices=REGISTRATION_TYPE_CHOICES, default='free')\n+    amount = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)\n+    price_type = models.CharField(max_length=100, blank=True, null=True)\n+    price_country = models.CharField(max_length=100, blank=True, null=True)\n+    description = models.TextField(blank=True, null=True)\n+    \n+    def __str__(self):\n+        return f\"{self.event_name} - {self.date.strftime('%Y-%m-%d')} ({self.type})\"\n+\n+class Image(models.Model):\n+    event = models.ManyToManyField(Event, related_name='images')\n+    is_featured_image = models.BooleanField(default=False)\n+    image = models.ImageField(upload_to='event_images/')\n+    \n+    def __str__(self):\n+        return f\"{self.image} - {'Featured' if self.is_featured_image else 'Standard'}\"\n+\n+class Organizer(models.Model):\n+    event = models.ManyToManyField(Event, related_name='organizer')\n+    name = models.CharField(max_length=255)\n+    contact_info = models.CharField(max_length=255, blank=True, null=True)\n+    \n+    def __str__(self):\n+        return f\"{self.name} - Contact: {self.contact_info if self.contact_info else 'N/A'}\"\n+\n+class Category(models.Model):\n+    event = models.ManyToManyField(Event, related_name='category')\n+    name = models.CharField(max_length=100)\n+    description = models.TextField(blank=True, null=True)\n+    \n+    def __str__(self):\n+        return f\"{self.name} - {self.description[:50]}...\" if len(self.description) > 50 else self.name\n"
                },
                {
                    "date": 1726570510832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n     is_featured_image = models.BooleanField(default=False)\n     image = models.ImageField(upload_to='event_images/')\n     \n     def __str__(self):\n-        return f\"{self.image} - {'Featured' if self.is_featured_image else 'Standard'}\"\n+        return f\"{self.image.url} - {'Featured' if self.is_featured_image else 'Standard'}\"\n \n class Organizer(models.Model):\n     event = models.ManyToManyField(Event, related_name='organizer')\n     name = models.CharField(max_length=255)\n"
                },
                {
                    "date": 1726570773127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,8 +71,7 @@\n \n class Category(models.Model):\n     event = models.ManyToManyField(Event, related_name='category')\n     name = models.CharField(max_length=100)\n-    description = models.TextField(blank=True, null=True)\n     \n     def __str__(self):\n         return f\"{self.name} - {self.description[:50]}...\" if len(self.description) > 50 else self.name\n"
                },
                {
                    "date": 1726570787596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,5 +73,5 @@\n     event = models.ManyToManyField(Event, related_name='category')\n     name = models.CharField(max_length=100)\n     \n     def __str__(self):\n-        return f\"{self.name} - {self.description[:50]}...\" if len(self.description) > 50 else self.name\n+        return f\"{self.name}\" if len(self.description) > 50 else self.name\n"
                },
                {
                    "date": 1726570793916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,5 +73,5 @@\n     event = models.ManyToManyField(Event, related_name='category')\n     name = models.CharField(max_length=100)\n     \n     def __str__(self):\n-        return f\"{self.name}\" if len(self.description) > 50 else self.name\n+        return f\"{self.name}\"\n\\ No newline at end of file\n"
                },
                {
                    "date": 1726570807414,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,8 @@\n \n class Organizer(models.Model):\n     event = models.ManyToManyField(Event, related_name='organizer')\n     name = models.CharField(max_length=255)\n-    contact_info = models.CharField(max_length=255, blank=True, null=True)\n     \n     def __str__(self):\n         return f\"{self.name} - Contact: {self.contact_info if self.contact_info else 'N/A'}\"\n \n"
                },
                {
                    "date": 1726570815712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n     event = models.ManyToManyField(Event, related_name='organizer')\n     name = models.CharField(max_length=255)\n     \n     def __str__(self):\n-        return f\"{self.name} - Contact: {self.contact_info if self.contact_info else 'N/A'}\"\n+        return f\"{self.name} \"\n \n class Category(models.Model):\n     event = models.ManyToManyField(Event, related_name='category')\n     name = models.CharField(max_length=100)\n"
                },
                {
                    "date": 1726570881061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n     online_seat_limit = models.PositiveIntegerField(default=0)\n     offline_seat_limit = models.PositiveIntegerField(default=0)\n     is_seat_limit = models.BooleanField(default=False)\n     venue = models.CharField(max_length=255, blank=True, null=True)\n-    links = models.URLField(blank=True, null=True)\n+    eventlinks = models.URLField(blank=True, null=True)\n     registration_link = models.URLField(blank=True, null=True)\n     is_registration = models.BooleanField(default=False)\n     REGISTRATION_TYPE_CHOICES = [\n         ('paid', 'Paid'),\n@@ -65,9 +65,9 @@\n     event = models.ManyToManyField(Event, related_name='organizer')\n     name = models.CharField(max_length=255)\n     \n     def __str__(self):\n-        return f\"{self.name} \"\n+        return f\"{self.name}\"\n \n class Category(models.Model):\n     event = models.ManyToManyField(Event, related_name='category')\n     name = models.CharField(max_length=100)\n"
                },
                {
                    "date": 1726570931138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n     online_seat_limit = models.PositiveIntegerField(default=0)\n     offline_seat_limit = models.PositiveIntegerField(default=0)\n     is_seat_limit = models.BooleanField(default=False)\n     venue = models.CharField(max_length=255, blank=True, null=True)\n-    eventlinks = models.URLField(blank=True, null=True)\n+    event_links = models.URLField(blank=True, null=True)\n     registration_link = models.URLField(blank=True, null=True)\n     is_registration = models.BooleanField(default=False)\n     REGISTRATION_TYPE_CHOICES = [\n         ('paid', 'Paid'),\n@@ -49,8 +49,12 @@\n     price_type = models.CharField(max_length=100, blank=True, null=True)\n     price_country = models.CharField(max_length=100, blank=True, null=True)\n     description = models.TextField(blank=True, null=True)\n     \n+    created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n+    created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n+    updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n+    \n     def __str__(self):\n         return f\"{self.event_name} - {self.date.strftime('%Y-%m-%d')} ({self.type})\"\n \n class Image(models.Model):\n"
                },
                {
                    "date": 1726570937358,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,8 +61,12 @@\n     event = models.ManyToManyField(Event, related_name='images')\n     is_featured_image = models.BooleanField(default=False)\n     image = models.ImageField(upload_to='event_images/')\n     \n+    created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n+    created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n+    updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n+    \n     def __str__(self):\n         return f\"{self.image.url} - {'Featured' if self.is_featured_image else 'Standard'}\"\n \n class Organizer(models.Model):\n"
                },
                {
                    "date": 1726570947840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,13 +72,21 @@\n class Organizer(models.Model):\n     event = models.ManyToManyField(Event, related_name='organizer')\n     name = models.CharField(max_length=255)\n     \n+    created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n+    created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n+    updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n+    \n     def __str__(self):\n         return f\"{self.name}\"\n \n class Category(models.Model):\n     event = models.ManyToManyField(Event, related_name='category')\n     name = models.CharField(max_length=100)\n     \n+    created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n+    created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n+    updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n+    \n     def __str__(self):\n         return f\"{self.name}\"\n\\ No newline at end of file\n"
                },
                {
                    "date": 1726570962645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n     \n     def __str__(self):\n-        return f\"{self.event_name} - {self.date.strftime('%Y-%m-%d')} ({self.type})\"\n+        return f\"{self.event_name}\"\n \n class Image(models.Model):\n     event = models.ManyToManyField(Event, related_name='images')\n     is_featured_image = models.BooleanField(default=False)\n"
                },
                {
                    "date": 1726571646991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n from django.db import models\n \n class Event(models.Model):\n     event_name = models.CharField(max_length=255)\n-    date = models.DateTimeField()\n+    \n     duration = models.CharField(max_length=255)\n     TYPE_CHOICES = [\n         ('physical', 'Physical'),\n         ('online', 'Online'),\n"
                },
                {
                    "date": 1726571652208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,10 @@\n from django.db import models\n \n class Event(models.Model):\n     event_name = models.CharField(max_length=255)\n-    \n+    start_date = models.DateTimeField()\n+    end_date = models.DateTimeField()\n     duration = models.CharField(max_length=255)\n     TYPE_CHOICES = [\n         ('physical', 'Physical'),\n         ('online', 'Online'),\n"
                },
                {
                    "date": 1726571869591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,8 +72,9 @@\n \n class Organizer(models.Model):\n     event = models.ManyToManyField(Event, related_name='organizer')\n     name = models.CharField(max_length=255)\n+     image = models.ImageField(upload_to='event_images/')\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n"
                },
                {
                    "date": 1726571889481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,10 @@\n \n class Organizer(models.Model):\n     event = models.ManyToManyField(Event, related_name='organizer')\n     name = models.CharField(max_length=255)\n-     image = models.ImageField(upload_to='event_images/')\n+    image = models.ImageField(upload_to='event_images/')\n+    registration_link = models.URLField(blank=True, null=True)\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n"
                },
                {
                    "date": 1726571898777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n class Organizer(models.Model):\n     event = models.ManyToManyField(Event, related_name='organizer')\n     name = models.CharField(max_length=255)\n     image = models.ImageField(upload_to='event_images/')\n-    registration_link = models.URLField(blank=True, null=True)\n+    image_link = models.URLField(blank=True, null=True)\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n"
                },
                {
                    "date": 1726571954488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n \n class Organizer(models.Model):\n     event = models.ManyToManyField(Event, related_name='organizer')\n     name = models.CharField(max_length=255)\n-    image = models.ImageField(upload_to='event_images/')\n+    image = models.ImageField(upload_to='event_/')\n     image_link = models.URLField(blank=True, null=True)\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n"
                },
                {
                    "date": 1726571963882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n \n class Organizer(models.Model):\n     event = models.ManyToManyField(Event, related_name='organizer')\n     name = models.CharField(max_length=255)\n-    image = models.ImageField(upload_to='event_/')\n+    image = models.ImageField(upload_to='event_organizer/')\n     image_link = models.URLField(blank=True, null=True)\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n"
                },
                {
                    "date": 1726571991850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,8 +74,9 @@\n     event = models.ManyToManyField(Event, related_name='organizer')\n     name = models.CharField(max_length=255)\n     image = models.ImageField(upload_to='event_organizer/')\n     image_link = models.URLField(blank=True, null=True)\n+    is_seat_limit = models.BooleanField(default=False)\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n"
                },
                {
                    "date": 1726571999897,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n     event = models.ManyToManyField(Event, related_name='organizer')\n     name = models.CharField(max_length=255)\n     image = models.ImageField(upload_to='event_organizer/')\n     image_link = models.URLField(blank=True, null=True)\n-    is_seat_limit = models.BooleanField(default=False)\n+    is_organizer = models.BooleanField(default=False)\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n"
                },
                {
                    "date": 1726572895327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,8 @@\n \n class Category(models.Model):\n     event = models.ManyToManyField(Event, related_name='category')\n     name = models.CharField(max_length=100)\n-    \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n     \n"
                },
                {
                    "date": 1726572902394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,8 @@\n     def __str__(self):\n         return f\"{self.name}\"\n \n class Category(models.Model):\n-    event = models.ManyToManyField(Event, related_name='category')\n     name = models.CharField(max_length=100)\n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n"
                },
                {
                    "date": 1726573230974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,8 +50,10 @@\n     price_type = models.CharField(max_length=100, blank=True, null=True)\n     price_country = models.CharField(max_length=100, blank=True, null=True)\n     description = models.TextField(blank=True, null=True)\n     \n+    \n+    \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n     \n"
                },
                {
                    "date": 1726573237754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,10 +50,11 @@\n     price_type = models.CharField(max_length=100, blank=True, null=True)\n     price_country = models.CharField(max_length=100, blank=True, null=True)\n     description = models.TextField(blank=True, null=True)\n     \n+    cate = models.ManyToManyField(Event, related_name='images')\n+    event = models.ManyToManyField(Event, related_name='images')\n     \n-    \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n     \n"
                },
                {
                    "date": 1726573245355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n     price_type = models.CharField(max_length=100, blank=True, null=True)\n     price_country = models.CharField(max_length=100, blank=True, null=True)\n     description = models.TextField(blank=True, null=True)\n     \n-    cate = models.ManyToManyField(Event, related_name='images')\n+    categpry = models.ManyToManyField(Ca, related_name='images')\n     event = models.ManyToManyField(Event, related_name='images')\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n"
                },
                {
                    "date": 1726573253352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,10 +50,10 @@\n     price_type = models.CharField(max_length=100, blank=True, null=True)\n     price_country = models.CharField(max_length=100, blank=True, null=True)\n     description = models.TextField(blank=True, null=True)\n     \n-    categpry = models.ManyToManyField(Ca, related_name='images')\n-    event = models.ManyToManyField(Event, related_name='images')\n+    categpry = models.ManyToManyField(Category, related_name='images')\n+    organizer = models.ManyToManyField(Event, related_name='images')\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n"
                },
                {
                    "date": 1726573258902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,97 @@\n+# from django.db import models\n+\n+# # Create your models here.\n+# event_name\n+# date\n+# duration\n+# type --> physical,online,hybrid\n+# online seat limit\n+# offline seat limit\n+# is_seat_limit\n+# venue\n+# links\n+# registration links\n+# is_registration\n+# registration type--> paid,free \n+# amount\n+# price type\n+#price_country\n+# description\n+# images foreign key from model(multiple images)\n+# is_featured image\n+#  organizer name foreign key from model\n+#  categories name foreign key from model\n+from django.db import models\n+\n+class Event(models.Model):\n+    event_name = models.CharField(max_length=255)\n+    start_date = models.DateTimeField()\n+    end_date = models.DateTimeField()\n+    duration = models.CharField(max_length=255)\n+    TYPE_CHOICES = [\n+        ('physical', 'Physical'),\n+        ('online', 'Online'),\n+        ('hybrid', 'Hybrid'),\n+    ]\n+    type = models.CharField(max_length=10, choices=TYPE_CHOICES)\n+    online_seat_limit = models.PositiveIntegerField(default=0)\n+    offline_seat_limit = models.PositiveIntegerField(default=0)\n+    is_seat_limit = models.BooleanField(default=False)\n+    venue = models.CharField(max_length=255, blank=True, null=True)\n+    event_links = models.URLField(blank=True, null=True)\n+    registration_link = models.URLField(blank=True, null=True)\n+    is_registration = models.BooleanField(default=False)\n+    REGISTRATION_TYPE_CHOICES = [\n+        ('paid', 'Paid'),\n+        ('free', 'Free'),\n+    ]\n+    registration_type = models.CharField(max_length=10, choices=REGISTRATION_TYPE_CHOICES, default='free')\n+    amount = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)\n+    price_type = models.CharField(max_length=100, blank=True, null=True)\n+    price_country = models.CharField(max_length=100, blank=True, null=True)\n+    description = models.TextField(blank=True, null=True)\n+    \n+    categpry = models.ManyToManyField(Category, related_name='images')\n+    organizer = models.ManyToManyField(Organizer, related_name='images')\n+    \n+    created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n+    created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n+    updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n+    \n+    def __str__(self):\n+        return f\"{self.event_name}\"\n+\n+class Image(models.Model):\n+    event = models.ManyToManyField(Event, related_name='images')\n+    is_featured_image = models.BooleanField(default=False)\n+    image = models.ImageField(upload_to='event_images/')\n+    \n+    created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n+    created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n+    updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n+    \n+    def __str__(self):\n+        return f\"{self.image.url} - {'Featured' if self.is_featured_image else 'Standard'}\"\n+\n+class Organizer(models.Model):\n+    event = models.ManyToManyField(Event, related_name='organizer')\n+    name = models.CharField(max_length=255)\n+    image = models.ImageField(upload_to='event_organizer/')\n+    image_link = models.URLField(blank=True, null=True)\n+    is_organizer = models.BooleanField(default=False)\n+    \n+    created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n+    created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n+    updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n+    \n+    def __str__(self):\n+        return f\"{self.name}\"\n+\n+class Category(models.Model):\n+    name = models.CharField(max_length=100)\n+    created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n+    created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n+    updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n+    \n+    def __str__(self):\n+        return f\"{self.name}\"\n\\ No newline at end of file\n"
                },
                {
                    "date": 1726573276097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,135 +60,4 @@\n     \n     def __str__(self):\n         return f\"{self.event_name}\"\n \n-class Image(models.Model):\n-    event = models.ManyToManyField(Event, related_name='images')\n-    is_featured_image = models.BooleanField(default=False)\n-    image = models.ImageField(upload_to='event_images/')\n-    \n-    created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n-    created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n-    updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n-    \n-    def __str__(self):\n-        return f\"{self.image.url} - {'Featured' if self.is_featured_image else 'Standard'}\"\n-\n-class Organizer(models.Model):\n-    event = models.ManyToManyField(Event, related_name='organizer')\n-    name = models.CharField(max_length=255)\n-    image = models.ImageField(upload_to='event_organizer/')\n-    image_link = models.URLField(blank=True, null=True)\n-    is_organizer = models.BooleanField(default=False)\n-    \n-    created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n-    created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n-    updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n-    \n-    def __str__(self):\n-        return f\"{self.name}\"\n-\n-class Category(models.Model):\n-    name = models.CharField(max_length=100)\n-    created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n-    created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n-    updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n-    \n-    def __str__(self):\n-        return f\"{self.name}\"\n-# from django.db import models\n-\n-# # Create your models here.\n-# event_name\n-# date\n-# duration\n-# type --> physical,online,hybrid\n-# online seat limit\n-# offline seat limit\n-# is_seat_limit\n-# venue\n-# links\n-# registration links\n-# is_registration\n-# registration type--> paid,free \n-# amount\n-# price type\n-#price_country\n-# description\n-# images foreign key from model(multiple images)\n-# is_featured image\n-#  organizer name foreign key from model\n-#  categories name foreign key from model\n-from django.db import models\n-\n-class Event(models.Model):\n-    event_name = models.CharField(max_length=255)\n-    start_date = models.DateTimeField()\n-    end_date = models.DateTimeField()\n-    duration = models.CharField(max_length=255)\n-    TYPE_CHOICES = [\n-        ('physical', 'Physical'),\n-        ('online', 'Online'),\n-        ('hybrid', 'Hybrid'),\n-    ]\n-    type = models.CharField(max_length=10, choices=TYPE_CHOICES)\n-    online_seat_limit = models.PositiveIntegerField(default=0)\n-    offline_seat_limit = models.PositiveIntegerField(default=0)\n-    is_seat_limit = models.BooleanField(default=False)\n-    venue = models.CharField(max_length=255, blank=True, null=True)\n-    event_links = models.URLField(blank=True, null=True)\n-    registration_link = models.URLField(blank=True, null=True)\n-    is_registration = models.BooleanField(default=False)\n-    REGISTRATION_TYPE_CHOICES = [\n-        ('paid', 'Paid'),\n-        ('free', 'Free'),\n-    ]\n-    registration_type = models.CharField(max_length=10, choices=REGISTRATION_TYPE_CHOICES, default='free')\n-    amount = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)\n-    price_type = models.CharField(max_length=100, blank=True, null=True)\n-    price_country = models.CharField(max_length=100, blank=True, null=True)\n-    description = models.TextField(blank=True, null=True)\n-    \n-    categpry = models.ManyToManyField(Category, related_name='images')\n-    organizer = models.ManyToManyField(Event, related_name='images')\n-    \n-    created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n-    created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n-    updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n-    \n-    def __str__(self):\n-        return f\"{self.event_name}\"\n-\n-class Image(models.Model):\n-    event = models.ManyToManyField(Event, related_name='images')\n-    is_featured_image = models.BooleanField(default=False)\n-    image = models.ImageField(upload_to='event_images/')\n-    \n-    created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n-    created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n-    updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n-    \n-    def __str__(self):\n-        return f\"{self.image.url} - {'Featured' if self.is_featured_image else 'Standard'}\"\n-\n-class Organizer(models.Model):\n-    event = models.ManyToManyField(Event, related_name='organizer')\n-    name = models.CharField(max_length=255)\n-    image = models.ImageField(upload_to='event_organizer/')\n-    image_link = models.URLField(blank=True, null=True)\n-    is_organizer = models.BooleanField(default=False)\n-    \n-    created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n-    created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n-    updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n-    \n-    def __str__(self):\n-        return f\"{self.name}\"\n-\n-class Category(models.Model):\n-    name = models.CharField(max_length=100)\n-    created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n-    created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n-    updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n-    \n-    def __str__(self):\n-        return f\"{self.name}\"\n\\ No newline at end of file\n"
                },
                {
                    "date": 1726573281384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,44 @@\n #  organizer name foreign key from model\n #  categories name foreign key from model\n from django.db import models\n \n+\n+class Image(models.Model):\n+    event = models.ManyToManyField(Event, related_name='images')\n+    is_featured_image = models.BooleanField(default=False)\n+    image = models.ImageField(upload_to='event_images/')\n+    \n+    created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n+    created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n+    updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n+    \n+    def __str__(self):\n+        return f\"{self.image.url} - {'Featured' if self.is_featured_image else 'Standard'}\"\n+\n+class Organizer(models.Model):\n+    event = models.ManyToManyField(Event, related_name='organizer')\n+    name = models.CharField(max_length=255)\n+    image = models.ImageField(upload_to='event_organizer/')\n+    image_link = models.URLField(blank=True, null=True)\n+    is_organizer = models.BooleanField(default=False)\n+    \n+    created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n+    created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n+    updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n+    \n+    def __str__(self):\n+        return f\"{self.name}\"\n+\n+class Category(models.Model):\n+    name = models.CharField(max_length=100)\n+    created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n+    created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n+    updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n+    \n+    def __str__(self):\n+        return f\"{self.name}\"\n+\n class Event(models.Model):\n     event_name = models.CharField(max_length=255)\n     start_date = models.DateTimeField()\n     end_date = models.DateTimeField()\n"
                },
                {
                    "date": 1726573296953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,8 @@\n     def __str__(self):\n         return f\"{self.image.url} - {'Featured' if self.is_featured_image else 'Standard'}\"\n \n class Organizer(models.Model):\n-    event = models.ManyToManyField(Event, related_name='organizer')\n     name = models.CharField(max_length=255)\n     image = models.ImageField(upload_to='event_organizer/')\n     image_link = models.URLField(blank=True, null=True)\n     is_organizer = models.BooleanField(default=False)\n"
                },
                {
                    "date": 1726573311621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,20 +23,10 @@\n #  categories name foreign key from model\n from django.db import models\n \n \n-class Image(models.Model):\n-    event = models.ManyToManyField(Event, related_name='images')\n-    is_featured_image = models.BooleanField(default=False)\n-    image = models.ImageField(upload_to='event_images/')\n-    \n-    created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n-    created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n-    updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n-    \n-    def __str__(self):\n-        return f\"{self.image.url} - {'Featured' if self.is_featured_image else 'Standard'}\"\n \n+\n class Organizer(models.Model):\n     name = models.CharField(max_length=255)\n     image = models.ImageField(upload_to='event_organizer/')\n     image_link = models.URLField(blank=True, null=True)\n"
                },
                {
                    "date": 1726573326370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n     price_type = models.CharField(max_length=100, blank=True, null=True)\n     price_country = models.CharField(max_length=100, blank=True, null=True)\n     description = models.TextField(blank=True, null=True)\n     \n-    categpry = models.ManyToManyField(Category, related_name='images')\n+    category = models.ManyToManyField(Category, related_name='images')\n     organizer = models.ManyToManyField(Organizer, related_name='images')\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n@@ -85,4 +85,15 @@\n     \n     def __str__(self):\n         return f\"{self.event_name}\"\n \n+class Image(models.Model):\n+    event = models.ManyToManyField(Event, related_name='images')\n+    is_featured_image = models.BooleanField(default=False)\n+    image = models.ImageField(upload_to='event_images/')\n+    \n+    created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n+    created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n+    updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n+    \n+    def __str__(self):\n+        return f\"{self.image.url} - {'Featured' if self.is_featured_image else 'Standard'}\"\n\\ No newline at end of file\n"
                },
                {
                    "date": 1726573333332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n     price_type = models.CharField(max_length=100, blank=True, null=True)\n     price_country = models.CharField(max_length=100, blank=True, null=True)\n     description = models.TextField(blank=True, null=True)\n     \n-    category = models.ManyToManyField(Category, related_name='images')\n+    category = models.ManyToManyField(Category, related_name='category')\n     organizer = models.ManyToManyField(Organizer, related_name='images')\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n"
                },
                {
                    "date": 1726638406492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,11 +74,12 @@\n     amount = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)\n     price_type = models.CharField(max_length=100, blank=True, null=True)\n     price_country = models.CharField(max_length=100, blank=True, null=True)\n     description = models.TextField(blank=True, null=True)\n+    is_registration = models.BooleanField(default=False)\n     \n     category = models.ManyToManyField(Category, related_name='category')\n-    organizer = models.ManyToManyField(Organizer, related_name='images')\n+    organizer = models.ManyToManyField(Organizer, related_name='organizer')\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n"
                },
                {
                    "date": 1726638415915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n     amount = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)\n     price_type = models.CharField(max_length=100, blank=True, null=True)\n     price_country = models.CharField(max_length=100, blank=True, null=True)\n     description = models.TextField(blank=True, null=True)\n-    is_registration = models.BooleanField(default=False)\n+    is_featured_event = models.BooleanField(default=False)\n     \n     category = models.ManyToManyField(Category, related_name='category')\n     organizer = models.ManyToManyField(Organizer, related_name='organizer')\n     \n"
                },
                {
                    "date": 1726650714882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n     \n     def __str__(self):\n         return f\"{self.name}\"\n \n-class Category(models.Model):\n+class EventCategory(models.Model):\n     name = models.CharField(max_length=100)\n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n"
                },
                {
                    "date": 1726650725116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n     price_country = models.CharField(max_length=100, blank=True, null=True)\n     description = models.TextField(blank=True, null=True)\n     is_featured_event = models.BooleanField(default=False)\n     \n-    category = models.ManyToManyField(Category, related_name='category')\n+    category = models.ManyToManyField(EventCategory, related_name='category')\n     organizer = models.ManyToManyField(Organizer, related_name='organizer')\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n"
                },
                {
                    "date": 1726650837009,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n \n \n \n \n-class Organizer(models.Model):\n+class EventOrganizer(models.Model):\n     name = models.CharField(max_length=255)\n     image = models.ImageField(upload_to='event_organizer/')\n     image_link = models.URLField(blank=True, null=True)\n     is_organizer = models.BooleanField(default=False)\n"
                },
                {
                    "date": 1726650843370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n     description = models.TextField(blank=True, null=True)\n     is_featured_event = models.BooleanField(default=False)\n     \n     category = models.ManyToManyField(EventCategory, related_name='category')\n-    organizer = models.ManyToManyField(Organizer, related_name='organizer')\n+    organizer = models.ManyToManyField(EventOrganizer, related_name='organizer')\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n"
                },
                {
                    "date": 1726660772128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n     price_country = models.CharField(max_length=100, blank=True, null=True)\n     description = models.TextField(blank=True, null=True)\n     is_featured_event = models.BooleanField(default=False)\n     \n-    category = models.ManyToManyField(EventCategory, related_name='category')\n+    category = models.ManyToManyField(EventCategory, related_name='ecategory')\n     organizer = models.ManyToManyField(EventOrganizer, related_name='organizer')\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n"
                },
                {
                    "date": 1726660795556,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n     price_country = models.CharField(max_length=100, blank=True, null=True)\n     description = models.TextField(blank=True, null=True)\n     is_featured_event = models.BooleanField(default=False)\n     \n-    category = models.ManyToManyField(EventCategory, related_name='ecategory')\n+    category = models.ManyToManyField(EventCategory)\n     organizer = models.ManyToManyField(EventOrganizer, related_name='organizer')\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n"
                },
                {
                    "date": 1726660810337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n     price_country = models.CharField(max_length=100, blank=True, null=True)\n     description = models.TextField(blank=True, null=True)\n     is_featured_event = models.BooleanField(default=False)\n     \n-    category = models.ManyToManyField(EventCategory)\n+    category = models.ManyToManyField(EventCategory, related_name='event_category')\n     organizer = models.ManyToManyField(EventOrganizer, related_name='organizer')\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n"
                },
                {
                    "date": 1733306636066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n     \n     def __str__(self):\n         return f\"{self.event_name}\"\n \n-class Image(models.Model):\n+class Event(models.Model):\n     event = models.ManyToManyField(Event, related_name='images')\n     is_featured_image = models.BooleanField(default=False)\n     image = models.ImageField(upload_to='event_images/')\n     \n"
                },
                {
                    "date": 1733306663853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n     \n     def __str__(self):\n         return f\"{self.event_name}\"\n \n-class Event(models.Model):\n+class EventGallery(models.Model):\n     event = models.ManyToManyField(Event, related_name='images')\n     is_featured_image = models.BooleanField(default=False)\n     image = models.ImageField(upload_to='event_images/')\n     \n"
                },
                {
                    "date": 1733306780854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n         ('physical', 'Physical'),\n         ('online', 'Online'),\n         ('hybrid', 'Hybrid'),\n     ]\n-    type = models.CharField(max_length=10, choices=TYPE_CHOICES)\n+    eventtype = models.CharField(max_length=10, choices=TYPE_CHOICES)\n     online_seat_limit = models.PositiveIntegerField(default=0)\n     offline_seat_limit = models.PositiveIntegerField(default=0)\n     is_seat_limit = models.BooleanField(default=False)\n     venue = models.CharField(max_length=255, blank=True, null=True)\n"
                },
                {
                    "date": 1733306811097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,13 +57,13 @@\n         ('physical', 'Physical'),\n         ('online', 'Online'),\n         ('hybrid', 'Hybrid'),\n     ]\n-    eventtype = models.CharField(max_length=10, choices=TYPE_CHOICES)\n+    event_type = models.CharField(max_length=10, choices=TYPE_CHOICES)\n+    venue = models.CharField(max_length=255, blank=True, null=True)\n     online_seat_limit = models.PositiveIntegerField(default=0)\n     offline_seat_limit = models.PositiveIntegerField(default=0)\n     is_seat_limit = models.BooleanField(default=False)\n-    venue = models.CharField(max_length=255, blank=True, null=True)\n     event_links = models.URLField(blank=True, null=True)\n     registration_link = models.URLField(blank=True, null=True)\n     is_registration = models.BooleanField(default=False)\n     REGISTRATION_TYPE_CHOICES = [\n"
                },
                {
                    "date": 1733306818255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,8 +59,9 @@\n         ('hybrid', 'Hybrid'),\n     ]\n     event_type = models.CharField(max_length=10, choices=TYPE_CHOICES)\n     venue = models.CharField(max_length=255, blank=True, null=True)\n+    \n     online_seat_limit = models.PositiveIntegerField(default=0)\n     offline_seat_limit = models.PositiveIntegerField(default=0)\n     is_seat_limit = models.BooleanField(default=False)\n     event_links = models.URLField(blank=True, null=True)\n"
                },
                {
                    "date": 1733306966390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n     venue = models.CharField(max_length=255, blank=True, null=True)\n     \n     online_seat_limit = models.PositiveIntegerField(default=0)\n     offline_seat_limit = models.PositiveIntegerField(default=0)\n-    is_seat_limit = models.BooleanField(default=False)\n+    is_offlineseat_limit = models.BooleanField(default=False)\n     event_links = models.URLField(blank=True, null=True)\n     registration_link = models.URLField(blank=True, null=True)\n     is_registration = models.BooleanField(default=False)\n     REGISTRATION_TYPE_CHOICES = [\n"
                },
                {
                    "date": 1733306974782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,10 @@\n     venue = models.CharField(max_length=255, blank=True, null=True)\n     \n     online_seat_limit = models.PositiveIntegerField(default=0)\n     offline_seat_limit = models.PositiveIntegerField(default=0)\n-    is_offlineseat_limit = models.BooleanField(default=False)\n+    is_offline_seat_limit = models.BooleanField(default=False)\n+    is_online_seat_limit = models.BooleanField(default=False)\n     event_links = models.URLField(blank=True, null=True)\n     registration_link = models.URLField(blank=True, null=True)\n     is_registration = models.BooleanField(default=False)\n     REGISTRATION_TYPE_CHOICES = [\n"
                },
                {
                    "date": 1733306982916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,8 +64,9 @@\n     online_seat_limit = models.PositiveIntegerField(default=0)\n     offline_seat_limit = models.PositiveIntegerField(default=0)\n     is_offline_seat_limit = models.BooleanField(default=False)\n     is_online_seat_limit = models.BooleanField(default=False)\n+    \n     event_links = models.URLField(blank=True, null=True)\n     registration_link = models.URLField(blank=True, null=True)\n     is_registration = models.BooleanField(default=False)\n     REGISTRATION_TYPE_CHOICES = [\n"
                },
                {
                    "date": 1733307016844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,11 +65,11 @@\n     offline_seat_limit = models.PositiveIntegerField(default=0)\n     is_offline_seat_limit = models.BooleanField(default=False)\n     is_online_seat_limit = models.BooleanField(default=False)\n     \n+    is_registration = models.BooleanField(default=False)\n     event_links = models.URLField(blank=True, null=True)\n     registration_link = models.URLField(blank=True, null=True)\n-    is_registration = models.BooleanField(default=False)\n     REGISTRATION_TYPE_CHOICES = [\n         ('paid', 'Paid'),\n         ('free', 'Free'),\n     ]\n"
                },
                {
                    "date": 1733307026551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n     is_offline_seat_limit = models.BooleanField(default=False)\n     is_online_seat_limit = models.BooleanField(default=False)\n     \n     is_registration = models.BooleanField(default=False)\n-    event_links = models.URLField(blank=True, null=True)\n+    e_links = models.URLField(blank=True, null=True)\n     registration_link = models.URLField(blank=True, null=True)\n     REGISTRATION_TYPE_CHOICES = [\n         ('paid', 'Paid'),\n         ('free', 'Free'),\n"
                },
                {
                    "date": 1733307035356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n     is_offline_seat_limit = models.BooleanField(default=False)\n     is_online_seat_limit = models.BooleanField(default=False)\n     \n     is_registration = models.BooleanField(default=False)\n-    e_links = models.URLField(blank=True, null=True)\n+    event_links = models.URLField(blank=True, null=True)\n     registration_link = models.URLField(blank=True, null=True)\n     REGISTRATION_TYPE_CHOICES = [\n         ('paid', 'Paid'),\n         ('free', 'Free'),\n"
                },
                {
                    "date": 1733307202373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,15 +66,16 @@\n     is_offline_seat_limit = models.BooleanField(default=False)\n     is_online_seat_limit = models.BooleanField(default=False)\n     \n     is_registration = models.BooleanField(default=False)\n-    event_links = models.URLField(blank=True, null=True)\n     registration_link = models.URLField(blank=True, null=True)\n+    # event_links = models.URLField(blank=True, null=True)\n     REGISTRATION_TYPE_CHOICES = [\n         ('paid', 'Paid'),\n         ('free', 'Free'),\n     ]\n     registration_type = models.CharField(max_length=10, choices=REGISTRATION_TYPE_CHOICES, default='free')\n+    \n     amount = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)\n     price_type = models.CharField(max_length=100, blank=True, null=True)\n     price_country = models.CharField(max_length=100, blank=True, null=True)\n     description = models.TextField(blank=True, null=True)\n"
                },
                {
                    "date": 1733307228313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,8 @@\n     registration_type = models.CharField(max_length=10, choices=REGISTRATION_TYPE_CHOICES, default='free')\n     \n     amount = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)\n     price_type = models.CharField(max_length=100, blank=True, null=True)\n-    price_country = models.CharField(max_length=100, blank=True, null=True)\n     description = models.TextField(blank=True, null=True)\n     is_featured_event = models.BooleanField(default=False)\n     \n     category = models.ManyToManyField(EventCategory, related_name='event_category')\n"
                },
                {
                    "date": 1733307299155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,10 @@\n     ]\n     registration_type = models.CharField(max_length=10, choices=REGISTRATION_TYPE_CHOICES, default='free')\n     \n     amount = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)\n-    price_type = models.CharField(max_length=100, blank=True, null=True)\n+    amount_type = models.CharField(max_length=100, blank=True, null=True)\n+    amount_type = models.CharField(max_length=100, blank=True, null=True)\n     description = models.TextField(blank=True, null=True)\n     is_featured_event = models.BooleanField(default=False)\n     \n     category = models.ManyToManyField(EventCategory, related_name='event_category')\n"
                },
                {
                    "date": 1733307306052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,10 @@\n     registration_type = models.CharField(max_length=10, choices=REGISTRATION_TYPE_CHOICES, default='free')\n     \n     amount = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)\n     amount_type = models.CharField(max_length=100, blank=True, null=True)\n-    amount_type = models.CharField(max_length=100, blank=True, null=True)\n+    amount_country = models.CharField(max_length=100, blank=True, null=True)\n+    \n     description = models.TextField(blank=True, null=True)\n     is_featured_event = models.BooleanField(default=False)\n     \n     category = models.ManyToManyField(EventCategory, related_name='event_category')\n"
                },
                {
                    "date": 1733307376321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,9 @@\n     amount_type = models.CharField(max_length=100, blank=True, null=True)\n     amount_country = models.CharField(max_length=100, blank=True, null=True)\n     \n     description = models.TextField(blank=True, null=True)\n-    is_featured_event = models.BooleanField(default=False)\n+    # is_featured_event = models.BooleanField(default=False)\n     \n     category = models.ManyToManyField(EventCategory, related_name='event_category')\n     organizer = models.ManyToManyField(EventOrganizer, related_name='organizer')\n     \n"
                },
                {
                    "date": 1733307415316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,17 +79,19 @@\n     amount_type = models.CharField(max_length=100, blank=True, null=True)\n     amount_country = models.CharField(max_length=100, blank=True, null=True)\n     \n     description = models.TextField(blank=True, null=True)\n-    # is_featured_event = models.BooleanField(default=False)\n+    is_featured_event = models.BooleanField(default=False)\n     \n     category = models.ManyToManyField(EventCategory, related_name='event_category')\n     organizer = models.ManyToManyField(EventOrganizer, related_name='organizer')\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n     \n+    \n+    \n     def __str__(self):\n         return f\"{self.event_name}\"\n \n class EventGallery(models.Model):\n"
                },
                {
                    "date": 1733307503446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,29 @@\n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n     \n+    # SEO Meta Tags\n+    meta_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for search engines.\")\n+    meta_tag = models.CharField(max_length=255, blank=True, null=True, help_text=\"Primary meta tag for SEO.\")\n+    meta_description = models.TextField(blank=True, null=True, help_text=\"Short description for SEO.\")\n+    meta_keywords = models.TextField(blank=True, null=True, help_text=\"Comma-separated keywords for SEO.\")\n+    meta_author = models.CharField(max_length=255, blank=True, null=True, help_text=\"Author information for SEO.\")\n+    canonical_url = models.URLField(blank=True, null=True, help_text=\"Canonical URL to avoid duplicate content.\")\n+\n+    # Open Graph (OG) Tags (Social Sharing)\n+    og_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for social sharing.\")\n+    og_description = models.TextField(blank=True, null=True, help_text=\"Description for social sharing.\")\n+    og_url = models.URLField(blank=True, null=True, help_text=\"URL to share on social platforms.\")\n+    og_image =  models.ImageField(upload_to='college/og_image/',null=True,blank=True)\n+    og_type = models.CharField(max_length=50, blank=True, null=True, help_text=\"Type of the OG content (e.g., website, article).\")\n+    og_locale = models.CharField(max_length=10, blank=True, null=True, default=\"en_US\", help_text=\"Locale for OG tags (e.g., en_US).\")\n     \n+    # Dublin Core Metadata\n+    dc_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for Dublin Core Metadata.\")\n+    dc_description = models.TextField(blank=True, null=True, help_text=\"Description for Dublin Core Metadata.\")\n+    dc_language = models.CharField(max_length=10, blank=True, null=True, default=\"en\", help_text=\"Language code for Dublin Core Metadata (e.g., en, fr).\")\n+\n     \n     def __str__(self):\n         return f\"{self.event_name}\"\n \n"
                },
                {
                    "date": 1733307663167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n \n class EventOrganizer(models.Model):\n     name = models.CharField(max_length=255)\n     image = models.ImageField(upload_to='event_organizer/')\n-    image_link = models.URLField(blank=True, null=True)\n+    link = models.URLField(blank=True, null=True)\n     is_organizer = models.BooleanField(default=False)\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n"
                },
                {
                    "date": 1733307673100,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n class EventOrganizer(models.Model):\n     name = models.CharField(max_length=255)\n     image = models.ImageField(upload_to='event_organizer/')\n     link = models.URLField(blank=True, null=True)\n-    is_organizer = models.BooleanField(default=False)\n+    is_show = models.BooleanField(default=False)\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n"
                },
                {
                    "date": 1733378135680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n     # Open Graph (OG) Tags (Social Sharing)\n     og_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for social sharing.\")\n     og_description = models.TextField(blank=True, null=True, help_text=\"Description for social sharing.\")\n     og_url = models.URLField(blank=True, null=True, help_text=\"URL to share on social platforms.\")\n-    og_image =  models.ImageField(upload_to='college/og_image/',null=True,blank=True)\n+    og_image =  models.ImageField(upload_to='event/og_image/',null=True,blank=True)\n     og_type = models.CharField(max_length=50, blank=True, null=True, help_text=\"Type of the OG content (e.g., website, article).\")\n     og_locale = models.CharField(max_length=10, blank=True, null=True, default=\"en_US\", help_text=\"Locale for OG tags (e.g., en_US).\")\n     \n     # Dublin Core Metadata\n"
                },
                {
                    "date": 1733393863746,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,31 +87,10 @@\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n-    \n-    # SEO Meta Tags\n-    meta_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for search engines.\")\n-    meta_tag = models.CharField(max_length=255, blank=True, null=True, help_text=\"Primary meta tag for SEO.\")\n-    meta_description = models.TextField(blank=True, null=True, help_text=\"Short description for SEO.\")\n-    meta_keywords = models.TextField(blank=True, null=True, help_text=\"Comma-separated keywords for SEO.\")\n-    meta_author = models.CharField(max_length=255, blank=True, null=True, help_text=\"Author information for SEO.\")\n-    canonical_url = models.URLField(blank=True, null=True, help_text=\"Canonical URL to avoid duplicate content.\")\n \n-    # Open Graph (OG) Tags (Social Sharing)\n-    og_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for social sharing.\")\n-    og_description = models.TextField(blank=True, null=True, help_text=\"Description for social sharing.\")\n-    og_url = models.URLField(blank=True, null=True, help_text=\"URL to share on social platforms.\")\n-    og_image =  models.ImageField(upload_to='event/og_image/',null=True,blank=True)\n-    og_type = models.CharField(max_length=50, blank=True, null=True, help_text=\"Type of the OG content (e.g., website, article).\")\n-    og_locale = models.CharField(max_length=10, blank=True, null=True, default=\"en_US\", help_text=\"Locale for OG tags (e.g., en_US).\")\n     \n-    # Dublin Core Metadata\n-    dc_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for Dublin Core Metadata.\")\n-    dc_description = models.TextField(blank=True, null=True, help_text=\"Description for Dublin Core Metadata.\")\n-    dc_language = models.CharField(max_length=10, blank=True, null=True, default=\"en\", help_text=\"Language code for Dublin Core Metadata (e.g., en, fr).\")\n-\n-    \n     def __str__(self):\n         return f\"{self.event_name}\"\n \n class EventGallery(models.Model):\n"
                },
                {
                    "date": 1733393869615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,12 +21,12 @@\n # is_featured image\n #  organizer name foreign key from model\n #  categories name foreign key from model\n from django.db import models\n+SEOFields\n \n \n \n-\n class EventOrganizer(models.Model):\n     name = models.CharField(max_length=255)\n     image = models.ImageField(upload_to='event_organizer/')\n     link = models.URLField(blank=True, null=True)\n"
                },
                {
                    "date": 1733393875419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n # is_featured image\n #  organizer name foreign key from model\n #  categories name foreign key from model\n from django.db import models\n-SEOFields\n+from \n \n \n \n class EventOrganizer(models.Model):\n"
                },
                {
                    "date": 1733393880844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n # is_featured image\n #  organizer name foreign key from model\n #  categories name foreign key from model\n from django.db import models\n-from \n+from mainproj.utilities.seo import SEOFields\n \n \n \n class EventOrganizer(models.Model):\n"
                },
                {
                    "date": 1733393887081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n     \n     def __str__(self):\n         return f\"{self.name}\"\n \n-class Event(models.Model):\n+class Event(SEOFields):\n     event_name = models.CharField(max_length=255)\n     start_date = models.DateTimeField()\n     end_date = models.DateTimeField()\n     duration = models.CharField(max_length=255)\n"
                },
                {
                    "date": 1733468793299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n \n class Event(SEOFields):\n     event_name = models.CharField(max_length=255)\n     start_date = models.DateTimeField()\n-    end_date = models.DateTimeField()\n+    end_date = models.DateTimeField(null=True)\n     duration = models.CharField(max_length=255)\n     TYPE_CHOICES = [\n         ('physical', 'Physical'),\n         ('online', 'Online'),\n@@ -93,9 +93,9 @@\n     def __str__(self):\n         return f\"{self.event_name}\"\n \n class EventGallery(models.Model):\n-    event = models.ManyToManyField(Event, related_name='images')\n+    event = models.ForeignKey\n     is_featured_image = models.BooleanField(default=False)\n     image = models.ImageField(upload_to='event_images/')\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n"
                },
                {
                    "date": 1733468799974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n \n class Event(SEOFields):\n     event_name = models.CharField(max_length=255)\n     start_date = models.DateTimeField()\n-    end_date = models.DateTimeField(null=True)\n+    end_date = models.DateTimeField(null=True,blank=True)\n     duration = models.CharField(max_length=255)\n     TYPE_CHOICES = [\n         ('physical', 'Physical'),\n         ('online', 'Online'),\n"
                },
                {
                    "date": 1733468810785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n         return f\"{self.name}\"\n \n class Event(SEOFields):\n     event_name = models.CharField(max_length=255)\n-    start_date = models.DateTimeField()\n+    start_date = models.DateTimeField(null=True,blank=True))\n     end_date = models.DateTimeField(null=True,blank=True)\n     duration = models.CharField(max_length=255)\n     TYPE_CHOICES = [\n         ('physical', 'Physical'),\n"
                },
                {
                    "date": 1733642232693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n         return f\"{self.name}\"\n \n class Event(SEOFields):\n     event_name = models.CharField(max_length=255)\n-    start_date = models.DateTimeField(null=True,blank=True))\n+    start_date = models.DateTimeField(null=True,blank=True)\n     end_date = models.DateTimeField(null=True,blank=True)\n     duration = models.CharField(max_length=255)\n     TYPE_CHOICES = [\n         ('physical', 'Physical'),\n@@ -91,8 +91,10 @@\n \n     \n     def __str__(self):\n         return f\"{self.event_name}\"\n+    \n+    class Meta:\n \n class EventGallery(models.Model):\n     event = models.ForeignKey\n     is_featured_image = models.BooleanField(default=False)\n"
                },
                {
                    "date": 1733642238103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,8 +93,11 @@\n     def __str__(self):\n         return f\"{self.event_name}\"\n     \n     class Meta:\n+        permissions = [\n+            \n+        ]\n \n class EventGallery(models.Model):\n     event = models.ForeignKey\n     is_featured_image = models.BooleanField(default=False)\n"
                },
                {
                    "date": 1733642247701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n         return f\"{self.event_name}\"\n     \n     class Meta:\n         permissions = [\n-            \n+            (\"manageevent\", \"Can view event\"),\n         ]\n \n class EventGallery(models.Model):\n     event = models.ForeignKey\n"
                },
                {
                    "date": 1733642254717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n         return f\"{self.event_name}\"\n     \n     class Meta:\n         permissions = [\n-            (\"manageevent\", \"Can view event\"),\n+            (\"manage_event\", \"Manage event\"),\n         ]\n \n class EventGallery(models.Model):\n     event = models.ForeignKey\n"
                },
                {
                    "date": 1733642260081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n         return f\"{self.event_name}\"\n     \n     class Meta:\n         permissions = [\n-            (\"manage_event\", \"Manage event\"),\n+            (\"manage_event\", \"Manage Event\"),\n         ]\n \n class EventGallery(models.Model):\n     event = models.ForeignKey\n@@ -107,5 +107,7 @@\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n     \n     def __str__(self):\n-        return f\"{self.image.url} - {'Featured' if self.is_featured_image else 'Standard'}\"\n\\ No newline at end of file\n+        return f\"{self.image.url} - {'Featured' if self.is_featured_image else 'Standard'}\"\n+    \n+    \n\\ No newline at end of file\n"
                },
                {
                    "date": 1733642265251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,5 +109,8 @@\n     \n     def __str__(self):\n         return f\"{self.image.url} - {'Featured' if self.is_featured_image else 'Standard'}\"\n     \n-    \n\\ No newline at end of file\n+    class Meta:\n+        permissions = [\n+            (\"manage_event_gallery\", \"Manage Event Gallery\"),\n+        ]\n\\ No newline at end of file\n"
                },
                {
                    "date": 1737953207811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n \n class EventGallery(models.Model):\n     event = models.ForeignKey\n     is_featured_image = models.BooleanField(default=False)\n-    image = models.ImageField(upload_to='event_images/')\n+    image = models.ImageField(upload_to='event_images/',null)\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n"
                },
                {
                    "date": 1738211993977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,8 +48,9 @@\n     def __str__(self):\n         return f\"{self.name}\"\n \n class Event(SEOFields):\n+    \n     event_name = models.CharField(max_length=255)\n     start_date = models.DateTimeField(null=True,blank=True)\n     end_date = models.DateTimeField(null=True,blank=True)\n     duration = models.CharField(max_length=255)\n@@ -100,9 +101,9 @@\n \n class EventGallery(models.Model):\n     event = models.ForeignKey\n     is_featured_image = models.BooleanField(default=False)\n-    image = models.ImageField(upload_to='event_images/',null)\n+    image = models.ImageField(upload_to='event_images/',null=True,blank=True)\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n"
                },
                {
                    "date": 1738212007902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,10 @@\n     def __str__(self):\n         return f\"{self.name}\"\n \n class Event(SEOFields):\n-    \n+    public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n+    slug = models.SlugField(max_length=255, unique=True, null=True, blank=True)\n     event_name = models.CharField(max_length=255)\n     start_date = models.DateTimeField(null=True,blank=True)\n     end_date = models.DateTimeField(null=True,blank=True)\n     duration = models.CharField(max_length=255)\n"
                },
                {
                    "date": 1738212017008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n #  organizer name foreign key from model\n #  categories name foreign key from model\n from django.db import models\n from mainproj.utilities.seo import SEOFields\n+import uuid\n \n \n \n class EventOrganizer(models.Model):\n"
                },
                {
                    "date": 1738212022704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,11 +23,13 @@\n #  categories name foreign key from model\n from django.db import models\n from mainproj.utilities.seo import SEOFields\n import uuid\n+from django.utils.text import slugify\n \n \n \n+\n class EventOrganizer(models.Model):\n     name = models.CharField(max_length=255)\n     image = models.ImageField(upload_to='event_organizer/')\n     link = models.URLField(blank=True, null=True)\n"
                },
                {
                    "date": 1738212031835,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,8 +97,10 @@\n     \n     def __str__(self):\n         return f\"{self.event_name}\"\n     \n+    \n+    \n     class Meta:\n         permissions = [\n             (\"manage_event\", \"Manage Event\"),\n         ]\n"
                },
                {
                    "date": 1738212050522,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,8 +97,12 @@\n     \n     def __str__(self):\n         return f\"{self.event_name}\"\n     \n+    def save(self, *args, **kwargs):\n+        if not self.slug:\n+            self.slug = slugify(self.event_name)+'-'+str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n+        super().save(*args, **kwargs)\n     \n     \n     class Meta:\n         permissions = [\n"
                },
                {
                    "date": 1738212599245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n         return f\"{self.event_name}\"\n     \n     def save(self, *args, **kwargs):\n         if not self.slug:\n-            self.slug = slugify(self.event_name)+'-'+str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n+            self.slug = slugify(self.event_name)\n         super().save(*args, **kwargs)\n     \n     \n     class Meta:\n"
                },
                {
                    "date": 1738212607790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n \n class Event(SEOFields):\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n     slug = models.SlugField(max_length=255, unique=True, null=True, blank=True)\n-    event_name = models.CharField(max_length=255)\n+    event_name = models.CharField(max_length=255,unique)\n     start_date = models.DateTimeField(null=True,blank=True)\n     end_date = models.DateTimeField(null=True,blank=True)\n     duration = models.CharField(max_length=255)\n     TYPE_CHOICES = [\n"
                },
                {
                    "date": 1738651660552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n \n class Event(SEOFields):\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n     slug = models.SlugField(max_length=255, unique=True, null=True, blank=True)\n-    event_name = models.CharField(max_length=255,unique)\n+    event_name = models.CharField(max_length=255,unique=True)\n     start_date = models.DateTimeField(null=True,blank=True)\n     end_date = models.DateTimeField(null=True,blank=True)\n     duration = models.CharField(max_length=255)\n     TYPE_CHOICES = [\n@@ -109,9 +109,9 @@\n             (\"manage_event\", \"Manage Event\"),\n         ]\n \n class EventGallery(models.Model):\n-    event = models.ForeignKey\n+    event = models.ForeignKey()\n     is_featured_image = models.BooleanField(default=False)\n     image = models.ImageField(upload_to='event_images/',null=True,blank=True)\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n"
                },
                {
                    "date": 1738651759778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,9 +109,9 @@\n             (\"manage_event\", \"Manage Event\"),\n         ]\n \n class EventGallery(models.Model):\n-    event = models.ForeignKey()\n+    event = models.ForeignKey(Event, on_delete=models.CASCADE, related_name='images')\n     is_featured_image = models.BooleanField(default=False)\n     image = models.ImageField(upload_to='event_images/',null=True,blank=True)\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n"
                },
                {
                    "date": 1739343921515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,9 +109,9 @@\n             (\"manage_event\", \"Manage Event\"),\n         ]\n \n class EventGallery(models.Model):\n-    event = models.ForeignKey(Event, on_delete=models.CASCADE, related_name='images')\n+    event = models.ForeignKey(Event, on_delete=models.CASCADE, related_name='image')\n     is_featured_image = models.BooleanField(default=False)\n     image = models.ImageField(upload_to='event_images/',null=True,blank=True)\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n@@ -122,6 +122,6 @@\n         return f\"{self.image.url} - {'Featured' if self.is_featured_image else 'Standard'}\"\n     \n     class Meta:\n         permissions = [\n-            (\"manage_event_gallery\", \"Manage Event Gallery\"),\n+            (\"manage_eventgallery\", \"Manage Event Gallery\"),\n         ]\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739343933281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,8 +49,12 @@\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n     \n     def __str__(self):\n         return f\"{self.name}\"\n+    class Meta:\n+        permissions = [\n+            (\"manage_eventgallery\", \"Manage Event Gallery\"),\n+        ]\n \n class Event(SEOFields):\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n     slug = models.SlugField(max_length=255, unique=True, null=True, blank=True)\n"
                },
                {
                    "date": 1739343940108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n     def __str__(self):\n         return f\"{self.name}\"\n     class Meta:\n         permissions = [\n-            (\"manage_eventgallery\", \"Manage Event Gallery\"),\n+            (\"manage_eventcategory\", \"Manage Event Gallery\"),\n         ]\n \n class Event(SEOFields):\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n"
                },
                {
                    "date": 1739343946126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,8 +40,12 @@\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n     \n     def __str__(self):\n         return f\"{self.name}\"\n+    class Meta:\n+        permissions = [\n+            (\"manage_eventgallery\", \"Manage Event Gallery\"),\n+        ]\n \n class EventCategory(models.Model):\n     name = models.CharField(max_length=100)\n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n"
                },
                {
                    "date": 1739343952621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n     def __str__(self):\n         return f\"{self.name}\"\n     class Meta:\n         permissions = [\n-            (\"manage_eventgallery\", \"Manage Event Gallery\"),\n+            (\"manage_eventorganizer\", \"Manage Event Gallery\"),\n         ]\n \n class EventCategory(models.Model):\n     name = models.CharField(max_length=100)\n"
                },
                {
                    "date": 1739344068278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n     def __str__(self):\n         return f\"{self.name}\"\n     class Meta:\n         permissions = [\n-            (\"manage_eventorganizer\", \"Manage Event Gallery\"),\n+            (\"manage_eventorganizer\", \"Manage Event Organizer\"),\n         ]\n \n class EventCategory(models.Model):\n     name = models.CharField(max_length=100)\n"
                },
                {
                    "date": 1739344075376,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n     def __str__(self):\n         return f\"{self.name}\"\n     class Meta:\n         permissions = [\n-            (\"manage_eventcategory\", \"Manage Event Gallery\"),\n+            (\"manage_eventcategory\", \"Manage Event Category\"),\n         ]\n \n class Event(SEOFields):\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n"
                },
                {
                    "date": 1739950501188,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,8 +65,9 @@\n     event_name = models.CharField(max_length=255,unique=True)\n     start_date = models.DateTimeField(null=True,blank=True)\n     end_date = models.DateTimeField(null=True,blank=True)\n     duration = models.CharField(max_length=255)\n+    duration = models.CharField(max_length=255)\n     TYPE_CHOICES = [\n         ('physical', 'Physical'),\n         ('online', 'Online'),\n         ('hybrid', 'Hybrid'),\n"
                },
                {
                    "date": 1739950506655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n     event_name = models.CharField(max_length=255,unique=True)\n     start_date = models.DateTimeField(null=True,blank=True)\n     end_date = models.DateTimeField(null=True,blank=True)\n     duration = models.CharField(max_length=255)\n-    duration = models.CharField(max_length=255)\n+    duration_type = models.CharField(max_length=255)\n     TYPE_CHOICES = [\n         ('physical', 'Physical'),\n         ('online', 'Online'),\n         ('hybrid', 'Hybrid'),\n"
                },
                {
                    "date": 1739950537470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n     event_name = models.CharField(max_length=255,unique=True)\n     start_date = models.DateTimeField(null=True,blank=True)\n     end_date = models.DateTimeField(null=True,blank=True)\n     duration = models.CharField(max_length=255)\n-    duration_type = models.CharField(max_length=255)\n+    duration_type = models.CharField(max_length=255,)\n     TYPE_CHOICES = [\n         ('physical', 'Physical'),\n         ('online', 'Online'),\n         ('hybrid', 'Hybrid'),\n"
                },
                {
                    "date": 1740378745124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n \n \n class EventOrganizer(models.Model):\n     name = models.CharField(max_length=255)\n-    image = models.ImageField(upload_to='event_organizer/')\n+    image = models.ImageField(upload_to='event_organizer/',)\n     link = models.URLField(blank=True, null=True)\n     is_show = models.BooleanField(default=False)\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n@@ -65,9 +65,9 @@\n     event_name = models.CharField(max_length=255,unique=True)\n     start_date = models.DateTimeField(null=True,blank=True)\n     end_date = models.DateTimeField(null=True,blank=True)\n     duration = models.CharField(max_length=255)\n-    duration_type = models.CharField(max_length=255,)\n+    duration_type = models.CharField(max_length=255, blank=True, null=True)\n     TYPE_CHOICES = [\n         ('physical', 'Physical'),\n         ('online', 'Online'),\n         ('hybrid', 'Hybrid'),\n"
                },
                {
                    "date": 1740378751836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n \n \n class EventOrganizer(models.Model):\n     name = models.CharField(max_length=255)\n-    image = models.ImageField(upload_to='event_organizer/',)\n+    image = models.ImageField(upload_to='event_organizer/',null=True,blank=True)\n     link = models.URLField(blank=True, null=True)\n     is_show = models.BooleanField(default=False)\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n"
                },
                {
                    "date": 1740380973196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,9 +108,9 @@\n         return f\"{self.event_name}\"\n     \n     def save(self, *args, **kwargs):\n         if not self.slug:\n-            self.slug = slugify(self.event_name)\n+            self.slug = f'{slugify(self.name)}-{str(self.public_id)[1:5]}{str(self.public_id)[-1:-5]}'\n         super().save(*args, **kwargs)\n     \n     \n     class Meta:\n"
                },
                {
                    "date": 1740381014770,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n \n class Event(SEOFields):\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n     slug = models.SlugField(max_length=255, unique=True, null=True, blank=True)\n-    event_name = models.CharField(max_length=255,unique=True)\n+    event_name = models.CharField(max_length=255)\n     start_date = models.DateTimeField(null=True,blank=True)\n     end_date = models.DateTimeField(null=True,blank=True)\n     duration = models.CharField(max_length=255)\n     duration_type = models.CharField(max_length=255, blank=True, null=True)\n"
                },
                {
                    "date": 1740388048508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -120,9 +120,9 @@\n \n class EventGallery(models.Model):\n     event = models.ForeignKey(Event, on_delete=models.CASCADE, related_name='image')\n     is_featured_image = models.BooleanField(default=False)\n-    image = models.ImageField(upload_to='event_images/',null=True,blank=True)\n+    images = models.ImageField(upload_to='event_images/',null=True,blank=True)\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n"
                },
                {
                    "date": 1740390103269,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,9 +127,9 @@\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n     \n     def __str__(self):\n-        return f\"{self.image.url} - {'Featured' if self.is_featured_image else 'Standard'}\"\n+        return f\"{self.images.url} - {'Featured' if self.is_featured_image else 'Standard'}\"\n     \n     class Meta:\n         permissions = [\n             (\"manage_eventgallery\", \"Manage Event Gallery\"),\n"
                },
                {
                    "date": 1740391612496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,9 +118,9 @@\n             (\"manage_event\", \"Manage Event\"),\n         ]\n \n class EventGallery(models.Model):\n-    event = models.ForeignKey(Event, on_delete=models.CASCADE, related_name='image')\n+    event = models.ForeignKey(Event, on_delete=models.CASCADE, related_name='images')\n     is_featured_image = models.BooleanField(default=False)\n     images = models.ImageField(upload_to='event_images/',null=True,blank=True)\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n"
                },
                {
                    "date": 1740396854168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -120,9 +120,9 @@\n \n class EventGallery(models.Model):\n     event = models.ForeignKey(Event, on_delete=models.CASCADE, related_name='images')\n     is_featured_image = models.BooleanField(default=False)\n-    images = models.ImageField(upload_to='event_images/',null=True,blank=True)\n+    image = models.ImageField(upload_to='event_images/',null=True,blank=True)\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n"
                },
                {
                    "date": 1740397006188,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,9 +127,9 @@\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n     \n     def __str__(self):\n-        return f\"{self.images.url} - {'Featured' if self.is_featured_image else 'Standard'}\"\n+        return f\"{self.image.url} - {'Featured' if self.is_featured_image else 'Standard'}\"\n     \n     class Meta:\n         permissions = [\n             (\"manage_eventgallery\", \"Manage Event Gallery\"),\n"
                },
                {
                    "date": 1740410433404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,9 +118,9 @@\n             (\"manage_event\", \"Manage Event\"),\n         ]\n \n class EventGallery(models.Model):\n-    event = models.ForeignKey(Event, on_delete=models.CASCADE, related_name='images')\n+    event = models.ForeignKey(Event, on_delete=models.CASCADE, related_name='image')\n     is_featured_image = models.BooleanField(default=False)\n     image = models.ImageField(upload_to='event_images/',null=True,blank=True)\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n"
                },
                {
                    "date": 1740745910764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,8 +74,9 @@\n     ]\n     event_type = models.CharField(max_length=10, choices=TYPE_CHOICES)\n     venue = models.CharField(max_length=255, blank=True, null=True)\n     \n+    \n     online_seat_limit = models.PositiveIntegerField(default=0)\n     offline_seat_limit = models.PositiveIntegerField(default=0)\n     is_offline_seat_limit = models.BooleanField(default=False)\n     is_online_seat_limit = models.BooleanField(default=False)\n"
                },
                {
                    "date": 1740745916340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,10 +73,10 @@\n         ('hybrid', 'Hybrid'),\n     ]\n     event_type = models.CharField(max_length=10, choices=TYPE_CHOICES)\n     venue = models.CharField(max_length=255, blank=True, null=True)\n+    online\n     \n-    \n     online_seat_limit = models.PositiveIntegerField(default=0)\n     offline_seat_limit = models.PositiveIntegerField(default=0)\n     is_offline_seat_limit = models.BooleanField(default=False)\n     is_online_seat_limit = models.BooleanField(default=False)\n"
                },
                {
                    "date": 1740745921624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n         ('hybrid', 'Hybrid'),\n     ]\n     event_type = models.CharField(max_length=10, choices=TYPE_CHOICES)\n     venue = models.CharField(max_length=255, blank=True, null=True)\n-    online\n+    online_platform = models.CharField(max_length=255, blank=True, null=True)\n     \n     online_seat_limit = models.PositiveIntegerField(default=0)\n     offline_seat_limit = models.PositiveIntegerField(default=0)\n     is_offline_seat_limit = models.BooleanField(default=False)\n"
                },
                {
                    "date": 1741152624880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,8 +102,9 @@\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n+    position = models.PositiveIntegerField(default=0)\n \n     \n     def __str__(self):\n         return f\"{self.event_name}\"\n"
                },
                {
                    "date": 1741156482887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n-    position = models.PositiveIntegerField(default=0)\n+    \n \n     \n     def __str__(self):\n         return f\"{self.event_name}\"\n"
                },
                {
                    "date": 1741495400418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,8 +95,10 @@\n     amount_country = models.CharField(max_length=100, blank=True, null=True)\n     \n     description = models.TextField(blank=True, null=True)\n     is_featured_event = models.BooleanField(default=False)\n+        featured_image = models.CharField(max_length = 500 , null = True,blank = True)\n+\n     \n     category = models.ManyToManyField(EventCategory, related_name='event_category')\n     organizer = models.ManyToManyField(EventOrganizer, related_name='organizer')\n     \n@@ -123,8 +125,9 @@\n class EventGallery(models.Model):\n     event = models.ForeignKey(Event, on_delete=models.CASCADE, related_name='image')\n     is_featured_image = models.BooleanField(default=False)\n     image = models.ImageField(upload_to='event_images/',null=True,blank=True)\n+    position = models.PositiveIntegerField(default=0)\n     \n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n"
                },
                {
                    "date": 1741495405826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,9 +95,9 @@\n     amount_country = models.CharField(max_length=100, blank=True, null=True)\n     \n     description = models.TextField(blank=True, null=True)\n     is_featured_event = models.BooleanField(default=False)\n-        featured_image = models.CharField(max_length = 500 , null = True,blank = True)\n+    featured_image = models.CharField(max_length = 500 , null = True,blank = True)\n \n     \n     category = models.ManyToManyField(EventCategory, related_name='event_category')\n     organizer = models.ManyToManyField(EventOrganizer, related_name='organizer')\n"
                },
                {
                    "date": 1741495615152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,5 +137,18 @@\n     \n     class Meta:\n         permissions = [\n             (\"manage_eventgallery\", \"Manage Event Gallery\"),\n-        ]\n\\ No newline at end of file\n+        ]\n+    \n+    def save(self, *args, **kwargs):\n+        # Save the instance first to get a valid `image.url`\n+        super().save(*args, **kwargs)\n+\n+        if self.is_featured_image and self.image:\n+            # Ensure SITE_URL is set in settings\n+            site_url = getattr(settings, \"SITE_URL\", \"https://collegeinfoapi.com\")  # Default fallback\n+            absolute_url = urljoin(site_url, self.image.url)  # Construct absolute URL\n+\n+            # Save to event's featured_image field\n+            self.event.featured_image = absolute_url\n+            self.event.save(update_fields=['featured_image'])  # Update only the featured_image field\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741495626448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,10 @@\n from django.db import models\n from mainproj.utilities.seo import SEOFields\n import uuid\n from django.utils.text import slugify\n+from django.conf import settings\n+from urllib.parse import urljoin\n \n \n \n \n"
                },
                {
                    "date": 1741495947728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -152,5 +152,6 @@\n             absolute_url = urljoin(site_url, self.image.url)  # Construct absolute URL\n \n             # Save to event's featured_image field\n             self.event.featured_image = absolute_url\n+            \n             self.event.save(update_fields=['featured_image'])  # Update only the featured_image field\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741495953426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -152,6 +152,6 @@\n             absolute_url = urljoin(site_url, self.image.url)  # Construct absolute URL\n \n             # Save to event's featured_image field\n             self.event.featured_image = absolute_url\n-            \n+            print()\n             self.event.save(update_fields=['featured_image'])  # Update only the featured_image field\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741496029286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,11 +133,8 @@\n     created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n     \n-    def __str__(self):\n-        return f\"{self.image.url} - {'Featured' if self.is_featured_image else 'Standard'}\"\n-    \n     class Meta:\n         permissions = [\n             (\"manage_eventgallery\", \"Manage Event Gallery\"),\n         ]\n@@ -152,6 +149,6 @@\n             absolute_url = urljoin(site_url, self.image.url)  # Construct absolute URL\n \n             # Save to event's featured_image field\n             self.event.featured_image = absolute_url\n-            print()\n+            print(\"🌟\",self.event.featured_image)\n             self.event.save(update_fields=['featured_image'])  # Update only the featured_image field\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741502320434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,6 +149,5 @@\n             absolute_url = urljoin(site_url, self.image.url)  # Construct absolute URL\n \n             # Save to event's featured_image field\n             self.event.featured_image = absolute_url\n-            print(\"🌟\",self.event.featured_image)\n             self.event.save(update_fields=['featured_image'])  # Update only the featured_image field\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741511050249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -144,9 +144,9 @@\n         super().save(*args, **kwargs)\n \n         if self.is_featured_image and self.image:\n             # Ensure SITE_URL is set in settings\n-            site_url = getattr(settings, \"SITE_URL\", \"https://collegeinfoapi.com\")  # Default fallback\n+            site_url = getattr(settings, \"SITE_URL\", \"https://base.collegeinfonepal.com\")  # Default fallback\n             absolute_url = urljoin(site_url, self.image.url)  # Construct absolute URL\n \n             # Save to event's featured_image field\n             self.event.featured_image = absolute_url\n"
                }
            ],
            "date": 1726568467190,
            "name": "Commit-0",
            "content": "from django.db import models\n\n# Create your models here.\nevent name"
        }
    ]
}