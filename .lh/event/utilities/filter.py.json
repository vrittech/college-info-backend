{
    "sourceFile": "event/utilities/filter.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1733728774247,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1733728774247,
            "name": "Commit-0",
            "content": "from django_filters import rest_framework as filters\nfrom .models import Event\n\nclass EventFilter(filters.FilterSet):\n    event_type = filters.ChoiceFilter(choices=Event.TYPE_CHOICES)  # Filters by type\n    registration_link = filters.BooleanFilter(method='filter_registration_link')  # Filters by registration link existence\n    is_featured_event = filters.BooleanFilter()  # Filters by featured status\n    category = filters.CharFilter(field_name='category__name', lookup_expr='icontains')  # Filters by category name (many-to-many)\n\n    class Meta:\n        model = Event\n        fields = ['event_type', 'registration_link', 'is_featured_event', 'category']\n\n    def filter_registration_link(self, queryset, name, value):\n        \"\"\"\n        Custom filter to check if registration_link is present or not.\n        True: registration_link is not null or empty.\n        False: registration_link is null or empty.\n        \"\"\"\n        if value:\n            return queryset.exclude(registration_link__isnull=True).exclude(registration_link__exact='')\n        return queryset.filter(registration_link__isnull=True) | queryset.filter(registration_link__exact='')\n"
        }
    ]
}