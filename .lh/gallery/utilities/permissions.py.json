{
    "sourceFile": "gallery/utilities/permissions.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1739258271849,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739264045028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n         if CanManage(request):  # If user has manage permission, grant full access\n             return True\n \n         if view.action in [\"list\"]:\n-            return HasPermission(request, GALLERY_PERMISSIONS[\"view\"])\n+            return True\n \n         elif view.action in [\"retrieve\"]:\n             return HasPermission(request, GALLERY_PERMISSIONS[\"view\"])\n \n"
                },
                {
                    "date": 1739264642657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+from rest_framework.permissions import BasePermission\n+\n+GALLERY_PERMISSIONS = {\n+    \"add\": \"add_gallery\",\n+    \"change\": \"change_gallery\",\n+    \"delete\": \"delete_gallery\",\n+    \"view\": \"view_gallery\",\n+    \"manage\": \"manage_gallery\",\n+}\n+\n+def HasPermission(request, codename):\n+    \"\"\"Check if the user has a specific Django permission\"\"\"\n+    return request.user.has_perm(f\"app_name.{codename}\")\n+\n+def CanManage(request):\n+    \"\"\"Check if the user has full manage access\"\"\"\n+    return HasPermission(request, GALLERY_PERMISSIONS[\"manage\"])\n+\n+class lleryPermission(BasePermission):\n+    \"\"\"\n+    Permission class for managing galleries based strictly on Django permissions.\n+    \"\"\"\n+\n+    def has_permission(self, request, view):\n+        if CanManage(request):  # If user has manage permission, grant full access\n+            return True\n+\n+        if view.action in [\"list\"]:\n+            return True\n+\n+        elif view.action in [\"retrieve\"]:\n+            return HasPermission(request, GALLERY_PERMISSIONS[\"view\"])\n+\n+        elif view.action in [\"create\"]:\n+            return HasPermission(request, GALLERY_PERMISSIONS[\"add\"])\n+\n+        elif view.action in [\"update\", \"partial_update\"]:\n+            return HasPermission(request, GALLERY_PERMISSIONS[\"change\"])\n+\n+        elif view.action == \"destroy\":\n+            return HasPermission(request, GALLERY_PERMISSIONS[\"delete\"])\n+\n+        return False  # Default deny access\n"
                }
            ],
            "date": 1739258271849,
            "name": "Commit-0",
            "content": "from rest_framework.permissions import BasePermission\n\nGALLERY_PERMISSIONS = {\n    \"add\": \"add_gallery\",\n    \"change\": \"change_gallery\",\n    \"delete\": \"delete_gallery\",\n    \"view\": \"view_gallery\",\n    \"manage\": \"manage_gallery\",\n}\n\ndef HasPermission(request, codename):\n    \"\"\"Check if the user has a specific Django permission\"\"\"\n    return request.user.has_perm(f\"app_name.{codename}\")\n\ndef CanManage(request):\n    \"\"\"Check if the user has full manage access\"\"\"\n    return HasPermission(request, GALLERY_PERMISSIONS[\"manage\"])\n\nclass GalleryPermission(BasePermission):\n    \"\"\"\n    Permission class for managing galleries based strictly on Django permissions.\n    \"\"\"\n\n    def has_permission(self, request, view):\n        if CanManage(request):  # If user has manage permission, grant full access\n            return True\n\n        if view.action in [\"list\"]:\n            return HasPermission(request, GALLERY_PERMISSIONS[\"view\"])\n\n        elif view.action in [\"retrieve\"]:\n            return HasPermission(request, GALLERY_PERMISSIONS[\"view\"])\n\n        elif view.action in [\"create\"]:\n            return HasPermission(request, GALLERY_PERMISSIONS[\"add\"])\n\n        elif view.action in [\"update\", \"partial_update\"]:\n            return HasPermission(request, GALLERY_PERMISSIONS[\"change\"])\n\n        elif view.action == \"destroy\":\n            return HasPermission(request, GALLERY_PERMISSIONS[\"delete\"])\n\n        return False  # Default deny access\n"
        }
    ]
}