{
    "sourceFile": "collegemanagement/models.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 277,
            "patches": [
                {
                    "date": 1727170911785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1727170919102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,4 @@\n from django.db import models\n \n # Create your models here.\n-class \n\\ No newline at end of file\n+class College\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727170928332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,4 @@\n from django.db import models\n \n # Create your models here.\n-class College\n\\ No newline at end of file\n+class College(models.Model)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172612144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n from django.db import models\n \n # Create your models here.\n-class College(models.Model)\n\\ No newline at end of file\n+class College(models.Model):\n+    banner\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172622562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n from django.db import models\n \n # Create your models here.\n class College(models.Model):\n-    banner\n\\ No newline at end of file\n+    banner---> imagefield\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172629916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n from django.db import models\n \n # Create your models here.\n class College(models.Model):\n-    banner---> imagefield\n\\ No newline at end of file\n+    banner---> imagefield \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172638834,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,7 @@\n from django.db import models\n \n # Create your models here.\n class College(models.Model):\n-    banner---> imagefield \n\\ No newline at end of file\n+    banner---> imagefield \n+    dp---> imagefield \n+     \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172647741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,5 +3,6 @@\n # Create your models here.\n class College(models.Model):\n     banner---> imagefield \n     dp---> imagefield \n-     \n\\ No newline at end of file\n+    name \n+    estd- \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172652896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,5 +4,6 @@\n class College(models.Model):\n     banner---> imagefield \n     dp---> imagefield \n     name \n-    estd- \n\\ No newline at end of file\n+    estd_date\n+     \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172659797,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,5 +5,6 @@\n     banner---> imagefield \n     dp---> imagefield \n     name \n     estd_date\n+    website link \n      \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172667847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,5 +6,7 @@\n     dp---> imagefield \n     name \n     estd_date\n     website link \n+    address \n+    location \n      \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172673297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,5 +8,5 @@\n     estd_date\n     website link \n     address \n     location \n-     \n\\ No newline at end of file\n+    phonenumber \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172679563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,5 +8,6 @@\n     estd_date\n     website link \n     address \n     location \n-    phonenumber \n\\ No newline at end of file\n+    phone_number \n+     \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172695736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,5 +9,6 @@\n     website link \n     address \n     location \n     phone_number \n-     \n\\ No newline at end of file\n+    email \n+    affiliated --->from Affiliation Model \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172703853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,5 +10,6 @@\n     address \n     location \n     phone_number \n     email \n-    affiliated --->from Affiliation Model \n\\ No newline at end of file\n+    affiliated --->from Affiliation Model \n+    college type \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172718083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,5 +11,6 @@\n     location \n     phone_number \n     email \n     affiliated --->from Affiliation Model \n-    college type \n\\ No newline at end of file\n+    college type ---> cok\n+     \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172723982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,6 +11,6 @@\n     location \n     phone_number \n     email \n     affiliated --->from Affiliation Model \n-    college type ---> cok\n+    college type ---> college type \n      \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172729437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,6 +11,6 @@\n     location \n     phone_number \n     email \n     affiliated --->from Affiliation Model \n-    college type ---> college type \n+    college type ---> college type models\n      \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172737439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,6 +11,7 @@\n     location \n     phone_number \n     email \n     affiliated --->from Affiliation Model \n-    college type ---> college type models\n+    college type ---> college type models \n+    googl\n      \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172744550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,6 +12,7 @@\n     phone_number \n     email \n     affiliated --->from Affiliation Model \n     college type ---> college type models \n-    googl\n+    google_map_link \n+    \n      \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172756874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,6 +13,6 @@\n     email \n     affiliated --->from Affiliation Model \n     college type ---> college type models \n     google_map_link \n-    \n+    latitude\n      \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172762183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,6 +13,8 @@\n     email \n     affiliated --->from Affiliation Model \n     college type ---> college type models \n     google_map_link \n-    latitude\n+    latitude \n+    longitude \n+    \n      \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172769459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,6 +15,6 @@\n     college type ---> college type models \n     google_map_link \n     latitude \n     longitude \n-    \n+    map_loca\n      \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172774670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,6 +15,6 @@\n     college type ---> college type models \n     google_map_link \n     latitude \n     longitude \n-    map_loca\n+    map_location(lat)\n      \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172781390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,6 +15,6 @@\n     college type ---> college type models \n     google_map_link \n     latitude \n     longitude \n-    map_location(lat)\n+    map_location(latitude,longitude)\n      \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172792134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,5 +16,7 @@\n     google_map_link \n     latitude \n     longitude \n     map_location(latitude,longitude)\n+    about \n+    \n      \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172798227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,6 +17,6 @@\n     latitude \n     longitude \n     map_location(latitude,longitude)\n     about \n-    \n+    courses and fees\n      \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172809026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,6 +17,6 @@\n     latitude \n     longitude \n     map_location(latitude,longitude)\n     about \n-    courses and fees\n+    courses and fees ---> make new models courses a\n      \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172819729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,6 +17,6 @@\n     latitude \n     longitude \n     map_location(latitude,longitude)\n     about \n-    courses and fees ---> make new models courses a\n+    courses and fees ---> make new models coursesandfeesadmission \n      \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172831978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,6 +17,7 @@\n     latitude \n     longitude \n     map_location(latitude,longitude)\n     about \n-    courses and fees ---> make new models coursesandfeesadmission \n+    courses and fees ---> make new models coursesandfees\n+    admission open\n      \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172840896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,6 +18,6 @@\n     longitude \n     map_location(latitude,longitude)\n     about \n     courses and fees ---> make new models coursesandfees\n-    admission open\n+    admission open --> \n      \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172860672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,6 +18,8 @@\n     longitude \n     map_location(latitude,longitude)\n     about \n     courses and fees ---> make new models coursesandfees\n-    admission open --> \n+    admission open --> make new models\n+    fcilities ---> make new models \n+    \n      \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172869371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,6 +20,6 @@\n     about \n     courses and fees ---> make new models coursesandfees\n     admission open --> make new models\n     fcilities ---> make new models \n-    \n+    college_gallery = \n      \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172875651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,6 +20,6 @@\n     about \n     courses and fees ---> make new models coursesandfees\n     admission open --> make new models\n     fcilities ---> make new models \n-    college_gallery = \n-     \n\\ No newline at end of file\n+    college_gallery = model \n+         \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172885826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,5 +21,6 @@\n     courses and fees ---> make new models coursesandfees\n     admission open --> make new models\n     fcilities ---> make new models \n     college_gallery = model \n+    featured video \n          \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172896412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,5 +22,6 @@\n     admission open --> make new models\n     fcilities ---> make new models \n     college_gallery = model \n     featured video \n+    brochure - file uploads\n          \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172905508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,5 +23,5 @@\n     fcilities ---> make new models \n     college_gallery = model \n     featured video \n     brochure - file uploads\n-         \n\\ No newline at end of file\n+    social med     \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727172918697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,5 +23,5 @@\n     fcilities ---> make new models \n     college_gallery = model \n     featured video \n     brochure - file uploads\n-    social med     \n\\ No newline at end of file\n+    collegge_social media --- make models      \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727173090999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,27 +1,27 @@\n from django.db import models\n \n # Create your models here.\n class College(models.Model):\n-    banner---> imagefield \n-    dp---> imagefield \n-    name \n-    estd_date\n-    website link \n-    address \n-    location \n-    phone_number \n-    email \n-    affiliated --->from Affiliation Model \n-    college type ---> college type models \n-    google_map_link \n-    latitude \n-    longitude \n-    map_location(latitude,longitude)\n-    about \n-    courses and fees ---> make new models coursesandfees\n-    admission open --> make new models\n-    fcilities ---> make new models \n-    college_gallery = model \n-    featured video \n-    brochure - file uploads\n-    collegge_social media --- make models      \n\\ No newline at end of file\n+    # banner---> imagefield \n+    # dp---> imagefield \n+    # name \n+    # estd_date\n+    # website link \n+    # address \n+    # location \n+    # phone_number \n+    # email \n+    # affiliated --->from Affiliation Model \n+    # college type ---> college type models \n+    # google_map_link \n+    # latitude \n+    # longitude \n+    # map_location(latitude,longitude)\n+    # about \n+    # courses and fees ---> make new models coursesandfees\n+    # admission open --> make new models\n+    # fcilities ---> make new models \n+    # college_gallery = model \n+    # featured video \n+    # brochure - file uploads\n+    # college_social media --- make models      \n\\ No newline at end of file\n"
                },
                {
                    "date": 1727173098801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,4 @@\n-from django.db import models\n-\n-# Create your models here.\n-class College(models.Model):\n     # banner---> imagefield \n     # dp---> imagefield \n     # name \n     # estd_date\n@@ -23,5 +19,94 @@\n     # fcilities ---> make new models \n     # college_gallery = model \n     # featured video \n     # brochure - file uploads\n-    # college_social media --- make models      \n\\ No newline at end of file\n+    # college_social media --- make models      \n+from django.db import models\n+\n+# Create your models here.\n+class College(models.Model):\n+    from django.db import models\n+\n+# Affiliation Model\n+class Affiliation(models.Model):\n+    name = models.CharField(max_length=255)\n+\n+    def __str__(self):\n+        return self.name\n+\n+# CollegeType Model\n+class CollegeType(models.Model):\n+    type_name = models.CharField(max_length=100)\n+\n+    def __str__(self):\n+        return self.type_name\n+\n+# CoursesAndFees Model\n+class CoursesAndFees(models.Model):\n+    course_name = models.CharField(max_length=255)\n+    fee = models.DecimalField(max_digits=10, decimal_places=2)\n+\n+    def __str__(self):\n+        return f'{self.course_name} - {self.fee}'\n+\n+# AdmissionOpen Model\n+class AdmissionOpen(models.Model):\n+    admission_year = models.IntegerField()\n+    status = models.BooleanField(default=True)\n+\n+    def __str__(self):\n+        return f'Admission {self.admission_year} - {\"Open\" if self.status else \"Closed\"}'\n+\n+# Facilities Model\n+class Facility(models.Model):\n+    facility_name = models.CharField(max_length=255)\n+\n+    def __str__(self):\n+        return self.facility_name\n+\n+# CollegeGallery Model\n+class CollegeGallery(models.Model):\n+    image = models.ImageField(upload_to='college/gallery/')\n+    description = models.TextField(blank=True)\n+\n+    def __str__(self):\n+        return f'Gallery Image {self.id}'\n+\n+# CollegeSocialMedia Model\n+class CollegeSocialMedia(models.Model):\n+    platform_name = models.CharField(max_length=255)\n+    url = models.URLField()\n+\n+    def __str__(self):\n+        return self.platform_name\n+\n+# Main College Model\n+class College(models.Model):\n+    banner = models.ImageField(upload_to='college/banner/')\n+    dp = models.ImageField(upload_to='college/dp/')\n+    name = models.CharField(max_length=255)\n+    estd_date = models.DateField()\n+    website_link = models.URLField()\n+    address = models.CharField(max_length=255)\n+    location = models.CharField(max_length=255)\n+    phone_number = models.CharField(max_length=20)\n+    email = models.EmailField()\n+    affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE)\n+    college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE)\n+    google_map_link = models.URLField(blank=True, null=True)\n+    latitude = models.DecimalField(max_digits=9, decimal_places=6)\n+    longitude = models.DecimalField(max_digits=9, decimal_places=6)\n+    about = models.TextField()\n+    courses_and_fees = models.ManyToManyField(CoursesAndFees)\n+    admission_open = models.ForeignKey(AdmissionOpen, on_delete=models.CASCADE)\n+    facilities = models.ManyToManyField(Facility)\n+    college_gallery = models.ManyToManyField(CollegeGallery)\n+    featured_video = models.URLField(blank=True, null=True)\n+    brochure = models.FileField(upload_to='college/brochure/')\n+    social_media = models.ManyToManyField(CollegeSocialMedia)\n+\n+    def map_location(self):\n+        return f'{self.latitude}, {self.longitude}'\n+\n+    def __str__(self):\n+        return self.name\n"
                },
                {
                    "date": 1727173110303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n class College(models.Model):\n     banner = models.ImageField(upload_to='college/banner/')\n     dp = models.ImageField(upload_to='college/dp/')\n     name = models.CharField(max_length=255)\n-    estd_date = models.DateField()\n+    established_date = models.DateField()\n     website_link = models.URLField()\n     address = models.CharField(max_length=255)\n     location = models.CharField(max_length=255)\n     phone_number = models.CharField(max_length=20)\n"
                },
                {
                    "date": 1727173232730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,9 @@\n     # featured video \n     # brochure - file uploads\n     # college_social media --- make models      \n from django.db import models\n+from affiliation.models import Affiliation\n \n # Create your models here.\n class College(models.Model):\n     from django.db import models\n"
                },
                {
                    "date": 1727173238680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,15 +27,9 @@\n # Create your models here.\n class College(models.Model):\n     from django.db import models\n \n-# Affiliation Model\n-class Affiliation(models.Model):\n-    name = models.CharField(max_length=255)\n \n-    def __str__(self):\n-        return self.name\n-\n # CollegeType Model\n class CollegeType(models.Model):\n     type_name = models.CharField(max_length=100)\n \n"
                },
                {
                    "date": 1727173245451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,12 +24,11 @@\n from django.db import models\n from affiliation.models import Affiliation\n \n # Create your models here.\n-class College(models.Model):\n-    from django.db import models\n \n \n+\n # CollegeType Model\n class CollegeType(models.Model):\n     type_name = models.CharField(max_length=100)\n \n"
                },
                {
                    "date": 1727173691391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,12 +23,9 @@\n     # college_social media --- make models      \n from django.db import models\n from affiliation.models import Affiliation\n \n-# Create your models here.\n \n-\n-\n # CollegeType Model\n class CollegeType(models.Model):\n     type_name = models.CharField(max_length=100)\n \n@@ -81,9 +78,9 @@\n     name = models.CharField(max_length=255)\n     established_date = models.DateField()\n     website_link = models.URLField()\n     address = models.CharField(max_length=255)\n-    location = models.CharField(max_length=255)\n+    location = models.\n     phone_number = models.CharField(max_length=20)\n     email = models.EmailField()\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE)\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE)\n"
                },
                {
                    "date": 1727173698716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n     name = models.CharField(max_length=255)\n     established_date = models.DateField()\n     website_link = models.URLField()\n     address = models.CharField(max_length=255)\n-    location = models.\n+    location = models.ForeignKey(Location)\n     phone_number = models.CharField(max_length=20)\n     email = models.EmailField()\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE)\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE)\n"
                },
                {
                    "date": 1727173710254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n     name = models.CharField(max_length=255)\n     established_date = models.DateField()\n     website_link = models.URLField()\n     address = models.CharField(max_length=255)\n-    location = models.ForeignKey(Location)\n+    location = models.ForeignKey(Location,on_delete=models.CASCADE)\n     phone_number = models.CharField(max_length=20)\n     email = models.EmailField()\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE)\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE)\n"
                },
                {
                    "date": 1727173718466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,16 +62,10 @@\n \n     def __str__(self):\n         return f'Gallery Image {self.id}'\n \n-# CollegeSocialMedia Model\n-class CollegeSocialMedia(models.Model):\n-    platform_name = models.CharField(max_length=255)\n-    url = models.URLField()\n+on_delete=models.CASCADE\n \n-    def __str__(self):\n-        return self.platform_name\n-\n # Main College Model\n class College(models.Model):\n     banner = models.ImageField(upload_to='college/banner/')\n     dp = models.ImageField(upload_to='college/dp/')\n"
                },
                {
                    "date": 1727173725417,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,10 +62,24 @@\n \n     def __str__(self):\n         return f'Gallery Image {self.id}'\n \n-on_delete=models.CASCADE\n+# CollegeSocialMedia Model\n+class CollegeSocialMedia(models.Model):\n+    platform_name = models.CharField(max_length=255)\n+    url = models.URLField()\n \n+    def __str__(self):\n+        return self.platform_name\n+    \n+# CollegeSocialMedia Model\n+class CollegeSocialMedia(models.Model):\n+    platform_name = models.CharField(max_length=255)\n+    url = models.URLField()\n+\n+    def __str__(self):\n+        return self.platform_name\n+\n # Main College Model\n class College(models.Model):\n     banner = models.ImageField(upload_to='college/banner/')\n     dp = models.ImageField(upload_to='college/dp/')\n"
                },
                {
                    "date": 1727173734653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,10 +71,10 @@\n     def __str__(self):\n         return self.platform_name\n     \n # CollegeSocialMedia Model\n-class CollegeSocialMedia(models.Model):\n-    platform_name = models.CharField(max_length=255)\n+class Location(models.Model):\n+    name = models.CharField(max_length=255)\n     url = models.URLField()\n \n     def __str__(self):\n         return self.platform_name\n"
                },
                {
                    "date": 1727173746483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,13 +69,12 @@\n     url = models.URLField()\n \n     def __str__(self):\n         return self.platform_name\n-    \n-# CollegeSocialMedia Model\n+\n class Location(models.Model):\n     name = models.CharField(max_length=255)\n-    url = models.URLField()\n+   \n \n     def __str__(self):\n         return self.platform_name\n \n"
                },
                {
                    "date": 1727174332681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,15 +70,9 @@\n \n     def __str__(self):\n         return self.platform_name\n \n-class Location(models.Model):\n-    name = models.CharField(max_length=255)\n-   \n \n-    def __str__(self):\n-        return self.platform_name\n-\n # Main College Model\n class College(models.Model):\n     banner = models.ImageField(upload_to='college/banner/')\n     dp = models.ImageField(upload_to='college/dp/')\n"
                },
                {
                    "date": 1727174350046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,15 +62,9 @@\n \n     def __str__(self):\n         return f'Gallery Image {self.id}'\n \n-# CollegeSocialMedia Model\n-class CollegeSocialMedia(models.Model):\n-    platform_name = models.CharField(max_length=255)\n-    url = models.URLField()\n \n-    def __str__(self):\n-        return self.platform_name\n \n \n # Main College Model\n class College(models.Model):\n"
                },
                {
                    "date": 1727174499956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,14 +47,9 @@\n \n     def __str__(self):\n         return f'Admission {self.admission_year} - {\"Open\" if self.status else \"Closed\"}'\n \n-# Facilities Model\n-class Facility(models.Model):\n-    facility_name = models.CharField(max_length=255)\n \n-    def __str__(self):\n-        return self.facility_name\n \n # CollegeGallery Model\n class CollegeGallery(models.Model):\n     image = models.ImageField(upload_to='college/gallery/')\n"
                },
                {
                    "date": 1727174519352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,15 +39,9 @@\n \n     def __str__(self):\n         return f'{self.course_name} - {self.fee}'\n \n-# AdmissionOpen Model\n-class AdmissionOpen(models.Model):\n-    admission_year = models.IntegerField()\n-    status = models.BooleanField(default=True)\n \n-    def __str__(self):\n-        return f'Admission {self.admission_year} - {\"Open\" if self.status else \"Closed\"}'\n \n \n \n # CollegeGallery Model\n"
                },
                {
                    "date": 1727174536620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,15 +31,9 @@\n \n     def __str__(self):\n         return self.type_name\n \n-# CoursesAndFees Model\n-class CoursesAndFees(models.Model):\n-    course_name = models.CharField(max_length=255)\n-    fee = models.DecimalField(max_digits=10, decimal_places=2)\n \n-    def __str__(self):\n-        return f'{self.course_name} - {self.fee}'\n \n \n \n \n"
                },
                {
                    "date": 1727174562370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,21 +24,14 @@\n from django.db import models\n from affiliation.models import Affiliation\n \n \n-# CollegeType Model\n-class CollegeType(models.Model):\n-    type_name = models.CharField(max_length=100)\n \n-    def __str__(self):\n-        return self.type_name\n \n \n \n \n \n-\n-\n # CollegeGallery Model\n class CollegeGallery(models.Model):\n     image = models.ImageField(upload_to='college/gallery/')\n     description = models.TextField(blank=True)\n"
                },
                {
                    "date": 1727174640820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n     # brochure - file uploads\n     # college_social media --- make models      \n from django.db import models\n from affiliation.models import Affiliation\n+from \n \n \n \n \n"
                },
                {
                    "date": 1727174650958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n     # brochure - file uploads\n     # college_social media --- make models      \n from django.db import models\n from affiliation.models import Affiliation\n-from \n+from admissionopen,models import A\n \n \n \n \n"
                },
                {
                    "date": 1727174656205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n     # brochure - file uploads\n     # college_social media --- make models      \n from django.db import models\n from affiliation.models import Affiliation\n-from admissionopen,models import A\n+from admissionopen,models import \n \n \n \n \n"
                },
                {
                    "date": 1727174690292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n     # brochure - file uploads\n     # college_social media --- make models      \n from django.db import models\n from affiliation.models import Affiliation\n-from admissionopen,models import \n+# from admissionopen,models import \n \n \n \n \n"
                },
                {
                    "date": 1727174701311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n     # brochure - file uploads\n     # college_social media --- make models      \n from django.db import models\n from affiliation.models import Affiliation\n-# from admissionopen,models import \n+from admissionopen,models import \n \n \n \n \n"
                },
                {
                    "date": 1727174710949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,10 @@\n     # brochure - file uploads\n     # college_social media --- make models      \n from django.db import models\n from affiliation.models import Affiliation\n-from admissionopen,models import \n+from admissionopen.models import AdmissionOpen\n+from  \n \n \n \n \n"
                },
                {
                    "date": 1727174717255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n     # college_social media --- make models      \n from django.db import models\n from affiliation.models import Affiliation\n from admissionopen.models import AdmissionOpen\n-from  \n+from location \n \n \n \n \n"
                },
                {
                    "date": 1727174723901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n     # college_social media --- make models      \n from django.db import models\n from affiliation.models import Affiliation\n from admissionopen.models import AdmissionOpen\n-from location \n+from location.models import  \n \n \n \n \n"
                },
                {
                    "date": 1727174729375,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,10 @@\n     # college_social media --- make models      \n from django.db import models\n from affiliation.models import Affiliation\n from admissionopen.models import AdmissionOpen\n-from location.models import  \n+from location.models import Location\n+from  \n \n \n \n \n"
                },
                {
                    "date": 1727174748039,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n from django.db import models\n from affiliation.models import Affiliation\n from admissionopen.models import AdmissionOpen\n from location.models import Location\n-from  \n+from colle \n \n \n \n \n"
                },
                {
                    "date": 1727174761591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n from django.db import models\n from affiliation.models import Affiliation\n from admissionopen.models import AdmissionOpen\n from location.models import Location\n-from colle \n+from collegetype.models import CollegeType \n \n \n \n \n"
                },
                {
                    "date": 1727174777448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,11 @@\n from django.db import models\n from affiliation.models import Affiliation\n from admissionopen.models import AdmissionOpen\n from location.models import Location\n-from collegetype.models import CollegeType \n+from collegetype.models import CollegeType\n+from cour\n+ \n \n \n \n \n"
                },
                {
                    "date": 1727174784450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n from affiliation.models import Affiliation\n from admissionopen.models import AdmissionOpen\n from location.models import Location\n from collegetype.models import CollegeType\n-from cour\n+from coursesandfees.models import \n  \n \n \n \n"
                },
                {
                    "date": 1727174791821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,10 @@\n from affiliation.models import Affiliation\n from admissionopen.models import AdmissionOpen\n from location.models import Location\n from collegetype.models import CollegeType\n-from coursesandfees.models import \n+from coursesandfees.models import CoursesAndFees\n+\n  \n \n \n \n"
                },
                {
                    "date": 1727174797568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n from admissionopen.models import AdmissionOpen\n from location.models import Location\n from collegetype.models import CollegeType\n from coursesandfees.models import CoursesAndFees\n-\n+from facilities.models import Facilities\n  \n \n \n \n"
                },
                {
                    "date": 1727174804396,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,9 @@\n from location.models import Location\n from collegetype.models import CollegeType\n from coursesandfees.models import CoursesAndFees\n from facilities.models import Facilities\n+\n  \n \n \n \n"
                },
                {
                    "date": 1727174819106,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,10 @@\n from admissionopen.models import AdmissionOpen\n from location.models import Location\n from collegetype.models import CollegeType\n from coursesandfees.models import CoursesAndFees\n-from facilities.models import Facilities\n+from facilities.models import Facility\n+from socialmedia.models import Sc\n \n  \n \n \n"
                },
                {
                    "date": 1727174825761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n from location.models import Location\n from collegetype.models import CollegeType\n from coursesandfees.models import CoursesAndFees\n from facilities.models import Facility\n-from socialmedia.models import Sc\n+from socialmedia.models import SocialMedia\n \n  \n \n \n@@ -72,9 +72,9 @@\n     facilities = models.ManyToManyField(Facility)\n     college_gallery = models.ManyToManyField(CollegeGallery)\n     featured_video = models.URLField(blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n-    social_media = models.ManyToManyField(CollegeSocialMedia)\n+    social_media = models.ManyToManyField(SocialMedia)\n \n     def map_location(self):\n         return f'{self.latitude}, {self.longitude}'\n \n"
                },
                {
                    "date": 1727174835587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n \n # Main College Model\n class College(models.Model):\n     banner = models.ImageField(upload_to='college/banner/')\n-    dp = models.ImageField(upload_to='college/dp/')\n+    dp_image = models.ImageField(upload_to='college/dp/')\n     name = models.CharField(max_length=255)\n     established_date = models.DateField()\n     website_link = models.URLField()\n     address = models.CharField(max_length=255)\n"
                },
                {
                    "date": 1727174863899,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n \n \n # Main College Model\n class College(models.Model):\n-    banner = models.ImageField(upload_to='college/banner/')\n+    banner_image = models.ImageField(upload_to='college/banner/')\n     dp_image = models.ImageField(upload_to='college/dp/')\n     name = models.CharField(max_length=255)\n     established_date = models.DateField()\n     website_link = models.URLField()\n"
                },
                {
                    "date": 1727174870090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n     latitude = models.DecimalField(max_digits=9, decimal_places=6)\n     longitude = models.DecimalField(max_digits=9, decimal_places=6)\n     about = models.TextField()\n     courses_and_fees = models.ManyToManyField(CoursesAndFees)\n-    admission_open = models.ForeignKey(AdmissionOpen, on_delete=models.CASCADE)\n+    admission_open = models.ManyToManyField(AdmissionOpen, on_delete=models.CASCADE)\n     facilities = models.ManyToManyField(Facility)\n     college_gallery = models.ManyToManyField(CollegeGallery)\n     featured_video = models.URLField(blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n"
                },
                {
                    "date": 1727174875844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n     latitude = models.DecimalField(max_digits=9, decimal_places=6)\n     longitude = models.DecimalField(max_digits=9, decimal_places=6)\n     about = models.TextField()\n     courses_and_fees = models.ManyToManyField(CoursesAndFees)\n-    admission_open = models.ManyToManyField(AdmissionOpen, on_delete=models.CASCADE)\n+    admission_open = models.ManyToManyField(AdmissionOpen)\n     facilities = models.ManyToManyField(Facility)\n     college_gallery = models.ManyToManyField(CollegeGallery)\n     featured_video = models.URLField(blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n"
                },
                {
                    "date": 1727174995542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,16 +30,8 @@\n from facilities.models import Facility\n from socialmedia.models import SocialMedia\n \n  \n-\n-\n-\n-\n-\n-\n-\n-\n # CollegeGallery Model\n class CollegeGallery(models.Model):\n     image = models.ImageField(upload_to='college/gallery/')\n     description = models.TextField(blank=True)\n"
                },
                {
                    "date": 1727175003501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,12 +38,8 @@\n \n     def __str__(self):\n         return f'Gallery Image {self.id}'\n \n-\n-\n-\n-# Main College Model\n class College(models.Model):\n     banner_image = models.ImageField(upload_to='college/banner/')\n     dp_image = models.ImageField(upload_to='college/dp/')\n     name = models.CharField(max_length=255)\n"
                },
                {
                    "date": 1727175046716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,8 +61,9 @@\n     college_gallery = models.ManyToManyField(CollegeGallery)\n     featured_video = models.URLField(blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n     social_media = models.ManyToManyField(SocialMedia)\n+    s\n \n     def map_location(self):\n         return f'{self.latitude}, {self.longitude}'\n \n"
                },
                {
                    "date": 1727175054632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n     college_gallery = models.ManyToManyField(CollegeGallery)\n     featured_video = models.URLField(blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n     social_media = models.ManyToManyField(SocialMedia)\n-    s\n+    scholarships = \n \n     def map_location(self):\n         return f'{self.latitude}, {self.longitude}'\n \n"
                },
                {
                    "date": 1727175064897,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n     college_gallery = models.ManyToManyField(CollegeGallery)\n     featured_video = models.URLField(blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n     social_media = models.ManyToManyField(SocialMedia)\n-    scholarships = \n+    scholarships = models.Te\n \n     def map_location(self):\n         return f'{self.latitude}, {self.longitude}'\n \n"
                },
                {
                    "date": 1727175070205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n     college_gallery = models.ManyToManyField(CollegeGallery)\n     featured_video = models.URLField(blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n     social_media = models.ManyToManyField(SocialMedia)\n-    scholarships = models.Te\n+    scholarships = models.Text\n \n     def map_location(self):\n         return f'{self.latitude}, {self.longitude}'\n \n"
                },
                {
                    "date": 1727175084402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n     college_gallery = models.ManyToManyField(CollegeGallery)\n     featured_video = models.URLField(blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n     social_media = models.ManyToManyField(SocialMedia)\n-    scholarships = models.Text\n+    scholarships = models.TextField()\n \n     def map_location(self):\n         return f'{self.latitude}, {self.longitude}'\n \n"
                },
                {
                    "date": 1727175319871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n     courses_and_fees = models.ManyToManyField(CoursesAndFees)\n     admission_open = models.ManyToManyField(AdmissionOpen)\n     facilities = models.ManyToManyField(Facility)\n     college_gallery = models.ManyToManyField(CollegeGallery)\n-    featured_video = models.URLField(blank=True, null=True)\n+    featured_video = eatured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n     social_media = models.ManyToManyField(SocialMedia)\n     scholarships = models.TextField()\n \n"
                },
                {
                    "date": 1727175499234,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,27 +1,5 @@\n-    # banner---> imagefield \n-    # dp---> imagefield \n-    # name \n-    # estd_date\n-    # website link \n-    # address \n-    # location \n-    # phone_number \n-    # email \n-    # affiliated --->from Affiliation Model \n-    # college type ---> college type models \n-    # google_map_link \n-    # latitude \n-    # longitude \n-    # map_location(latitude,longitude)\n-    # about \n-    # courses and fees ---> make new models coursesandfees\n-    # admission open --> make new models\n-    # fcilities ---> make new models \n-    # college_gallery = model \n-    # featured video \n-    # brochure - file uploads\n-    # college_social media --- make models      \n+   \n from django.db import models\n from affiliation.models import Affiliation\n from admissionopen.models import AdmissionOpen\n from location.models import Location\n@@ -58,9 +36,9 @@\n     courses_and_fees = models.ManyToManyField(CoursesAndFees)\n     admission_open = models.ManyToManyField(AdmissionOpen)\n     facilities = models.ManyToManyField(Facility)\n     college_gallery = models.ManyToManyField(CollegeGallery)\n-    featured_video = eatured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n+    featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n     social_media = models.ManyToManyField(SocialMedia)\n     scholarships = models.TextField()\n \n"
                },
                {
                    "date": 1727175505067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,48 @@\n+   from django.db import models\n+from affiliation.models import Affiliation\n+from admissionopen.models import AdmissionOpen\n+from location.models import Location\n+from collegetype.models import CollegeType\n+from coursesandfees.models import CoursesAndFees\n+from facilities.models import Facility\n+from socialmedia.models import SocialMedia\n+\n+ \n+# CollegeGallery Model\n+class CollegeGallery(models.Model):\n+    image = models.ImageField(upload_to='college/gallery/')\n+    description = models.TextField(blank=True)\n+\n+    def __str__(self):\n+        return f'Gallery Image {self.id}'\n+\n+class College(models.Model):\n+    banner_image = models.ImageField(upload_to='college/banner/')\n+    dp_image = models.ImageField(upload_to='college/dp/')\n+    name = models.CharField(max_length=255)\n+    established_date = models.DateField()\n+    website_link = models.URLField()\n+    address = models.CharField(max_length=255)\n+    location = models.ForeignKey(Location,on_delete=models.CASCADE)\n+    phone_number = models.CharField(max_length=20)\n+    email = models.EmailField()\n+    affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE)\n+    college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE)\n+    google_map_link = models.URLField(blank=True, null=True)\n+    latitude = models.DecimalField(max_digits=9, decimal_places=6)\n+    longitude = models.DecimalField(max_digits=9, decimal_places=6)\n+    about = models.TextField()\n+    courses_and_fees = models.ManyToManyField(CoursesAndFees)\n+    admission_open = models.ManyToManyField(AdmissionOpen)\n+    facilities = models.ManyToManyField(Facility)\n+    college_gallery = models.ManyToManyField(CollegeGallery)\n+    featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n+    brochure = models.FileField(upload_to='college/brochure/')\n+    social_media = models.ManyToManyField(SocialMedia)\n+    scholarships = models.TextField()\n+\n+    def map_location(self):\n+        return f'{self.latitude}, {self.longitude}'\n+\n+    def __str__(self):\n+        return self.name\n"
                },
                {
                    "date": 1733289297887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,53 +1,4 @@\n-   from django.db import models\n-from affiliation.models import Affiliation\n-from admissionopen.models import AdmissionOpen\n-from location.models import Location\n-from collegetype.models import CollegeType\n-from coursesandfees.models import CoursesAndFees\n-from facilities.models import Facility\n-from socialmedia.models import SocialMedia\n-\n- \n-# CollegeGallery Model\n-class CollegeGallery(models.Model):\n-    image = models.ImageField(upload_to='college/gallery/')\n-    description = models.TextField(blank=True)\n-\n-    def __str__(self):\n-        return f'Gallery Image {self.id}'\n-\n-class College(models.Model):\n-    banner_image = models.ImageField(upload_to='college/banner/')\n-    dp_image = models.ImageField(upload_to='college/dp/')\n-    name = models.CharField(max_length=255)\n-    established_date = models.DateField()\n-    website_link = models.URLField()\n-    address = models.CharField(max_length=255)\n-    location = models.ForeignKey(Location,on_delete=models.CASCADE)\n-    phone_number = models.CharField(max_length=20)\n-    email = models.EmailField()\n-    affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE)\n-    college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE)\n-    google_map_link = models.URLField(blank=True, null=True)\n-    latitude = models.DecimalField(max_digits=9, decimal_places=6)\n-    longitude = models.DecimalField(max_digits=9, decimal_places=6)\n-    about = models.TextField()\n-    courses_and_fees = models.ManyToManyField(CoursesAndFees)\n-    admission_open = models.ManyToManyField(AdmissionOpen)\n-    facilities = models.ManyToManyField(Facility)\n-    college_gallery = models.ManyToManyField(CollegeGallery)\n-    featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n-    brochure = models.FileField(upload_to='college/brochure/')\n-    social_media = models.ManyToManyField(SocialMedia)\n-    scholarships = models.TextField()\n-\n-    def map_location(self):\n-        return f'{self.latitude}, {self.longitude}'\n-\n-    def __str__(self):\n-        return self.name\n-   \n from django.db import models\n from affiliation.models import Affiliation\n from admissionopen.models import AdmissionOpen\n from location.models import Location\n@@ -72,8 +23,9 @@\n     established_date = models.DateField()\n     website_link = models.URLField()\n     address = models.CharField(max_length=255)\n     location = models.ForeignKey(Location,on_delete=models.CASCADE)\n+    location = models.ForeignKey(Location,on_delete=models.CASCADE)\n     phone_number = models.CharField(max_length=20)\n     email = models.EmailField()\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE)\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE)\n"
                },
                {
                    "date": 1733289304987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,10 +22,10 @@\n     name = models.CharField(max_length=255)\n     established_date = models.DateField()\n     website_link = models.URLField()\n     address = models.CharField(max_length=255)\n+    district = models.ForeignKey(Location,on_delete=models.CASCADE)\n     location = models.ForeignKey(Location,on_delete=models.CASCADE)\n-    location = models.ForeignKey(Location,on_delete=models.CASCADE)\n     phone_number = models.CharField(max_length=20)\n     email = models.EmailField()\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE)\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE)\n"
                },
                {
                    "date": 1733289314745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n from collegetype.models import CollegeType\n from coursesandfees.models import CoursesAndFees\n from facilities.models import Facility\n from socialmedia.models import SocialMedia\n+d\n \n  \n # CollegeGallery Model\n class CollegeGallery(models.Model):\n@@ -22,9 +23,9 @@\n     name = models.CharField(max_length=255)\n     established_date = models.DateField()\n     website_link = models.URLField()\n     address = models.CharField(max_length=255)\n-    district = models.ForeignKey(Location,on_delete=models.CASCADE)\n+    district = models.ForeignKey(Dis,on_delete=models.CASCADE)\n     location = models.ForeignKey(Location,on_delete=models.CASCADE)\n     phone_number = models.CharField(max_length=20)\n     email = models.EmailField()\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE)\n"
                },
                {
                    "date": 1733289323520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n from collegetype.models import CollegeType\n from coursesandfees.models import CoursesAndFees\n from facilities.models import Facility\n from socialmedia.models import SocialMedia\n-d\n+from district.models import Dist\n \n  \n # CollegeGallery Model\n class CollegeGallery(models.Model):\n"
                },
                {
                    "date": 1733289329798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n from collegetype.models import CollegeType\n from coursesandfees.models import CoursesAndFees\n from facilities.models import Facility\n from socialmedia.models import SocialMedia\n-from district.models import Dist\n+from district.models import District\n \n  \n # CollegeGallery Model\n class CollegeGallery(models.Model):\n@@ -23,9 +23,9 @@\n     name = models.CharField(max_length=255)\n     established_date = models.DateField()\n     website_link = models.URLField()\n     address = models.CharField(max_length=255)\n-    district = models.ForeignKey(Dis,on_delete=models.CASCADE)\n+    district = models.ForeignKey(District,on_delete=models.CASCADE)\n     location = models.ForeignKey(Location,on_delete=models.CASCADE)\n     phone_number = models.CharField(max_length=20)\n     email = models.EmailField()\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE)\n"
                },
                {
                    "date": 1733289336333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n     name = models.CharField(max_length=255)\n     established_date = models.DateField()\n     website_link = models.URLField()\n     address = models.CharField(max_length=255)\n-    district = models.ForeignKey(District,on_delete=models.CASCADE)\n+    district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district')\n     location = models.ForeignKey(Location,on_delete=models.CASCADE)\n     phone_number = models.CharField(max_length=20)\n     email = models.EmailField()\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE)\n"
                },
                {
                    "date": 1733289356227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,12 +24,12 @@\n     established_date = models.DateField()\n     website_link = models.URLField()\n     address = models.CharField(max_length=255)\n     district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district')\n-    location = models.ForeignKey(Location,on_delete=models.CASCADE)\n+    # location = models.ForeignKey(Location,on_delete=models.CASCADE)\n     phone_number = models.CharField(max_length=20)\n     email = models.EmailField()\n-    affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE)\n+    affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name=)\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE)\n     google_map_link = models.URLField(blank=True, null=True)\n     latitude = models.DecimalField(max_digits=9, decimal_places=6)\n     longitude = models.DecimalField(max_digits=9, decimal_places=6)\n"
                },
                {
                    "date": 1733289384128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,10 +27,10 @@\n     district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district')\n     # location = models.ForeignKey(Location,on_delete=models.CASCADE)\n     phone_number = models.CharField(max_length=20)\n     email = models.EmailField()\n-    affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name=)\n-    college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE)\n+    affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation')\n+    college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,re)\n     google_map_link = models.URLField(blank=True, null=True)\n     latitude = models.DecimalField(max_digits=9, decimal_places=6)\n     longitude = models.DecimalField(max_digits=9, decimal_places=6)\n     about = models.TextField()\n"
                },
                {
                    "date": 1733289389657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n     # location = models.ForeignKey(Location,on_delete=models.CASCADE)\n     phone_number = models.CharField(max_length=20)\n     email = models.EmailField()\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation')\n-    college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,re)\n+    college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name=`college_type`)\n     google_map_link = models.URLField(blank=True, null=True)\n     latitude = models.DecimalField(max_digits=9, decimal_places=6)\n     longitude = models.DecimalField(max_digits=9, decimal_places=6)\n     about = models.TextField()\n"
                },
                {
                    "date": 1733289395000,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n     # location = models.ForeignKey(Location,on_delete=models.CASCADE)\n     phone_number = models.CharField(max_length=20)\n     email = models.EmailField()\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation')\n-    college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name=`college_type`)\n+    college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type')\n     google_map_link = models.URLField(blank=True, null=True)\n     latitude = models.DecimalField(max_digits=9, decimal_places=6)\n     longitude = models.DecimalField(max_digits=9, decimal_places=6)\n     about = models.TextField()\n"
                },
                {
                    "date": 1733289417519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n from coursesandfees.models import CoursesAndFees\n from facilities.models import Facility\n from socialmedia.models import SocialMedia\n from district.models import District\n+from dis\n \n  \n # CollegeGallery Model\n class CollegeGallery(models.Model):\n"
                },
                {
                    "date": 1733289423517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n from coursesandfees.models import CoursesAndFees\n from facilities.models import Facility\n from socialmedia.models import SocialMedia\n from district.models import District\n-from dis\n+from disc\n \n  \n # CollegeGallery Model\n class CollegeGallery(models.Model):\n"
                },
                {
                    "date": 1733289443426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n from coursesandfees.models import CoursesAndFees\n from facilities.models import Facility\n from socialmedia.models import SocialMedia\n from district.models import District\n-from disc\n+from discipline.models import Discipline\n \n  \n # CollegeGallery Model\n class CollegeGallery(models.Model):\n@@ -30,8 +30,9 @@\n     phone_number = models.CharField(max_length=20)\n     email = models.EmailField()\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation')\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type')\n+    disci\n     google_map_link = models.URLField(blank=True, null=True)\n     latitude = models.DecimalField(max_digits=9, decimal_places=6)\n     longitude = models.DecimalField(max_digits=9, decimal_places=6)\n     about = models.TextField()\n"
                },
                {
                    "date": 1733289449062,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n     phone_number = models.CharField(max_length=20)\n     email = models.EmailField()\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation')\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type')\n-    disci\n+    discipline = models\n     google_map_link = models.URLField(blank=True, null=True)\n     latitude = models.DecimalField(max_digits=9, decimal_places=6)\n     longitude = models.DecimalField(max_digits=9, decimal_places=6)\n     about = models.TextField()\n"
                },
                {
                    "date": 1733289471771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,10 @@\n     phone_number = models.CharField(max_length=20)\n     email = models.EmailField()\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation')\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type')\n-    discipline = models\n+    discipline = models.ManyToManyField(Discipline, related_name='college_discipline')\n+    social_media = models.ManyToManyField(SocialMedia)\n     google_map_link = models.URLField(blank=True, null=True)\n     latitude = models.DecimalField(max_digits=9, decimal_places=6)\n     longitude = models.DecimalField(max_digits=9, decimal_places=6)\n     about = models.TextField()\n@@ -41,9 +42,8 @@\n     facilities = models.ManyToManyField(Facility)\n     college_gallery = models.ManyToManyField(CollegeGallery)\n     featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n-    social_media = models.ManyToManyField(SocialMedia)\n     scholarships = models.TextField()\n \n     def map_location(self):\n         return f'{self.latitude}, {self.longitude}'\n"
                },
                {
                    "date": 1733289498410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,12 +36,12 @@\n     google_map_link = models.URLField(blank=True, null=True)\n     latitude = models.DecimalField(max_digits=9, decimal_places=6)\n     longitude = models.DecimalField(max_digits=9, decimal_places=6)\n     about = models.TextField()\n-    courses_and_fees = models.ManyToManyField(CoursesAndFees)\n-    admission_open = models.ManyToManyField(AdmissionOpen)\n-    facilities = models.ManyToManyField(Facility)\n-    college_gallery = models.ManyToManyField(CollegeGallery)\n+    # courses_and_fees = models.ManyToManyField(CoursesAndFees)\n+    # admission_open = models.ManyToManyField(AdmissionOpen)\n+    # facilities = models.ManyToManyField(Facility)\n+    # college_gallery = models.ManyToManyField(CollegeGallery)\n     featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n     scholarships = models.TextField()\n \n"
                },
                {
                    "date": 1733289675695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,11 +40,11 @@\n     # courses_and_fees = models.ManyToManyField(CoursesAndFees)\n     # admission_open = models.ManyToManyField(AdmissionOpen)\n     # facilities = models.ManyToManyField(Facility)\n     # college_gallery = models.ManyToManyField(CollegeGallery)\n-    featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n-    brochure = models.FileField(upload_to='college/brochure/')\n-    scholarships = models.TextField()\n+    # featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n+    # brochure = models.FileField(upload_to='college/brochure/')\n+    # scholarships = models.TextField()\n \n     def map_location(self):\n         return f'{self.latitude}, {self.longitude}'\n \n"
                },
                {
                    "date": 1733289797270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,8 +36,25 @@\n     google_map_link = models.URLField(blank=True, null=True)\n     latitude = models.DecimalField(max_digits=9, decimal_places=6)\n     longitude = models.DecimalField(max_digits=9, decimal_places=6)\n     about = models.TextField()\n+    \n+    # SEO Meta Tags\n+    meta_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for search engines.\")\n+    meta_tag = models.CharField(max_length=255, blank=True, null=True, help_text=\"Primary meta tag for SEO.\")\n+    meta_description = models.TextField(blank=True, null=True, help_text=\"Short description for SEO.\")\n+    meta_keywords = models.TextField(blank=True, null=True, help_text=\"Comma-separated keywords for SEO.\")\n+    meta_author = models.CharField(max_length=255, blank=True, null=True, help_text=\"Author information for SEO.\")\n+    canonical_url = models.URLField(blank=True, null=True, help_text=\"Canonical URL to avoid duplicate content.\")\n+\n+    # Open Graph (OG) Tags (Social Sharing)\n+    og_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for social sharing.\")\n+    og_description = models.TextField(blank=True, null=True, help_text=\"Description for social sharing.\")\n+    og_url = models.URLField(blank=True, null=True, help_text=\"URL to share on social platforms.\")\n+    og_image = models.URLField(blank=True, null=True, help_text=\"Image URL for social sharing.\")\n+    og_type = models.CharField(max_length=50, blank=True, null=True, help_text=\"Type of the OG content (e.g., website, article).\")\n+    og_locale = models.CharField(max_length=10, blank=True, null=True, default=\"en_US\", help_text=\"Locale for OG tags (e.g., en_US).\")\n+\n     # courses_and_fees = models.ManyToManyField(CoursesAndFees)\n     # admission_open = models.ManyToManyField(AdmissionOpen)\n     # facilities = models.ManyToManyField(Facility)\n     # college_gallery = models.ManyToManyField(CollegeGallery)\n"
                },
                {
                    "date": 1733294423021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     # Open Graph (OG) Tags (Social Sharing)\n     og_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for social sharing.\")\n     og_description = models.TextField(blank=True, null=True, help_text=\"Description for social sharing.\")\n     og_url = models.URLField(blank=True, null=True, help_text=\"URL to share on social platforms.\")\n-    og_image = models.URLField(blank=True, null=True, help_text=\"Image URL for social sharing.\")\n+    og_image =  models.ImageField(upload_to='college/dp/')\n     og_type = models.CharField(max_length=50, blank=True, null=True, help_text=\"Type of the OG content (e.g., website, article).\")\n     og_locale = models.CharField(max_length=10, blank=True, null=True, default=\"en_US\", help_text=\"Locale for OG tags (e.g., en_US).\")\n \n     # courses_and_fees = models.ManyToManyField(CoursesAndFees)\n"
                },
                {
                    "date": 1733294429180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     # Open Graph (OG) Tags (Social Sharing)\n     og_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for social sharing.\")\n     og_description = models.TextField(blank=True, null=True, help_text=\"Description for social sharing.\")\n     og_url = models.URLField(blank=True, null=True, help_text=\"URL to share on social platforms.\")\n-    og_image =  models.ImageField(upload_to='college/dp/')\n+    og_image =  models.ImageField(upload_to='college/og_image/')\n     og_type = models.CharField(max_length=50, blank=True, null=True, help_text=\"Type of the OG content (e.g., website, article).\")\n     og_locale = models.CharField(max_length=10, blank=True, null=True, default=\"en_US\", help_text=\"Locale for OG tags (e.g., en_US).\")\n \n     # courses_and_fees = models.ManyToManyField(CoursesAndFees)\n"
                },
                {
                    "date": 1733294475300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     # Open Graph (OG) Tags (Social Sharing)\n     og_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for social sharing.\")\n     og_description = models.TextField(blank=True, null=True, help_text=\"Description for social sharing.\")\n     og_url = models.URLField(blank=True, null=True, help_text=\"URL to share on social platforms.\")\n-    og_image =  models.ImageField(upload_to='college/og_image/')\n+    og_image =  models.ImageField(upload_to='college/og_image/',)\n     og_type = models.CharField(max_length=50, blank=True, null=True, help_text=\"Type of the OG content (e.g., website, article).\")\n     og_locale = models.CharField(max_length=10, blank=True, null=True, default=\"en_US\", help_text=\"Locale for OG tags (e.g., en_US).\")\n \n     # courses_and_fees = models.ManyToManyField(CoursesAndFees)\n"
                },
                {
                    "date": 1733294482603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     # Open Graph (OG) Tags (Social Sharing)\n     og_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for social sharing.\")\n     og_description = models.TextField(blank=True, null=True, help_text=\"Description for social sharing.\")\n     og_url = models.URLField(blank=True, null=True, help_text=\"URL to share on social platforms.\")\n-    og_image =  models.ImageField(upload_to='college/og_image/',)\n+    og_image =  models.ImageField(upload_to='college/og_image/',null=True,blank=True)\n     og_type = models.CharField(max_length=50, blank=True, null=True, help_text=\"Type of the OG content (e.g., website, article).\")\n     og_locale = models.CharField(max_length=10, blank=True, null=True, default=\"en_US\", help_text=\"Locale for OG tags (e.g., en_US).\")\n \n     # courses_and_fees = models.ManyToManyField(CoursesAndFees)\n"
                },
                {
                    "date": 1733296103109,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,15 +53,15 @@\n     og_image =  models.ImageField(upload_to='college/og_image/',null=True,blank=True)\n     og_type = models.CharField(max_length=50, blank=True, null=True, help_text=\"Type of the OG content (e.g., website, article).\")\n     og_locale = models.CharField(max_length=10, blank=True, null=True, default=\"en_US\", help_text=\"Locale for OG tags (e.g., en_US).\")\n \n-    # courses_and_fees = models.ManyToManyField(CoursesAndFees)\n-    # admission_open = models.ManyToManyField(AdmissionOpen)\n-    # facilities = models.ManyToManyField(Facility)\n-    # college_gallery = models.ManyToManyField(CollegeGallery)\n-    # featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n-    # brochure = models.FileField(upload_to='college/brochure/')\n-    # scholarships = models.TextField()\n+    courses_and_fees = models.ManyToManyField(CoursesAndFees)\n+    admission_open = models.ManyToManyField(AdmissionOpen)\n+    facilities = models.ManyToManyField(Facility)\n+    college_gallery = models.ManyToManyField(CollegeGallery)\n+    featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n+    brochure = models.FileField(upload_to='college/brochure/')\n+    scholarships = models.TextField()\n \n     def map_location(self):\n         return f'{self.latitude}, {self.longitude}'\n \n"
                },
                {
                    "date": 1733296136281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n     og_locale = models.CharField(max_length=10, blank=True, null=True, default=\"en_US\", help_text=\"Locale for OG tags (e.g., en_US).\")\n \n     courses_and_fees = models.ManyToManyField(CoursesAndFees)\n     admission_open = models.ManyToManyField(AdmissionOpen)\n-    facilities = models.ManyToManyField(Facility)\n+    facilities = models.ManyToManyField(Facility,related_name=)\n     college_gallery = models.ManyToManyField(CollegeGallery)\n     featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n     scholarships = models.TextField()\n"
                },
                {
                    "date": 1733296141856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,11 +53,11 @@\n     og_image =  models.ImageField(upload_to='college/og_image/',null=True,blank=True)\n     og_type = models.CharField(max_length=50, blank=True, null=True, help_text=\"Type of the OG content (e.g., website, article).\")\n     og_locale = models.CharField(max_length=10, blank=True, null=True, default=\"en_US\", help_text=\"Locale for OG tags (e.g., en_US).\")\n \n-    courses_and_fees = models.ManyToManyField(CoursesAndFees)\n+    courses_and_fees = models.ManyToManyField(CoursesAndFees,rela)\n     admission_open = models.ManyToManyField(AdmissionOpen)\n-    facilities = models.ManyToManyField(Facility,related_name=)\n+    facilities = models.ManyToManyField(Facility,related_name='college_facilities')\n     college_gallery = models.ManyToManyField(CollegeGallery)\n     featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n     scholarships = models.TextField()\n"
                },
                {
                    "date": 1733296184065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n from facilities.models import Facility\n from socialmedia.models import SocialMedia\n from district.models import District\n from discipline.models import Discipline\n+from ga\n \n  \n # CollegeGallery Model\n class CollegeGallery(models.Model):\n@@ -53,9 +54,9 @@\n     og_image =  models.ImageField(upload_to='college/og_image/',null=True,blank=True)\n     og_type = models.CharField(max_length=50, blank=True, null=True, help_text=\"Type of the OG content (e.g., website, article).\")\n     og_locale = models.CharField(max_length=10, blank=True, null=True, default=\"en_US\", help_text=\"Locale for OG tags (e.g., en_US).\")\n \n-    courses_and_fees = models.ManyToManyField(CoursesAndFees,rela)\n+    courses_and_fees = models.ManyToManyField(CoursesAndFees,related_name='college_courses_and_fees')\n     admission_open = models.ManyToManyField(AdmissionOpen)\n     facilities = models.ManyToManyField(Facility,related_name='college_facilities')\n     college_gallery = models.ManyToManyField(CollegeGallery)\n     featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n"
                },
                {
                    "date": 1733296281352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n from facilities.models import Facility\n from socialmedia.models import SocialMedia\n from district.models import District\n from discipline.models import Discipline\n-from ga\n+from gallery.models import Gallery\n \n  \n # CollegeGallery Model\n class CollegeGallery(models.Model):\n@@ -17,9 +17,16 @@\n     description = models.TextField(blank=True)\n \n     def __str__(self):\n         return f'Gallery Image {self.id}'\n+    \n+    class CollegeGallery(models.Model):\n+    image = models.ImageField(upload_to='college/gallery/')\n+    description = models.TextField(blank=True)\n \n+    def __str__(self):\n+        return f'Gallery Image {self.id}'\n+\n class College(models.Model):\n     banner_image = models.ImageField(upload_to='college/banner/')\n     dp_image = models.ImageField(upload_to='college/dp/')\n     name = models.CharField(max_length=255)\n"
                },
                {
                    "date": 1733296288766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,10 +18,9 @@\n \n     def __str__(self):\n         return f'Gallery Image {self.id}'\n     \n-    class CollegeGallery(models.Model):\n-    image = models.ImageField(upload_to='college/gallery/')\n+class CollegeGallery(models.Model):\n     description = models.TextField(blank=True)\n \n     def __str__(self):\n         return f'Gallery Image {self.id}'\n"
                },
                {
                    "date": 1733296294949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,9 @@\n         return f'Gallery Image {self.id}'\n     \n class CollegeGallery(models.Model):\n     description = models.TextField(blank=True)\n+    crea\n \n     def __str__(self):\n         return f'Gallery Image {self.id}'\n \n"
                },
                {
                    "date": 1733296302004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,10 @@\n         return f'Gallery Image {self.id}'\n     \n class CollegeGallery(models.Model):\n     description = models.TextField(blank=True)\n-    crea\n+    created_date = models.DateField(auto_now_add=True)\n+    updated\n \n     def __str__(self):\n         return f'Gallery Image {self.id}'\n \n"
                },
                {
                    "date": 1733296307386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n     \n class CollegeGallery(models.Model):\n     description = models.TextField(blank=True)\n     created_date = models.DateField(auto_now_add=True)\n-    updated\n+    updated_date = models.DateField(auto_now=True)\n \n     def __str__(self):\n         return f'Gallery Image {self.id}'\n \n"
                },
                {
                    "date": 1733296325368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,10 @@\n # CollegeGallery Model\n class CollegeGallery(models.Model):\n     image = models.ImageField(upload_to='college/gallery/')\n     description = models.TextField(blank=True)\n+    created_date = models.DateField(auto_now_add=True)\n+    updated_date = models.DateField(auto_now=True)\n \n     def __str__(self):\n         return f'Gallery Image {self.id}'\n     \n"
                },
                {
                    "date": 1733296333653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     created_date = models.DateField(auto_now_add=True)\n     updated_date = models.DateField(auto_now=True)\n \n     def __str__(self):\n-        return f'Gallery Image {self.id}'\n+        return f'description {self.id}'\n \n class College(models.Model):\n     banner_image = models.ImageField(upload_to='college/banner/')\n     dp_image = models.ImageField(upload_to='college/dp/')\n"
                },
                {
                    "date": 1733296340744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n \n     def __str__(self):\n         return f'Gallery Image {self.id}'\n     \n-class CollegeGallery(models.Model):\n+class Placement(models.Model):\n     description = models.TextField(blank=True)\n     created_date = models.DateField(auto_now_add=True)\n     updated_date = models.DateField(auto_now=True)\n \n"
                },
                {
                    "date": 1733296353897,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     created_date = models.DateField(auto_now_add=True)\n     updated_date = models.DateField(auto_now=True)\n \n     def __str__(self):\n-        return f'description {self.id}'\n+        return f'Placement {self.id}'\n \n class College(models.Model):\n     banner_image = models.ImageField(upload_to='college/banner/')\n     dp_image = models.ImageField(upload_to='college/dp/')\n@@ -68,8 +68,9 @@\n     courses_and_fees = models.ManyToManyField(CoursesAndFees,related_name='college_courses_and_fees')\n     admission_open = models.ManyToManyField(AdmissionOpen)\n     facilities = models.ManyToManyField(Facility,related_name='college_facilities')\n     college_gallery = models.ManyToManyField(CollegeGallery)\n+    college_gallery = models.ManyToManyField(CollegeGallery)\n     featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n     scholarships = models.TextField()\n \n"
                },
                {
                    "date": 1733296363356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n     courses_and_fees = models.ManyToManyField(CoursesAndFees,related_name='college_courses_and_fees')\n     admission_open = models.ManyToManyField(AdmissionOpen)\n     facilities = models.ManyToManyField(Facility,related_name='college_facilities')\n     college_gallery = models.ManyToManyField(CollegeGallery)\n-    college_gallery = models.ManyToManyField(CollegeGallery)\n+    placement = models.\n     featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n     scholarships = models.TextField()\n \n"
                },
                {
                    "date": 1733296370854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n     courses_and_fees = models.ManyToManyField(CoursesAndFees,related_name='college_courses_and_fees')\n     admission_open = models.ManyToManyField(AdmissionOpen)\n     facilities = models.ManyToManyField(Facility,related_name='college_facilities')\n     college_gallery = models.ManyToManyField(CollegeGallery)\n-    placement = models.\n+    placement = models.ForeignKey\n     featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n     scholarships = models.TextField()\n \n"
                },
                {
                    "date": 1733296414014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n     courses_and_fees = models.ManyToManyField(CoursesAndFees,related_name='college_courses_and_fees')\n     admission_open = models.ManyToManyField(AdmissionOpen)\n     facilities = models.ManyToManyField(Facility,related_name='college_facilities')\n     college_gallery = models.ManyToManyField(CollegeGallery)\n-    placement = models.ForeignKey\n+    placement = models.\n     featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n     scholarships = models.TextField()\n \n"
                },
                {
                    "date": 1733296420663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n     courses_and_fees = models.ManyToManyField(CoursesAndFees,related_name='college_courses_and_fees')\n     admission_open = models.ManyToManyField(AdmissionOpen)\n     facilities = models.ManyToManyField(Facility,related_name='college_facilities')\n     college_gallery = models.ManyToManyField(CollegeGallery)\n-    placement = models.\n+    placement = models.TextField\n     featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n     scholarships = models.TextField()\n \n"
                },
                {
                    "date": 1733296447836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,10 @@\n     courses_and_fees = models.ManyToManyField(CoursesAndFees,related_name='college_courses_and_fees')\n     admission_open = models.ManyToManyField(AdmissionOpen)\n     facilities = models.ManyToManyField(Facility,related_name='college_facilities')\n     college_gallery = models.ManyToManyField(CollegeGallery)\n-    placement = models.TextField\n+    placement = models.TextField(null=True,blank=True)\n+    \n     featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n     scholarships = models.TextField()\n \n"
                },
                {
                    "date": 1733296460516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,8 +69,9 @@\n     admission_open = models.ManyToManyField(AdmissionOpen)\n     facilities = models.ManyToManyField(Facility,related_name='college_facilities')\n     college_gallery = models.ManyToManyField(CollegeGallery)\n     placement = models.TextField(null=True,blank=True)\n+    scholarship = models\n     \n     featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n     scholarships = models.TextField()\n"
                },
                {
                    "date": 1733296479462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n from socialmedia.models import SocialMedia\n from district.models import District\n from discipline.models import Discipline\n from gallery.models import Gallery\n+fr\n \n  \n # CollegeGallery Model\n class CollegeGallery(models.Model):\n@@ -69,9 +70,9 @@\n     admission_open = models.ManyToManyField(AdmissionOpen)\n     facilities = models.ManyToManyField(Facility,related_name='college_facilities')\n     college_gallery = models.ManyToManyField(CollegeGallery)\n     placement = models.TextField(null=True,blank=True)\n-    scholarship = models\n+    scholarship = models.TextField(null=True,blank=True)\n     \n     featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n     scholarships = models.TextField()\n"
                },
                {
                    "date": 1733296486486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n from socialmedia.models import SocialMedia\n from district.models import District\n from discipline.models import Discipline\n from gallery.models import Gallery\n-fr\n+from faq\n \n  \n # CollegeGallery Model\n class CollegeGallery(models.Model):\n"
                },
                {
                    "date": 1733296537408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n from socialmedia.models import SocialMedia\n from district.models import District\n from discipline.models import Discipline\n from gallery.models import Gallery\n-from faq\n+from faqs.models import FAQs\n \n  \n # CollegeGallery Model\n class CollegeGallery(models.Model):\n@@ -29,8 +29,15 @@\n \n     def __str__(self):\n         return f'Placement {self.id}'\n \n+class Placement(models.Model):\n+    description = models.TextField(blank=True)\n+    created_date = models.DateField(auto_now_add=True)\n+    updated_date = models.DateField(auto_now=True)\n+\n+    def __str__(self):\n+        return f'Placement {self.id}'\n class College(models.Model):\n     banner_image = models.ImageField(upload_to='college/banner/')\n     dp_image = models.ImageField(upload_to='college/dp/')\n     name = models.CharField(max_length=255)\n"
                },
                {
                    "date": 1733296544571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n from socialmedia.models import SocialMedia\n from district.models import District\n from discipline.models import Discipline\n from gallery.models import Gallery\n-from faqs.models import FAQs\n+# from faqs.models import FAQs\n \n  \n # CollegeGallery Model\n class CollegeGallery(models.Model):\n@@ -36,8 +36,9 @@\n     updated_date = models.DateField(auto_now=True)\n \n     def __str__(self):\n         return f'Placement {self.id}'\n+    \n class College(models.Model):\n     banner_image = models.ImageField(upload_to='college/banner/')\n     dp_image = models.ImageField(upload_to='college/dp/')\n     name = models.CharField(max_length=255)\n"
                },
                {
                    "date": 1733296551429,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n \n     def __str__(self):\n         return f'Placement {self.id}'\n \n-class Placement(models.Model):\n+class CollegeFaqs(models.Model):\n     description = models.TextField(blank=True)\n     created_date = models.DateField(auto_now_add=True)\n     updated_date = models.DateField(auto_now=True)\n \n"
                },
                {
                    "date": 1733296562295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,9 @@\n     def __str__(self):\n         return f'Placement {self.id}'\n \n class CollegeFaqs(models.Model):\n+    qu\n     description = models.TextField(blank=True)\n     created_date = models.DateField(auto_now_add=True)\n     updated_date = models.DateField(auto_now=True)\n \n"
                },
                {
                    "date": 1733296567437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n     def __str__(self):\n         return f'Placement {self.id}'\n \n class CollegeFaqs(models.Model):\n-    qu\n+    question = models.CharField(max_length=255)\n     description = models.TextField(blank=True)\n     created_date = models.DateField(auto_now_add=True)\n     updated_date = models.DateField(auto_now=True)\n \n"
                },
                {
                    "date": 1733296572667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n         return f'Placement {self.id}'\n \n class CollegeFaqs(models.Model):\n     question = models.CharField(max_length=255)\n-    description = models.TextField(blank=True)\n+    answer = models.TextField(blank=True)\n     created_date = models.DateField(auto_now_add=True)\n     updated_date = models.DateField(auto_now=True)\n \n     def __str__(self):\n"
                },
                {
                    "date": 1733296584416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,8 +84,9 @@\n     \n     featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n     scholarships = models.TextField()\n+    faq\n \n     def map_location(self):\n         return f'{self.latitude}, {self.longitude}'\n \n"
                },
                {
                    "date": 1733296589639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n     \n     featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n     scholarships = models.TextField()\n-    faq\n+    faqs = models.ManyToManyField(CollegeFaqs)\n \n     def map_location(self):\n         return f'{self.latitude}, {self.longitude}'\n \n"
                },
                {
                    "date": 1733296691839,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,8 +85,10 @@\n     featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n     scholarships = models.TextField()\n     faqs = models.ManyToManyField(CollegeFaqs)\n+    \n+    dis\n \n     def map_location(self):\n         return f'{self.latitude}, {self.longitude}'\n \n"
                },
                {
                    "date": 1733296699568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n     brochure = models.FileField(upload_to='college/brochure/')\n     scholarships = models.TextField()\n     faqs = models.ManyToManyField(CollegeFaqs)\n     \n-    dis\n+    discipline = models.ManyToManyField(Discipline)\n \n     def map_location(self):\n         return f'{self.latitude}, {self.longitude}'\n \n"
                },
                {
                    "date": 1733297626937,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,8 +86,9 @@\n     brochure = models.FileField(upload_to='college/brochure/')\n     scholarships = models.TextField()\n     faqs = models.ManyToManyField(CollegeFaqs)\n     \n+    \n     discipline = models.ManyToManyField(Discipline)\n \n     def map_location(self):\n         return f'{self.latitude}, {self.longitude}'\n"
                },
                {
                    "date": 1733297633568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n from socialmedia.models import SocialMedia\n from district.models import District\n from discipline.models import Discipline\n from gallery.models import Gallery\n+from accounts.\n # from faqs.models import FAQs\n \n  \n # CollegeGallery Model\n"
                },
                {
                    "date": 1733297638790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n from socialmedia.models import SocialMedia\n from district.models import District\n from discipline.models import Discipline\n from gallery.models import Gallery\n-from accounts.\n+from accounts.models import Cus\n # from faqs.models import FAQs\n \n  \n # CollegeGallery Model\n"
                },
                {
                    "date": 1733297644942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n from socialmedia.models import SocialMedia\n from district.models import District\n from discipline.models import Discipline\n from gallery.models import Gallery\n-from accounts.models import Cus\n+from accounts.models import CustomUser\n # from faqs.models import FAQs\n \n  \n # CollegeGallery Model\n@@ -86,8 +86,9 @@\n     featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n     scholarships = models.TextField()\n     faqs = models.ManyToManyField(CollegeFaqs)\n+    c\n     \n     \n     discipline = models.ManyToManyField(Discipline)\n \n"
                },
                {
                    "date": 1733297653489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n     featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n     scholarships = models.TextField()\n     faqs = models.ManyToManyField(CollegeFaqs)\n-    c\n+    college_admin = models\n     \n     \n     discipline = models.ManyToManyField(Discipline)\n \n"
                },
                {
                    "date": 1733297658995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n     featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n     scholarships = models.TextField()\n     faqs = models.ManyToManyField(CollegeFaqs)\n-    college_admin = models\n+    college_admin = modells\n     \n     \n     discipline = models.ManyToManyField(Discipline)\n \n"
                },
                {
                    "date": 1733297667222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n     featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n     brochure = models.FileField(upload_to='college/brochure/')\n     scholarships = models.TextField()\n     faqs = models.ManyToManyField(CollegeFaqs)\n-    college_admin = modells\n+    college_admin = models.ForeignKey(CustomUser, on_delete=models.CASCADE,related_name='college_admin')\n     \n     \n     discipline = models.ManyToManyField(Discipline)\n \n"
                },
                {
                    "date": 1733297710333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,11 +87,8 @@\n     brochure = models.FileField(upload_to='college/brochure/')\n     scholarships = models.TextField()\n     faqs = models.ManyToManyField(CollegeFaqs)\n     college_admin = models.ForeignKey(CustomUser, on_delete=models.CASCADE,related_name='college_admin')\n-    \n-    \n-    discipline = models.ManyToManyField(Discipline)\n \n     def map_location(self):\n         return f'{self.latitude}, {self.longitude}'\n \n"
                },
                {
                    "date": 1733297715636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,10 +82,10 @@\n     college_gallery = models.ManyToManyField(CollegeGallery)\n     placement = models.TextField(null=True,blank=True)\n     scholarship = models.TextField(null=True,blank=True)\n     \n-    featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n-    brochure = models.FileField(upload_to='college/brochure/')\n+    # featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n+    # brochure = models.FileField(upload_to='college/brochure/')\n     scholarships = models.TextField()\n     faqs = models.ManyToManyField(CollegeFaqs)\n     college_admin = models.ForeignKey(CustomUser, on_delete=models.CASCADE,related_name='college_admin')\n \n"
                },
                {
                    "date": 1733305646135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,15 @@\n     og_url = models.URLField(blank=True, null=True, help_text=\"URL to share on social platforms.\")\n     og_image =  models.ImageField(upload_to='college/og_image/',null=True,blank=True)\n     og_type = models.CharField(max_length=50, blank=True, null=True, help_text=\"Type of the OG content (e.g., website, article).\")\n     og_locale = models.CharField(max_length=10, blank=True, null=True, default=\"en_US\", help_text=\"Locale for OG tags (e.g., en_US).\")\n+    \n+    # Dublin Core Metadata\n+    dc_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for Dublin Core Metadata.\")\n+    dc_description = models.TextField(blank=True, null=True, help_text=\"Description for Dublin Core Metadata.\")\n+    dc_language = models.CharField(max_length=10, blank=True, null=True, default=\"en\", help_text=\"Language code for Dublin Core Metadata (e.g., en, fr).\")\n \n+\n     courses_and_fees = models.ManyToManyField(CoursesAndFees,related_name='college_courses_and_fees')\n     admission_open = models.ManyToManyField(AdmissionOpen)\n     facilities = models.ManyToManyField(Facility,related_name='college_facilities')\n     college_gallery = models.ManyToManyField(CollegeGallery)\n"
                },
                {
                    "date": 1733310535964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n     placement = models.TextField(null=True,blank=True)\n     scholarship = models.TextField(null=True,blank=True)\n     \n     # featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n-    # brochure = models.FileField(upload_to='college/brochure/')\n+    brochure = models.FileField(upload_to='college/brochure/')\n     scholarships = models.TextField()\n     faqs = models.ManyToManyField(CollegeFaqs)\n     college_admin = models.ForeignKey(CustomUser, on_delete=models.CASCADE,related_name='college_admin')\n \n"
                },
                {
                    "date": 1733310545195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,8 +58,9 @@\n     google_map_link = models.URLField(blank=True, null=True)\n     latitude = models.DecimalField(max_digits=9, decimal_places=6)\n     longitude = models.DecimalField(max_digits=9, decimal_places=6)\n     about = models.TextField()\n+    brochure = models.FileField(upload_to='college/brochure/')\n     \n     # SEO Meta Tags\n     meta_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for search engines.\")\n     meta_tag = models.CharField(max_length=255, blank=True, null=True, help_text=\"Primary meta tag for SEO.\")\n@@ -89,9 +90,8 @@\n     placement = models.TextField(null=True,blank=True)\n     scholarship = models.TextField(null=True,blank=True)\n     \n     # featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n-    brochure = models.FileField(upload_to='college/brochure/')\n     scholarships = models.TextField()\n     faqs = models.ManyToManyField(CollegeFaqs)\n     college_admin = models.ForeignKey(CustomUser, on_delete=models.CASCADE,related_name='college_admin')\n \n"
                },
                {
                    "date": 1733310561940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n from district.models import District\n from discipline.models import Discipline\n from gallery.models import Gallery\n from accounts.models import CustomUser\n+from \n # from faqs.models import FAQs\n \n  \n # CollegeGallery Model\n"
                },
                {
                    "date": 1733310581757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n from district.models import District\n from discipline.models import Discipline\n from gallery.models import Gallery\n from accounts.models import CustomUser\n-from \n+from form\n # from faqs.models import FAQs\n \n  \n # CollegeGallery Model\n"
                },
                {
                    "date": 1733310589276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n from district.models import District\n from discipline.models import Discipline\n from gallery.models import Gallery\n from accounts.models import CustomUser\n-from form\n+from formprogress.models import FormStepProgress\n # from faqs.models import FAQs\n \n  \n # CollegeGallery Model\n"
                },
                {
                    "date": 1733310605976,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,8 +61,9 @@\n     longitude = models.DecimalField(max_digits=9, decimal_places=6)\n     about = models.TextField()\n     brochure = models.FileField(upload_to='college/brochure/')\n     \n+    \n     # SEO Meta Tags\n     meta_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for search engines.\")\n     meta_tag = models.CharField(max_length=255, blank=True, null=True, help_text=\"Primary meta tag for SEO.\")\n     meta_description = models.TextField(blank=True, null=True, help_text=\"Short description for SEO.\")\n"
                },
                {
                    "date": 1733310611716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,10 +60,10 @@\n     latitude = models.DecimalField(max_digits=9, decimal_places=6)\n     longitude = models.DecimalField(max_digits=9, decimal_places=6)\n     about = models.TextField()\n     brochure = models.FileField(upload_to='college/brochure/')\n+    step\n     \n-    \n     # SEO Meta Tags\n     meta_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for search engines.\")\n     meta_tag = models.CharField(max_length=255, blank=True, null=True, help_text=\"Primary meta tag for SEO.\")\n     meta_description = models.TextField(blank=True, null=True, help_text=\"Short description for SEO.\")\n"
                },
                {
                    "date": 1733310629172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n     latitude = models.DecimalField(max_digits=9, decimal_places=6)\n     longitude = models.DecimalField(max_digits=9, decimal_places=6)\n     about = models.TextField()\n     brochure = models.FileField(upload_to='college/brochure/')\n-    step\n+    step_counter= models\n     \n     # SEO Meta Tags\n     meta_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for search engines.\")\n     meta_tag = models.CharField(max_length=255, blank=True, null=True, help_text=\"Primary meta tag for SEO.\")\n"
                },
                {
                    "date": 1733310634896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n     latitude = models.DecimalField(max_digits=9, decimal_places=6)\n     longitude = models.DecimalField(max_digits=9, decimal_places=6)\n     about = models.TextField()\n     brochure = models.FileField(upload_to='college/brochure/')\n-    step_counter= models\n+    step_counter= models.ForeignKey(FormStepProgress, on_delete=models.CASCADE,related_name='step_counter')\n     \n     # SEO Meta Tags\n     meta_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for search engines.\")\n     meta_tag = models.CharField(max_length=255, blank=True, null=True, help_text=\"Primary meta tag for SEO.\")\n"
                },
                {
                    "date": 1733310683036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n     google_map_link = models.URLField(blank=True, null=True)\n     latitude = models.DecimalField(max_digits=9, decimal_places=6)\n     longitude = models.DecimalField(max_digits=9, decimal_places=6)\n     about = models.TextField()\n-    brochure = models.FileField(upload_to='college/brochure/')\n+    brochure = models.FileField(upload_to='college/brochure/',n)\n     step_counter= models.ForeignKey(FormStepProgress, on_delete=models.CASCADE,related_name='step_counter')\n     \n     # SEO Meta Tags\n     meta_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for search engines.\")\n"
                },
                {
                    "date": 1733378990441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,104 @@\n+from django.db import models\n+from affiliation.models import Affiliation\n+from admissionopen.models import AdmissionOpen\n+# from location.models import Location\n+from collegetype.models import CollegeType\n+from coursesandfees.models import CoursesAndFees\n+from facilities.models import Facility\n+from socialmedia.models import SocialMedia\n+from district.models import District\n+from discipline.models import Discipline\n+from gallery.models import Gallery\n+from accounts.models import CustomUser\n+from formprogress.models import FormStepProgress\n+# from faqs.models import FAQs\n+\n+ \n+# CollegeGallery Model\n+class CollegeGallery(models.Model):\n+    image = models.ImageField(upload_to='college/gallery/')\n+    description = models.TextField(blank=True)\n+    created_date = models.DateField(auto_now_add=True)\n+    updated_date = models.DateField(auto_now=True)\n+\n+    def __str__(self):\n+        return f'Gallery Image {self.id}'\n+    \n+class Placement(models.Model):\n+    description = models.TextField(blank=True)\n+    created_date = models.DateField(auto_now_add=True)\n+    updated_date = models.DateField(auto_now=True)\n+\n+    def __str__(self):\n+        return f'Placement {self.id}'\n+\n+class CollegeFaqs(models.Model):\n+    question = models.CharField(max_length=255)\n+    answer = models.TextField(blank=True)\n+    created_date = models.DateField(auto_now_add=True)\n+    updated_date = models.DateField(auto_now=True)\n+\n+    def __str__(self):\n+        return f'Placement {self.id}'\n+    \n+class College(models.Model):\n+    banner_image = models.ImageField(upload_to='college/banner/')\n+    dp_image = models.ImageField(upload_to='college/dp/')\n+    name = models.CharField(max_length=255)\n+    established_date = models.DateField()\n+    website_link = models.URLField()\n+    address = models.CharField(max_length=255)\n+    district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district')\n+    # location = models.ForeignKey(Location,on_delete=models.CASCADE)\n+    phone_number = models.CharField(max_length=20)\n+    email = models.EmailField()\n+    affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation')\n+    college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type')\n+    discipline = models.ManyToManyField(Discipline, related_name='college_discipline')\n+    social_media = models.ManyToManyField(SocialMedia)\n+    google_map_link = models.URLField(blank=True, null=True)\n+    latitude = models.DecimalField(max_digits=9, decimal_places=6)\n+    longitude = models.DecimalField(max_digits=9, decimal_places=6)\n+    about = models.TextField()\n+    brochure = models.FileField(upload_to='college/brochure/',null=True,blank=True)\n+    step_counter= models.ForeignKey(FormStepProgress, on_delete=models.CASCADE,related_name='step_counter')\n+    \n+    # SEO Meta Tags\n+    meta_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for search engines.\")\n+    meta_tag = models.CharField(max_length=255, blank=True, null=True, help_text=\"Primary meta tag for SEO.\")\n+    meta_description = models.TextField(blank=True, null=True, help_text=\"Short description for SEO.\")\n+    meta_keywords = models.TextField(blank=True, null=True, help_text=\"Comma-separated keywords for SEO.\")\n+    meta_author = models.CharField(max_length=255, blank=True, null=True, help_text=\"Author information for SEO.\")\n+    canonical_url = models.URLField(blank=True, null=True, help_text=\"Canonical URL to avoid duplicate content.\")\n+\n+    # Open Graph (OG) Tags (Social Sharing)\n+    og_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for social sharing.\")\n+    og_description = models.TextField(blank=True, null=True, help_text=\"Description for social sharing.\")\n+    og_url = models.URLField(blank=True, null=True, help_text=\"URL to share on social platforms.\")\n+    og_image =  models.ImageField(upload_to='college/og_image/',null=True,blank=True)\n+    og_type = models.CharField(max_length=50, blank=True, null=True, help_text=\"Type of the OG content (e.g., website, article).\")\n+    og_locale = models.CharField(max_length=10, blank=True, null=True, default=\"en_US\", help_text=\"Locale for OG tags (e.g., en_US).\")\n+    \n+    # Dublin Core Metadata\n+    dc_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for Dublin Core Metadata.\")\n+    dc_description = models.TextField(blank=True, null=True, help_text=\"Description for Dublin Core Metadata.\")\n+    dc_language = models.CharField(max_length=10, blank=True, null=True, default=\"en\", help_text=\"Language code for Dublin Core Metadata (e.g., en, fr).\")\n+\n+\n+    courses_and_fees = models.ManyToManyField(CoursesAndFees,related_name='college_courses_and_fees')\n+    admission_open = models.ManyToManyField(AdmissionOpen)\n+    facilities = models.ManyToManyField(Facility,related_name='college_facilities')\n+    college_gallery = models.ManyToManyField(CollegeGallery)\n+    placement = models.TextField(null=True,blank=True)\n+    scholarship = models.TextField(null=True,blank=True)\n+    \n+    # featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n+    scholarships = models.TextField()\n+    faqs = models.ManyToManyField(CollegeFaqs)\n+    college_admin = models.ForeignKey(CustomUser, on_delete=models.CASCADE,related_name='college_admin')\n+\n+    def map_location(self):\n+        return f'{self.latitude}, {self.longitude}'\n+\n+    def __str__(self):\n+        return self.name\n"
                },
                {
                    "date": 1733379006862,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n from django.db import models\n from affiliation.models import Affiliation\n-from admissionopen.models import AdmissionOpen\n+# from admissionopen.models import AdmissionOpen\n # from location.models import Location\n from collegetype.models import CollegeType\n from coursesandfees.models import CoursesAndFees\n from facilities.models import Facility\n@@ -85,9 +85,9 @@\n     dc_language = models.CharField(max_length=10, blank=True, null=True, default=\"en\", help_text=\"Language code for Dublin Core Metadata (e.g., en, fr).\")\n \n \n     courses_and_fees = models.ManyToManyField(CoursesAndFees,related_name='college_courses_and_fees')\n-    admission_open = models.ManyToManyField(AdmissionOpen)\n+    # admission_open = models.ManyToManyField(AdmissionOpen)\n     facilities = models.ManyToManyField(Facility,related_name='college_facilities')\n     college_gallery = models.ManyToManyField(CollegeGallery)\n     placement = models.TextField(null=True,blank=True)\n     scholarship = models.TextField(null=True,blank=True)\n@@ -101,108 +101,4 @@\n         return f'{self.latitude}, {self.longitude}'\n \n     def __str__(self):\n         return self.name\n-from django.db import models\n-from affiliation.models import Affiliation\n-from admissionopen.models import AdmissionOpen\n-from location.models import Location\n-from collegetype.models import CollegeType\n-from coursesandfees.models import CoursesAndFees\n-from facilities.models import Facility\n-from socialmedia.models import SocialMedia\n-from district.models import District\n-from discipline.models import Discipline\n-from gallery.models import Gallery\n-from accounts.models import CustomUser\n-from formprogress.models import FormStepProgress\n-# from faqs.models import FAQs\n-\n- \n-# CollegeGallery Model\n-class CollegeGallery(models.Model):\n-    image = models.ImageField(upload_to='college/gallery/')\n-    description = models.TextField(blank=True)\n-    created_date = models.DateField(auto_now_add=True)\n-    updated_date = models.DateField(auto_now=True)\n-\n-    def __str__(self):\n-        return f'Gallery Image {self.id}'\n-    \n-class Placement(models.Model):\n-    description = models.TextField(blank=True)\n-    created_date = models.DateField(auto_now_add=True)\n-    updated_date = models.DateField(auto_now=True)\n-\n-    def __str__(self):\n-        return f'Placement {self.id}'\n-\n-class CollegeFaqs(models.Model):\n-    question = models.CharField(max_length=255)\n-    answer = models.TextField(blank=True)\n-    created_date = models.DateField(auto_now_add=True)\n-    updated_date = models.DateField(auto_now=True)\n-\n-    def __str__(self):\n-        return f'Placement {self.id}'\n-    \n-class College(models.Model):\n-    banner_image = models.ImageField(upload_to='college/banner/')\n-    dp_image = models.ImageField(upload_to='college/dp/')\n-    name = models.CharField(max_length=255)\n-    established_date = models.DateField()\n-    website_link = models.URLField()\n-    address = models.CharField(max_length=255)\n-    district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district')\n-    # location = models.ForeignKey(Location,on_delete=models.CASCADE)\n-    phone_number = models.CharField(max_length=20)\n-    email = models.EmailField()\n-    affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation')\n-    college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type')\n-    discipline = models.ManyToManyField(Discipline, related_name='college_discipline')\n-    social_media = models.ManyToManyField(SocialMedia)\n-    google_map_link = models.URLField(blank=True, null=True)\n-    latitude = models.DecimalField(max_digits=9, decimal_places=6)\n-    longitude = models.DecimalField(max_digits=9, decimal_places=6)\n-    about = models.TextField()\n-    brochure = models.FileField(upload_to='college/brochure/',n)\n-    step_counter= models.ForeignKey(FormStepProgress, on_delete=models.CASCADE,related_name='step_counter')\n-    \n-    # SEO Meta Tags\n-    meta_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for search engines.\")\n-    meta_tag = models.CharField(max_length=255, blank=True, null=True, help_text=\"Primary meta tag for SEO.\")\n-    meta_description = models.TextField(blank=True, null=True, help_text=\"Short description for SEO.\")\n-    meta_keywords = models.TextField(blank=True, null=True, help_text=\"Comma-separated keywords for SEO.\")\n-    meta_author = models.CharField(max_length=255, blank=True, null=True, help_text=\"Author information for SEO.\")\n-    canonical_url = models.URLField(blank=True, null=True, help_text=\"Canonical URL to avoid duplicate content.\")\n-\n-    # Open Graph (OG) Tags (Social Sharing)\n-    og_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for social sharing.\")\n-    og_description = models.TextField(blank=True, null=True, help_text=\"Description for social sharing.\")\n-    og_url = models.URLField(blank=True, null=True, help_text=\"URL to share on social platforms.\")\n-    og_image =  models.ImageField(upload_to='college/og_image/',null=True,blank=True)\n-    og_type = models.CharField(max_length=50, blank=True, null=True, help_text=\"Type of the OG content (e.g., website, article).\")\n-    og_locale = models.CharField(max_length=10, blank=True, null=True, default=\"en_US\", help_text=\"Locale for OG tags (e.g., en_US).\")\n-    \n-    # Dublin Core Metadata\n-    dc_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for Dublin Core Metadata.\")\n-    dc_description = models.TextField(blank=True, null=True, help_text=\"Description for Dublin Core Metadata.\")\n-    dc_language = models.CharField(max_length=10, blank=True, null=True, default=\"en\", help_text=\"Language code for Dublin Core Metadata (e.g., en, fr).\")\n-\n-\n-    courses_and_fees = models.ManyToManyField(CoursesAndFees,related_name='college_courses_and_fees')\n-    admission_open = models.ManyToManyField(AdmissionOpen)\n-    facilities = models.ManyToManyField(Facility,related_name='college_facilities')\n-    college_gallery = models.ManyToManyField(CollegeGallery)\n-    placement = models.TextField(null=True,blank=True)\n-    scholarship = models.TextField(null=True,blank=True)\n-    \n-    # featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n-    scholarships = models.TextField()\n-    faqs = models.ManyToManyField(CollegeFaqs)\n-    college_admin = models.ForeignKey(CustomUser, on_delete=models.CASCADE,related_name='college_admin')\n-\n-    def map_location(self):\n-        return f'{self.latitude}, {self.longitude}'\n-\n-    def __str__(self):\n-        return self.name\n"
                },
                {
                    "date": 1733381245456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n from socialmedia.models import SocialMedia\n from district.models import District\n from discipline.models import Discipline\n from gallery.models import Gallery\n-from accounts.models import CustomUser\n+# from accounts.models import CustomUser\n from formprogress.models import FormStepProgress\n # from faqs.models import FAQs\n \n  \n"
                },
                {
                    "date": 1733381273078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n     \n     # featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n     scholarships = models.TextField()\n     faqs = models.ManyToManyField(CollegeFaqs)\n-    college_admin = models.ForeignKey(CustomUser, on_delete=models.CASCADE,related_name='college_admin')\n+    # college_admin = models.ForeignKey(CustomUser, on_delete=models.CASCADE,related_name='college_admin')\n \n     def map_location(self):\n         return f'{self.latitude}, {self.longitude}'\n \n"
                },
                {
                    "date": 1733381426728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n     \n     # featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n     scholarships = models.TextField()\n     faqs = models.ManyToManyField(CollegeFaqs)\n-    # college_admin = models.ForeignKey(CustomUser, on_delete=models.CASCADE,related_name='college_admin')\n+    college_admin = models.ForeignKey(CustomUser, on_delete=models.CASCADE,related_name='college_admin')\n \n     def map_location(self):\n         return f'{self.latitude}, {self.longitude}'\n \n"
                },
                {
                    "date": 1733393547585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,28 +62,28 @@\n     about = models.TextField()\n     brochure = models.FileField(upload_to='college/brochure/',null=True,blank=True)\n     step_counter= models.ForeignKey(FormStepProgress, on_delete=models.CASCADE,related_name='step_counter')\n     \n-    # SEO Meta Tags\n-    meta_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for search engines.\")\n-    meta_tag = models.CharField(max_length=255, blank=True, null=True, help_text=\"Primary meta tag for SEO.\")\n-    meta_description = models.TextField(blank=True, null=True, help_text=\"Short description for SEO.\")\n-    meta_keywords = models.TextField(blank=True, null=True, help_text=\"Comma-separated keywords for SEO.\")\n-    meta_author = models.CharField(max_length=255, blank=True, null=True, help_text=\"Author information for SEO.\")\n-    canonical_url = models.URLField(blank=True, null=True, help_text=\"Canonical URL to avoid duplicate content.\")\n+    # # SEO Meta Tags\n+    # meta_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for search engines.\")\n+    # meta_tag = models.CharField(max_length=255, blank=True, null=True, help_text=\"Primary meta tag for SEO.\")\n+    # meta_description = models.TextField(blank=True, null=True, help_text=\"Short description for SEO.\")\n+    # meta_keywords = models.TextField(blank=True, null=True, help_text=\"Comma-separated keywords for SEO.\")\n+    # meta_author = models.CharField(max_length=255, blank=True, null=True, help_text=\"Author information for SEO.\")\n+    # canonical_url = models.URLField(blank=True, null=True, help_text=\"Canonical URL to avoid duplicate content.\")\n \n-    # Open Graph (OG) Tags (Social Sharing)\n-    og_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for social sharing.\")\n-    og_description = models.TextField(blank=True, null=True, help_text=\"Description for social sharing.\")\n-    og_url = models.URLField(blank=True, null=True, help_text=\"URL to share on social platforms.\")\n-    og_image =  models.ImageField(upload_to='college/og_image/',null=True,blank=True)\n-    og_type = models.CharField(max_length=50, blank=True, null=True, help_text=\"Type of the OG content (e.g., website, article).\")\n-    og_locale = models.CharField(max_length=10, blank=True, null=True, default=\"en_US\", help_text=\"Locale for OG tags (e.g., en_US).\")\n+    # # Open Graph (OG) Tags (Social Sharing)\n+    # og_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for social sharing.\")\n+    # og_description = models.TextField(blank=True, null=True, help_text=\"Description for social sharing.\")\n+    # og_url = models.URLField(blank=True, null=True, help_text=\"URL to share on social platforms.\")\n+    # og_image =  models.ImageField(upload_to='college/og_image/',null=True,blank=True)\n+    # og_type = models.CharField(max_length=50, blank=True, null=True, help_text=\"Type of the OG content (e.g., website, article).\")\n+    # og_locale = models.CharField(max_length=10, blank=True, null=True, default=\"en_US\", help_text=\"Locale for OG tags (e.g., en_US).\")\n     \n-    # Dublin Core Metadata\n-    dc_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for Dublin Core Metadata.\")\n-    dc_description = models.TextField(blank=True, null=True, help_text=\"Description for Dublin Core Metadata.\")\n-    dc_language = models.CharField(max_length=10, blank=True, null=True, default=\"en\", help_text=\"Language code for Dublin Core Metadata (e.g., en, fr).\")\n+    # # Dublin Core Metadata\n+    # dc_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for Dublin Core Metadata.\")\n+    # dc_description = models.TextField(blank=True, null=True, help_text=\"Description for Dublin Core Metadata.\")\n+    # dc_language = models.CharField(max_length=10, blank=True, null=True, default=\"en\", help_text=\"Language code for Dublin Core Metadata (e.g., en, fr).\")\n \n \n     courses_and_fees = models.ManyToManyField(CoursesAndFees,related_name='college_courses_and_fees')\n     # admission_open = models.ManyToManyField(AdmissionOpen)\n@@ -94,9 +94,9 @@\n     \n     # featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n     scholarships = models.TextField()\n     faqs = models.ManyToManyField(CollegeFaqs)\n-    college_admin = models.ForeignKey(CustomUser, on_delete=models.CASCADE,related_name='college_admin')\n+    # college_admin = models.ForeignKey(CustomUser, on_delete=models.CASCADE,related_name='college_admin')\n \n     def map_location(self):\n         return f'{self.latitude}, {self.longitude}'\n \n"
                },
                {
                    "date": 1733393555534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n from discipline.models import Discipline\n from gallery.models import Gallery\n # from accounts.models import CustomUser\n from formprogress.models import FormStepProgress\n+from \n # from faqs.models import FAQs\n \n  \n # CollegeGallery Model\n"
                },
                {
                    "date": 1733393561294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n from discipline.models import Discipline\n from gallery.models import Gallery\n # from accounts.models import CustomUser\n from formprogress.models import FormStepProgress\n-from \n+from mainproj.\n # from faqs.models import FAQs\n \n  \n # CollegeGallery Model\n"
                },
                {
                    "date": 1733393572094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n from discipline.models import Discipline\n from gallery.models import Gallery\n # from accounts.models import CustomUser\n from formprogress.models import FormStepProgress\n-from mainproj.\n+from mainproj.utilities.seo import SEOFields\n # from faqs.models import FAQs\n \n  \n # CollegeGallery Model\n@@ -41,9 +41,9 @@\n \n     def __str__(self):\n         return f'Placement {self.id}'\n     \n-class College(models.Model):\n+class College(SEOFields,models.Model):\n     banner_image = models.ImageField(upload_to='college/banner/')\n     dp_image = models.ImageField(upload_to='college/dp/')\n     name = models.CharField(max_length=255)\n     established_date = models.DateField()\n"
                },
                {
                    "date": 1733393610065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n \n     def __str__(self):\n         return f'Placement {self.id}'\n     \n-class College(SEOFields,models.Model):\n+class College(SEOFields):\n     banner_image = models.ImageField(upload_to='college/banner/')\n     dp_image = models.ImageField(upload_to='college/dp/')\n     name = models.CharField(max_length=255)\n     established_date = models.DateField()\n"
                },
                {
                    "date": 1733467153452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,35 +62,11 @@\n     longitude = models.DecimalField(max_digits=9, decimal_places=6)\n     about = models.TextField()\n     brochure = models.FileField(upload_to='college/brochure/',null=True,blank=True)\n     step_counter= models.ForeignKey(FormStepProgress, on_delete=models.CASCADE,related_name='step_counter')\n-    \n-    # # SEO Meta Tags\n-    # meta_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for search engines.\")\n-    # meta_tag = models.CharField(max_length=255, blank=True, null=True, help_text=\"Primary meta tag for SEO.\")\n-    # meta_description = models.TextField(blank=True, null=True, help_text=\"Short description for SEO.\")\n-    # meta_keywords = models.TextField(blank=True, null=True, help_text=\"Comma-separated keywords for SEO.\")\n-    # meta_author = models.CharField(max_length=255, blank=True, null=True, help_text=\"Author information for SEO.\")\n-    # canonical_url = models.URLField(blank=True, null=True, help_text=\"Canonical URL to avoid duplicate content.\")\n-\n-    # # Open Graph (OG) Tags (Social Sharing)\n-    # og_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for social sharing.\")\n-    # og_description = models.TextField(blank=True, null=True, help_text=\"Description for social sharing.\")\n-    # og_url = models.URLField(blank=True, null=True, help_text=\"URL to share on social platforms.\")\n-    # og_image =  models.ImageField(upload_to='college/og_image/',null=True,blank=True)\n-    # og_type = models.CharField(max_length=50, blank=True, null=True, help_text=\"Type of the OG content (e.g., website, article).\")\n-    # og_locale = models.CharField(max_length=10, blank=True, null=True, default=\"en_US\", help_text=\"Locale for OG tags (e.g., en_US).\")\n-    \n-    # # Dublin Core Metadata\n-    # dc_title = models.CharField(max_length=255, blank=True, null=True, help_text=\"Title for Dublin Core Metadata.\")\n-    # dc_description = models.TextField(blank=True, null=True, help_text=\"Description for Dublin Core Metadata.\")\n-    # dc_language = models.CharField(max_length=10, blank=True, null=True, default=\"en\", help_text=\"Language code for Dublin Core Metadata (e.g., en, fr).\")\n-\n-\n-    courses_and_fees = models.ManyToManyField(CoursesAndFees,related_name='college_courses_and_fees')\n     # admission_open = models.ManyToManyField(AdmissionOpen)\n     facilities = models.ManyToManyField(Facility,related_name='college_facilities')\n-    college_gallery = models.ManyToManyField(CollegeGallery)\n+    # college_gallery = models.ManyToManyField(CollegeGallery)\n     placement = models.TextField(null=True,blank=True)\n     scholarship = models.TextField(null=True,blank=True)\n     \n     # featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n"
                },
                {
                    "date": 1733467194871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,8 +74,9 @@\n     faqs = models.ManyToManyField(CollegeFaqs)\n     # college_admin = models.ForeignKey(CustomUser, on_delete=models.CASCADE,related_name='college_admin')\n \n     def map_location(self):\n+        \n         return f'{self.latitude}, {self.longitude}'\n \n     def __str__(self):\n         return self.name\n"
                },
                {
                    "date": 1733467594171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n from affiliation.models import Affiliation\n # from admissionopen.models import AdmissionOpen\n # from location.models import Location\n from collegetype.models import CollegeType\n-from coursesandfees.models import CoursesAndFees\n+# from coursesandfees.models import CoursesAndFees\n from facilities.models import Facility\n from socialmedia.models import SocialMedia\n from district.models import District\n from discipline.models import Discipline\n"
                },
                {
                    "date": 1733468314727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,10 +68,8 @@\n     # college_gallery = models.ManyToManyField(CollegeGallery)\n     placement = models.TextField(null=True,blank=True)\n     scholarship = models.TextField(null=True,blank=True)\n     \n-    # featured_video = models.FileField(upload_to='college/featured_videos/', blank=True, null=True)\n-    scholarships = models.TextField()\n     faqs = models.ManyToManyField(CollegeFaqs)\n     # college_admin = models.ForeignKey(CustomUser, on_delete=models.CASCADE,related_name='college_admin')\n \n     def map_location(self):\n"
                },
                {
                    "date": 1733468321837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,10 +67,9 @@\n     facilities = models.ManyToManyField(Facility,related_name='college_facilities')\n     # college_gallery = models.ManyToManyField(CollegeGallery)\n     placement = models.TextField(null=True,blank=True)\n     scholarship = models.TextField(null=True,blank=True)\n-    \n-    faqs = models.ManyToManyField(CollegeFaqs)\n+    # faqs = models.ManyToManyField(CollegeFaqs)\n     # college_admin = models.ForeignKey(CustomUser, on_delete=models.CASCADE,related_name='college_admin')\n \n     def map_location(self):\n         \n"
                },
                {
                    "date": 1733468328781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,8 +33,9 @@\n     def __str__(self):\n         return f'Placement {self.id}'\n \n class CollegeFaqs(models.Model):\n+    college\n     question = models.CharField(max_length=255)\n     answer = models.TextField(blank=True)\n     created_date = models.DateField(auto_now_add=True)\n     updated_date = models.DateField(auto_now=True)\n"
                },
                {
                    "date": 1733468339515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,17 +32,9 @@\n \n     def __str__(self):\n         return f'Placement {self.id}'\n \n-class CollegeFaqs(models.Model):\n-    college\n-    question = models.CharField(max_length=255)\n-    answer = models.TextField(blank=True)\n-    created_date = models.DateField(auto_now_add=True)\n-    updated_date = models.DateField(auto_now=True)\n \n-    def __str__(self):\n-        return f'Placement {self.id}'\n     \n class College(SEOFields):\n     banner_image = models.ImageField(upload_to='college/banner/')\n     dp_image = models.ImageField(upload_to='college/dp/')\n"
                },
                {
                    "date": 1733468403430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n     banner_image = models.ImageField(upload_to='college/banner/')\n     dp_image = models.ImageField(upload_to='college/dp/')\n     name = models.CharField(max_length=255)\n     established_date = models.DateField()\n-    website_link = models.URLField()\n+    website_link = models.URLField(null= True)\n     address = models.CharField(max_length=255)\n     district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district')\n     # location = models.ForeignKey(Location,on_delete=models.CASCADE)\n     phone_number = models.CharField(max_length=20)\n@@ -69,4 +69,15 @@\n         return f'{self.latitude}, {self.longitude}'\n \n     def __str__(self):\n         return self.name\n+\n+\n+class CollegeFaqs(models.Model):\n+    college = models.ForeignKey(College, on_delete=models.CASCADE,related_name='college_faq')\n+    question = models.CharField(max_length=255)\n+    answer = models.TextField(blank=True)\n+    created_date = models.DateField(auto_now_add=True)\n+    updated_date = models.DateField(auto_now=True)\n+\n+    def __str__(self):\n+        return f'Placement {self.id}'\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733468413787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,10 +38,10 @@\n class College(SEOFields):\n     banner_image = models.ImageField(upload_to='college/banner/')\n     dp_image = models.ImageField(upload_to='college/dp/')\n     name = models.CharField(max_length=255)\n-    established_date = models.DateField()\n-    website_link = models.URLField(null= True)\n+    established_date = models.DateField(null= True,blank=True)\n+    website_link = models.URLField(null= True,blank=True)\n     address = models.CharField(max_length=255)\n     district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district')\n     # location = models.ForeignKey(Location,on_delete=models.CASCADE)\n     phone_number = models.CharField(max_length=20)\n"
                },
                {
                    "date": 1733468589065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,8 +60,10 @@\n     facilities = models.ManyToManyField(Facility,related_name='college_facilities')\n     # college_gallery = models.ManyToManyField(CollegeGallery)\n     placement = models.TextField(null=True,blank=True)\n     scholarship = models.TextField(null=True,blank=True)\n+    created_date = models.DateField(auto_now_add=True)\n+    updated_date = models.DateField(auto_now=True)\n     # faqs = models.ManyToManyField(CollegeFaqs)\n     # college_admin = models.ForeignKey(CustomUser, on_delete=models.CASCADE,related_name='college_admin')\n \n     def map_location(self):\n"
                },
                {
                    "date": 1733468894144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,13 +57,13 @@\n     brochure = models.FileField(upload_to='college/brochure/',null=True,blank=True)\n     step_counter= models.ForeignKey(FormStepProgress, on_delete=models.CASCADE,related_name='step_counter')\n     # admission_open = models.ManyToManyField(AdmissionOpen)\n     facilities = models.ManyToManyField(Facility,related_name='college_facilities')\n-    # college_gallery = models.ManyToManyField(CollegeGallery)\n     placement = models.TextField(null=True,blank=True)\n     scholarship = models.TextField(null=True,blank=True)\n     created_date = models.DateField(auto_now_add=True)\n     updated_date = models.DateField(auto_now=True)\n+    # college_gallery = models.ManyToManyField(CollegeGallery)\n     # faqs = models.ManyToManyField(CollegeFaqs)\n     # college_admin = models.ForeignKey(CustomUser, on_delete=models.CASCADE,related_name='college_admin')\n \n     def map_location(self):\n"
                },
                {
                    "date": 1733468903968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,8 @@\n     established_date = models.DateField(null= True,blank=True)\n     website_link = models.URLField(null= True,blank=True)\n     address = models.CharField(max_length=255)\n     district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district')\n-    # location = models.ForeignKey(Location,on_delete=models.CASCADE)\n     phone_number = models.CharField(max_length=20)\n     email = models.EmailField()\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation')\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type')\n@@ -55,14 +54,15 @@\n     longitude = models.DecimalField(max_digits=9, decimal_places=6)\n     about = models.TextField()\n     brochure = models.FileField(upload_to='college/brochure/',null=True,blank=True)\n     step_counter= models.ForeignKey(FormStepProgress, on_delete=models.CASCADE,related_name='step_counter')\n-    # admission_open = models.ManyToManyField(AdmissionOpen)\n     facilities = models.ManyToManyField(Facility,related_name='college_facilities')\n     placement = models.TextField(null=True,blank=True)\n     scholarship = models.TextField(null=True,blank=True)\n     created_date = models.DateField(auto_now_add=True)\n     updated_date = models.DateField(auto_now=True)\n+    # location = models.ForeignKey(Location,on_delete=models.CASCADE)\n+    # admission_open = models.ManyToManyField(AdmissionOpen)\n     # college_gallery = models.ManyToManyField(CollegeGallery)\n     # faqs = models.ManyToManyField(CollegeFaqs)\n     # college_admin = models.ForeignKey(CustomUser, on_delete=models.CASCADE,related_name='college_admin')\n \n"
                },
                {
                    "date": 1733640551435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,9 @@\n \n     def __str__(self):\n         return f'Gallery Image {self.id}'\n     \n+    \n class Placement(models.Model):\n     description = models.TextField(blank=True)\n     created_date = models.DateField(auto_now_add=True)\n     updated_date = models.DateField(auto_now=True)\n"
                },
                {
                    "date": 1733640556954,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,10 +23,11 @@\n     updated_date = models.DateField(auto_now=True)\n \n     def __str__(self):\n         return f'Gallery Image {self.id}'\n+    class Meta:\n+        \n     \n-    \n class Placement(models.Model):\n     description = models.TextField(blank=True)\n     created_date = models.DateField(auto_now_add=True)\n     updated_date = models.DateField(auto_now=True)\n"
                },
                {
                    "date": 1733640564838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,11 @@\n \n     def __str__(self):\n         return f'Gallery Image {self.id}'\n     class Meta:\n-        \n+        permissions = [\n+            \n+        ]\n     \n class Placement(models.Model):\n     description = models.TextField(blank=True)\n     created_date = models.DateField(auto_now_add=True)\n"
                },
                {
                    "date": 1733640572127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n     def __str__(self):\n         return f'Gallery Image {self.id}'\n     class Meta:\n         permissions = [\n-            \n+            ('manage_college_gallery', 'Manage college gallery'),\n         ]\n     \n class Placement(models.Model):\n     description = models.TextField(blank=True)\n@@ -35,8 +35,10 @@\n     updated_date = models.DateField(auto_now=True)\n \n     def __str__(self):\n         return f'Placement {self.id}'\n+    \n+    \n \n \n     \n class College(SEOFields):\n"
                },
                {
                    "date": 1733640578319,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,12 @@\n \n     def __str__(self):\n         return f'Placement {self.id}'\n     \n-    \n+    class Meta:\n+        permissions = [\n+            ('manage_placement', 'Manage placement'),\n+        ]\n \n \n     \n class College(SEOFields):\n"
                },
                {
                    "date": 1733640584836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,8 +80,10 @@\n         return f'{self.latitude}, {self.longitude}'\n \n     def __str__(self):\n         return self.name\n+    \n+    class\n \n \n class CollegeFaqs(models.Model):\n     college = models.ForeignKey(College, on_delete=models.CASCADE,related_name='college_faq')\n"
                },
                {
                    "date": 1733640592083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,12 @@\n \n     def __str__(self):\n         return self.name\n     \n-    class\n+    class Meta:\n+        permissions = [\n+            ('manage_college', 'Manage college'),\n+        ]\n \n \n class CollegeFaqs(models.Model):\n     college = models.ForeignKey(College, on_delete=models.CASCADE,related_name='college_faq')\n@@ -92,5 +95,7 @@\n     created_date = models.DateField(auto_now_add=True)\n     updated_date = models.DateField(auto_now=True)\n \n     def __str__(self):\n-        return f'Placement {self.id}'\n\\ No newline at end of file\n+        return f'Placement {self.id}'\n+    \n+    \n\\ No newline at end of file\n"
                },
                {
                    "date": 1733643672771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,20 +28,20 @@\n         permissions = [\n             ('manage_college_gallery', 'Manage college gallery'),\n         ]\n     \n-class Placement(models.Model):\n-    description = models.TextField(blank=True)\n-    created_date = models.DateField(auto_now_add=True)\n-    updated_date = models.DateField(auto_now=True)\n+# class Placement(models.Model):\n+#     description = models.TextField(blank=True)\n+#     created_date = models.DateField(auto_now_add=True)\n+#     updated_date = models.DateField(auto_now=True)\n \n-    def __str__(self):\n-        return f'Placement {self.id}'\n+#     def __str__(self):\n+#         return f'Placement {self.id}'\n     \n-    class Meta:\n-        permissions = [\n-            ('manage_placement', 'Manage placement'),\n-        ]\n+#     class Meta:\n+#         permissions = [\n+#             ('manage_placement', 'Manage placement'),\n+#         ]\n \n \n     \n class College(SEOFields):\n@@ -97,5 +97,8 @@\n \n     def __str__(self):\n         return f'Placement {self.id}'\n     \n-    \n\\ No newline at end of file\n+    class Meta:\n+        permissions = [\n+            ('manage_faq', 'Manage faq'),\n+        ]\n\\ No newline at end of file\n"
                },
                {
                    "date": 1737953091401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n \n  \n # CollegeGallery Model\n class CollegeGallery(models.Model):\n-    image = models.ImageField(upload_to='college/gallery/')\n+    image = models.ImageField(upload_to='college/gallery/',null=)\n     description = models.TextField(blank=True)\n     created_date = models.DateField(auto_now_add=True)\n     updated_date = models.DateField(auto_now=True)\n \n"
                },
                {
                    "date": 1737953099222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n \n  \n # CollegeGallery Model\n class CollegeGallery(models.Model):\n-    image = models.ImageField(upload_to='college/gallery/',null=)\n+    image = models.ImageField(upload_to='college/gallery/',null=True,blank=True)\n     description = models.TextField(blank=True)\n     created_date = models.DateField(auto_now_add=True)\n     updated_date = models.DateField(auto_now=True)\n \n@@ -45,9 +45,9 @@\n \n     \n class College(SEOFields):\n     banner_image = models.ImageField(upload_to='college/banner/')\n-    dp_image = models.ImageField(upload_to='college/dp/')\n+    dp_image = models.ImageField(upload_to='college/dp/',nu)\n     name = models.CharField(max_length=255)\n     established_date = models.DateField(null= True,blank=True)\n     website_link = models.URLField(null= True,blank=True)\n     address = models.CharField(max_length=255)\n"
                },
                {
                    "date": 1738149232588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n \n     \n class College(SEOFields):\n     banner_image = models.ImageField(upload_to='college/banner/')\n-    dp_image = models.ImageField(upload_to='college/dp/',nu)\n+    dp_image = models.ImageField(upload_to='college/dp/',null=True,blank=True)\n     name = models.CharField(max_length=255)\n     established_date = models.DateField(null= True,blank=True)\n     website_link = models.URLField(null= True,blank=True)\n     address = models.CharField(max_length=255)\n@@ -79,9 +79,9 @@\n         \n         return f'{self.latitude}, {self.longitude}'\n \n     def __str__(self):\n-        return self.name\n+          return self.name if self.name else \"Unnamed Level\"\n     \n     class Meta:\n         permissions = [\n             ('manage_college', 'Manage college'),\n"
                },
                {
                    "date": 1738149237972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,9 @@\n         \n         return f'{self.latitude}, {self.longitude}'\n \n     def __str__(self):\n-          return self.name if self.name else \"Unnamed Level\"\n+            return self.name if self.name else \"Unnamed Level\"\n     \n     class Meta:\n         permissions = [\n             ('manage_college', 'Manage college'),\n"
                },
                {
                    "date": 1738211807686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,8 +44,9 @@\n \n \n     \n class College(SEOFields):\n+    \n     banner_image = models.ImageField(upload_to='college/banner/')\n     dp_image = models.ImageField(upload_to='college/dp/',null=True,blank=True)\n     name = models.CharField(max_length=255)\n     established_date = models.DateField(null= True,blank=True)\n@@ -79,9 +80,9 @@\n         \n         return f'{self.latitude}, {self.longitude}'\n \n     def __str__(self):\n-            return self.name if self.name else \"Unnamed Level\"\n+          return self.name if self.name else \"Unnamed\"\n     \n     class Meta:\n         permissions = [\n             ('manage_college', 'Manage college'),\n"
                },
                {
                    "date": 1738211812931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,10 @@\n \n \n     \n class College(SEOFields):\n-    \n+    public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n+    slug = models.SlugField(max_length=255, unique=True, null=True, blank=True)\n     banner_image = models.ImageField(upload_to='college/banner/')\n     dp_image = models.ImageField(upload_to='college/dp/',null=True,blank=True)\n     name = models.CharField(max_length=255)\n     established_date = models.DateField(null= True,blank=True)\n"
                },
                {
                    "date": 1738211821085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n from gallery.models import Gallery\n # from accounts.models import CustomUser\n from formprogress.models import FormStepProgress\n from mainproj.utilities.seo import SEOFields\n+import \n # from faqs.models import FAQs\n \n  \n # CollegeGallery Model\n"
                },
                {
                    "date": 1738211828285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,10 @@\n from gallery.models import Gallery\n # from accounts.models import CustomUser\n from formprogress.models import FormStepProgress\n from mainproj.utilities.seo import SEOFields\n-import \n+import uuid\n+\n # from faqs.models import FAQs\n \n  \n # CollegeGallery Model\n"
                },
                {
                    "date": 1738211843999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,9 @@\n # from accounts.models import CustomUser\n from formprogress.models import FormStepProgress\n from mainproj.utilities.seo import SEOFields\n import uuid\n+from django.utils.text import slugify\n \n # from faqs.models import FAQs\n \n  \n@@ -85,8 +86,10 @@\n \n     def __str__(self):\n           return self.name if self.name else \"Unnamed\"\n     \n+    \n+    \n     class Meta:\n         permissions = [\n             ('manage_college', 'Manage college'),\n         ]\n"
                },
                {
                    "date": 1738211856784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,8 +86,12 @@\n \n     def __str__(self):\n           return self.name if self.name else \"Unnamed\"\n     \n+    def save(self, *args, **kwargs):\n+        if not self.slug:\n+            self.slug = slugify(self.name)+'-'+str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n+        super().save(*args, **kwargs)\n     \n     \n     class Meta:\n         permissions = [\n"
                },
                {
                    "date": 1738212535922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n           return self.name if self.name else \"Unnamed\"\n     \n     def save(self, *args, **kwargs):\n         if not self.slug:\n-            self.slug = slugify(self.name)+'-'+str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n+            self.slug = slugify(self.name)\n         super().save(*args, **kwargs)\n     \n     \n     class Meta:\n"
                },
                {
                    "date": 1738212547195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n     slug = models.SlugField(max_length=255, unique=True, null=True, blank=True)\n     banner_image = models.ImageField(upload_to='college/banner/')\n     dp_image = models.ImageField(upload_to='college/dp/',null=True,blank=True)\n-    name = models.CharField(max_length=255)\n+    name = models.CharField(max_length=255,)\n     established_date = models.DateField(null= True,blank=True)\n     website_link = models.URLField(null= True,blank=True)\n     address = models.CharField(max_length=255)\n     district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district')\n"
                },
                {
                    "date": 1738217084506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,10 @@\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n     slug = models.SlugField(max_length=255, unique=True, null=True, blank=True)\n     banner_image = models.ImageField(upload_to='college/banner/')\n     dp_image = models.ImageField(upload_to='college/dp/',null=True,blank=True)\n-    name = models.CharField(max_length=255,)\n+    name = models.CharField(max_length=255,unique=True)\n+    \n     established_date = models.DateField(null= True,blank=True)\n     website_link = models.URLField(null= True,blank=True)\n     address = models.CharField(max_length=255)\n     district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district')\n"
                },
                {
                    "date": 1738217090521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n     slug = models.SlugField(max_length=255, unique=True, null=True, blank=True)\n     banner_image = models.ImageField(upload_to='college/banner/')\n     dp_image = models.ImageField(upload_to='college/dp/',null=True,blank=True)\n     name = models.CharField(max_length=255,unique=True)\n-    \n+    is_show\\_on_home = models.BooleanField(default=False)\n     established_date = models.DateField(null= True,blank=True)\n     website_link = models.URLField(null= True,blank=True)\n     address = models.CharField(max_length=255)\n     district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district')\n"
                },
                {
                    "date": 1738233606085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n     slug = models.SlugField(max_length=255, unique=True, null=True, blank=True)\n     banner_image = models.ImageField(upload_to='college/banner/')\n     dp_image = models.ImageField(upload_to='college/dp/',null=True,blank=True)\n     name = models.CharField(max_length=255,unique=True)\n-    is_show\\_on_home = models.BooleanField(default=False)\n+    is_show = models.BooleanField(default=False)\n     established_date = models.DateField(null= True,blank=True)\n     website_link = models.URLField(null= True,blank=True)\n     address = models.CharField(max_length=255)\n     district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district')\n"
                },
                {
                    "date": 1738317792935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n     social_media = models.ManyToManyField(SocialMedia)\n     google_map_link = models.URLField(blank=True, null=True)\n     latitude = models.DecimalField(max_digits=9, decimal_places=6)\n     longitude = models.DecimalField(max_digits=9, decimal_places=6)\n-    about = models.TextField()\n+    about = models.TextField(null )\n     brochure = models.FileField(upload_to='college/brochure/',null=True,blank=True)\n     step_counter= models.ForeignKey(FormStepProgress, on_delete=models.CASCADE,related_name='step_counter')\n     facilities = models.ManyToManyField(Facility,related_name='college_facilities')\n     placement = models.TextField(null=True,blank=True)\n"
                },
                {
                    "date": 1738318421932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,11 +66,11 @@\n     social_media = models.ManyToManyField(SocialMedia)\n     google_map_link = models.URLField(blank=True, null=True)\n     latitude = models.DecimalField(max_digits=9, decimal_places=6)\n     longitude = models.DecimalField(max_digits=9, decimal_places=6)\n-    about = models.TextField(null )\n+    about = models.TextField(null = True,blank=True)\n     brochure = models.FileField(upload_to='college/brochure/',null=True,blank=True)\n-    step_counter= models.ForeignKey(FormStepProgress, on_delete=models.CASCADE,related_name='step_counter')\n+    step_counter= models.ForeignKey(FormStepProgress, on_delete=models.CASCADE,related_name='step_counter',)\n     facilities = models.ManyToManyField(Facility,related_name='college_facilities')\n     placement = models.TextField(null=True,blank=True)\n     scholarship = models.TextField(null=True,blank=True)\n     created_date = models.DateField(auto_now_add=True)\n"
                },
                {
                    "date": 1738319216847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,12 +65,12 @@\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline')\n     social_media = models.ManyToManyField(SocialMedia)\n     google_map_link = models.URLField(blank=True, null=True)\n     latitude = models.DecimalField(max_digits=9, decimal_places=6)\n-    longitude = models.DecimalField(max_digits=9, decimal_places=6)\n+    longitude = models.CharField(max_digits=9, decimal_places=6)\n     about = models.TextField(null = True,blank=True)\n     brochure = models.FileField(upload_to='college/brochure/',null=True,blank=True)\n-    step_counter= models.ForeignKey(FormStepProgress, on_delete=models.CASCADE,related_name='step_counter',)\n+    step_counter= models.ForeignKey(FormStepProgress, on_delete=models.CASCADE,related_name='step_counter',null=True,blank=True)\n     facilities = models.ManyToManyField(Facility,related_name='college_facilities')\n     placement = models.TextField(null=True,blank=True)\n     scholarship = models.TextField(null=True,blank=True)\n     created_date = models.DateField(auto_now_add=True)\n"
                },
                {
                    "date": 1738319246872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type')\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline')\n     social_media = models.ManyToManyField(SocialMedia)\n     google_map_link = models.URLField(blank=True, null=True)\n-    latitude = models.DecimalField(max_digits=9, decimal_places=6)\n+    latitude = models.CharField( decimal_places=6)\n     longitude = models.CharField(max_digits=9, decimal_places=6)\n     about = models.TextField(null = True,blank=True)\n     brochure = models.FileField(upload_to='college/brochure/',null=True,blank=True)\n     step_counter= models.ForeignKey(FormStepProgress, on_delete=models.CASCADE,related_name='step_counter',null=True,blank=True)\n"
                },
                {
                    "date": 1738319254322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type')\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline')\n     social_media = models.ManyToManyField(SocialMedia)\n     google_map_link = models.URLField(blank=True, null=True)\n-    latitude = models.CharField( decimal_places=6)\n+    latitude = models.CharField(max_len)\n     longitude = models.CharField(max_digits=9, decimal_places=6)\n     about = models.TextField(null = True,blank=True)\n     brochure = models.FileField(upload_to='college/brochure/',null=True,blank=True)\n     step_counter= models.ForeignKey(FormStepProgress, on_delete=models.CASCADE,related_name='step_counter',null=True,blank=True)\n"
                },
                {
                    "date": 1738319263477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type')\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline')\n     social_media = models.ManyToManyField(SocialMedia)\n     google_map_link = models.URLField(blank=True, null=True)\n-    latitude = models.CharField(max_len)\n+    latitude = models.CharField(max_length)\n     longitude = models.CharField(max_digits=9, decimal_places=6)\n     about = models.TextField(null = True,blank=True)\n     brochure = models.FileField(upload_to='college/brochure/',null=True,blank=True)\n     step_counter= models.ForeignKey(FormStepProgress, on_delete=models.CASCADE,related_name='step_counter',null=True,blank=True)\n"
                },
                {
                    "date": 1738319273792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,10 +64,10 @@\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type')\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline')\n     social_media = models.ManyToManyField(SocialMedia)\n     google_map_link = models.URLField(blank=True, null=True)\n-    latitude = models.CharField(max_length)\n-    longitude = models.CharField(max_digits=9, decimal_places=6)\n+    latitude = models.CharField(max_length= 255)\n+    longitude = models.CharField(max_length= 255)\n     about = models.TextField(null = True,blank=True)\n     brochure = models.FileField(upload_to='college/brochure/',null=True,blank=True)\n     step_counter= models.ForeignKey(FormStepProgress, on_delete=models.CASCADE,related_name='step_counter',null=True,blank=True)\n     facilities = models.ManyToManyField(Facility,related_name='college_facilities')\n"
                },
                {
                    "date": 1738643726746,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,8 @@\n from mainproj.utilities.seo import SEOFields\n import uuid\n from django.utils.text import slugify\n \n-# from faqs.models import FAQs\n \n  \n # CollegeGallery Model\n class CollegeGallery(models.Model):\n"
                },
                {
                    "date": 1738904226266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,8 @@\n from mainproj.utilities.seo import SEOFields\n import uuid\n from django.utils.text import slugify\n \n-\n  \n # CollegeGallery Model\n class CollegeGallery(models.Model):\n     image = models.ImageField(upload_to='college/gallery/',null=True,blank=True)\n@@ -57,9 +56,9 @@\n     website_link = models.URLField(null= True,blank=True)\n     address = models.CharField(max_length=255)\n     district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district')\n     phone_number = models.CharField(max_length=20)\n-    email = models.EmailField()\n+    email = models.EmailField(max)\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation')\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type')\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline')\n     social_media = models.ManyToManyField(SocialMedia)\n"
                },
                {
                    "date": 1738904232315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n     website_link = models.URLField(null= True,blank=True)\n     address = models.CharField(max_length=255)\n     district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district')\n     phone_number = models.CharField(max_length=20)\n-    email = models.EmailField(max)\n+    email = models.EmailField(max_length=255)s\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation')\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type')\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline')\n     social_media = models.ManyToManyField(SocialMedia)\n"
                },
                {
                    "date": 1739438161643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n     website_link = models.URLField(null= True,blank=True)\n     address = models.CharField(max_length=255)\n     district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district')\n     phone_number = models.CharField(max_length=20)\n-    email = models.EmailField(max_length=255)s\n+    email = models.EmailField(max_length=255)\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation')\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type')\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline')\n     social_media = models.ManyToManyField(SocialMedia)\n@@ -80,8 +80,9 @@\n     # college_admin = models.ForeignKey(CustomUser, on_delete=models.CASCADE,related_name='college_admin')\n \n     def map_location(self):\n         \n+        \n         return f'{self.latitude}, {self.longitude}'\n \n     def __str__(self):\n           return self.name if self.name else \"Unnamed\"\n"
                },
                {
                    "date": 1739438169727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,11 +80,15 @@\n     # college_admin = models.ForeignKey(CustomUser, on_delete=models.CASCADE,related_name='college_admin')\n \n     def map_location(self):\n         \n+return f/*************  ✨ Codeium Command ⭐  *************/\n+        \"\"\"\n+        Return the latitude and longitude of the college as a comma-separated string\n         \n-        return f'{self.latitude}, {self.longitude}'\n \n+/******  21278235-3e98-4eda-b463-f7d8663fe5fc  *******/'{self.latitude}, {self.longitude}'\n+\n     def __str__(self):\n           return self.name if self.name else \"Unnamed\"\n     \n     def save(self, *args, **kwargs):\n"
                },
                {
                    "date": 1739438176455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,15 +80,10 @@\n     # college_admin = models.ForeignKey(CustomUser, on_delete=models.CASCADE,related_name='college_admin')\n \n     def map_location(self):\n         \n-return f/*************  ✨ Codeium Command ⭐  *************/\n-        \"\"\"\n-        Return the latitude and longitude of the college as a comma-separated string\n-        \n+        return f'{self.latitude}, {self.longitude}'\n \n-/******  21278235-3e98-4eda-b463-f7d8663fe5fc  *******/'{self.latitude}, {self.longitude}'\n-\n     def __str__(self):\n           return self.name if self.name else \"Unnamed\"\n     \n     def save(self, *args, **kwargs):\n"
                },
                {
                    "date": 1739770122859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n \n  \n # CollegeGallery Model\n class CollegeGallery(models.Model):\n+    College\n     image = models.ImageField(upload_to='college/gallery/',null=True,blank=True)\n     description = models.TextField(blank=True)\n     created_date = models.DateField(auto_now_add=True)\n     updated_date = models.DateField(auto_now=True)\n"
                },
                {
                    "date": 1739770128128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n \n  \n # CollegeGallery Model\n class CollegeGallery(models.Model):\n-    College\n+    college = \n     image = models.ImageField(upload_to='college/gallery/',null=True,blank=True)\n     description = models.TextField(blank=True)\n     created_date = models.DateField(auto_now_add=True)\n     updated_date = models.DateField(auto_now=True)\n"
                },
                {
                    "date": 1739770135568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,21 +16,9 @@\n from django.utils.text import slugify\n \n  \n # CollegeGallery Model\n-class CollegeGallery(models.Model):\n-    college = \n-    image = models.ImageField(upload_to='college/gallery/',null=True,blank=True)\n-    description = models.TextField(blank=True)\n-    created_date = models.DateField(auto_now_add=True)\n-    updated_date = models.DateField(auto_now=True)\n \n-    def __str__(self):\n-        return f'Gallery Image {self.id}'\n-    class Meta:\n-        permissions = [\n-            ('manage_college_gallery', 'Manage college gallery'),\n-        ]\n     \n # class Placement(models.Model):\n #     description = models.TextField(blank=True)\n #     created_date = models.DateField(auto_now_add=True)\n"
                },
                {
                    "date": 1739770140946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,5 +99,19 @@\n     \n     class Meta:\n         permissions = [\n             ('manage_faq', 'Manage faq'),\n+        ]\n+\n+class CollegeGallery(models.Model):\n+    college = models.ForeignKey(College, on_delete=models.CASCADE,related_name='college_gallery')\n+    image = models.ImageField(upload_to='college/gallery/',null=True,blank=True)\n+    description = models.TextField(blank=True)\n+    created_date = models.DateField(auto_now_add=True)\n+    updated_date = models.DateField(auto_now=True)\n+\n+    def __str__(self):\n+        return f'Gallery Image {self.id}'\n+    class Meta:\n+        permissions = [\n+            ('manage_college_gallery', 'Manage college gallery'),\n         ]\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739770623074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n             ('manage_faq', 'Manage faq'),\n         ]\n \n class CollegeGallery(models.Model):\n-    college = models.ForeignKey(College, on_delete=models.CASCADE,related_name='college_gallery')\n+    college = models.ForeignKey(College, on_delete=models.CASCADE,related_name='college_gallery',)\n     image = models.ImageField(upload_to='college/gallery/',null=True,blank=True)\n     description = models.TextField(blank=True)\n     created_date = models.DateField(auto_now_add=True)\n     updated_date = models.DateField(auto_now=True)\n"
                },
                {
                    "date": 1739856538600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     email = models.EmailField(max_length=255)\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation')\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type')\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline')\n-    social_media = models.ManyToManyField(SocialMedia)\n+    social_media = models.ManyToManyField(SocialMedia,)\n     google_map_link = models.URLField(blank=True, null=True)\n     latitude = models.CharField(max_length= 255)\n     longitude = models.CharField(max_length= 255)\n     about = models.TextField(null = True,blank=True)\n@@ -102,9 +102,9 @@\n             ('manage_faq', 'Manage faq'),\n         ]\n \n class CollegeGallery(models.Model):\n-    college = models.ForeignKey(College, on_delete=models.CASCADE,related_name='college_gallery',)\n+    college = models.ForeignKey(College, on_delete=models.CASCADE,related_name='college_gallery',null=True,blank=True)\n     image = models.ImageField(upload_to='college/gallery/',null=True,blank=True)\n     description = models.TextField(blank=True)\n     created_date = models.DateField(auto_now_add=True)\n     updated_date = models.DateField(auto_now=True)\n"
                },
                {
                    "date": 1739856543969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     email = models.EmailField(max_length=255)\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation')\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type')\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline')\n-    social_media = models.ManyToManyField(SocialMedia,)\n+    social_media = models.ManyToManyField(SocialMedia,blank=True)\n     google_map_link = models.URLField(blank=True, null=True)\n     latitude = models.CharField(max_length= 255)\n     longitude = models.CharField(max_length= 255)\n     about = models.TextField(null = True,blank=True)\n"
                },
                {
                    "date": 1739856823987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n # from location.models import Location\n from collegetype.models import CollegeType\n # from coursesandfees.models import CoursesAndFees\n from facilities.models import Facility\n-from socialmedia.models import SocialMedia\n+from socialmedia.models import SocialMedia,c\n from district.models import District\n from discipline.models import Discipline\n from gallery.models import Gallery\n # from accounts.models import CustomUser\n"
                },
                {
                    "date": 1739856830607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n # from location.models import Location\n from collegetype.models import CollegeType\n # from coursesandfees.models import CoursesAndFees\n from facilities.models import Facility\n-from socialmedia.models import SocialMedia,c\n+from socialmedia.models import SocialMedia,CollegeSocialMedia\n from district.models import District\n from discipline.models import Discipline\n from gallery.models import Gallery\n # from accounts.models import CustomUser\n@@ -49,9 +49,9 @@\n     email = models.EmailField(max_length=255)\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation')\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type')\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline')\n-    social_media = models.ManyToManyField(SocialMedia,blank=True)\n+    social_media = models.ManyToManyField(CollegeSocialMedia,blank=True)\n     google_map_link = models.URLField(blank=True, null=True)\n     latitude = models.CharField(max_length= 255)\n     longitude = models.CharField(max_length= 255)\n     about = models.TextField(null = True,blank=True)\n"
                },
                {
                    "date": 1739857269793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     email = models.EmailField(max_length=255)\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation')\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type')\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline')\n-    social_media = models.ManyToManyField(CollegeSocialMedia,blank=True)\n+    # social_media = models.ManyToManyField(CollegeSocialMedia,blank=True)\n     google_map_link = models.URLField(blank=True, null=True)\n     latitude = models.CharField(max_length= 255)\n     longitude = models.CharField(max_length= 255)\n     about = models.TextField(null = True,blank=True)\n"
                },
                {
                    "date": 1739947066453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n     \n class College(SEOFields):\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n     slug = models.SlugField(max_length=255, unique=True, null=True, blank=True)\n-    banner_image = models.ImageField(upload_to='college/banner/')\n+    banner_image = models.ImageField(upload_to='college/banner/',n)\n     dp_image = models.ImageField(upload_to='college/dp/',null=True,blank=True)\n     name = models.CharField(max_length=255,unique=True)\n     is_show = models.BooleanField(default=False)\n     established_date = models.DateField(null= True,blank=True)\n"
                },
                {
                    "date": 1739947087743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n     \n class College(SEOFields):\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n     slug = models.SlugField(max_length=255, unique=True, null=True, blank=True)\n-    banner_image = models.ImageField(upload_to='college/banner/',n)\n+    banner_image = models.ImageField(upload_to='college/banner/',null=True,blank=True)\n     dp_image = models.ImageField(upload_to='college/dp/',null=True,blank=True)\n     name = models.CharField(max_length=255,unique=True)\n     is_show = models.BooleanField(default=False)\n     established_date = models.DateField(null= True,blank=True)\n"
                },
                {
                    "date": 1740371993293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n     is_show = models.BooleanField(default=False)\n     established_date = models.DateField(null= True,blank=True)\n     website_link = models.URLField(null= True,blank=True)\n     address = models.CharField(max_length=255)\n-    district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district')\n+    district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district',null=)\n     phone_number = models.CharField(max_length=20)\n     email = models.EmailField(max_length=255)\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation')\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type')\n"
                },
                {
                    "date": 1740372003318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,12 +43,12 @@\n     is_show = models.BooleanField(default=False)\n     established_date = models.DateField(null= True,blank=True)\n     website_link = models.URLField(null= True,blank=True)\n     address = models.CharField(max_length=255)\n-    district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district',null=)\n+    district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district',null=True,blank=True)\n     phone_number = models.CharField(max_length=20)\n     email = models.EmailField(max_length=255)\n-    affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation')\n+    affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation',null=True,blank=True))\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type')\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline')\n     # social_media = models.ManyToManyField(CollegeSocialMedia,blank=True)\n     google_map_link = models.URLField(blank=True, null=True)\n"
                },
                {
                    "date": 1740372011216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,10 +47,10 @@\n     district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district',null=True,blank=True)\n     phone_number = models.CharField(max_length=20)\n     email = models.EmailField(max_length=255)\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation',null=True,blank=True))\n-    college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type')\n-    discipline = models.ManyToManyField(Discipline, related_name='college_discipline')\n+    college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type',null=True,blank=True))\n+    discipline = models.ManyToManyField(Discipline, related_name='college_discipline',null=True,blank=True))\n     # social_media = models.ManyToManyField(CollegeSocialMedia,blank=True)\n     google_map_link = models.URLField(blank=True, null=True)\n     latitude = models.CharField(max_length= 255)\n     longitude = models.CharField(max_length= 255)\n"
                },
                {
                    "date": 1740372017291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type',null=True,blank=True))\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline',null=True,blank=True))\n     # social_media = models.ManyToManyField(CollegeSocialMedia,blank=True)\n     google_map_link = models.URLField(blank=True, null=True)\n-    latitude = models.CharField(max_length= 255)\n+    latitude = models.CharField(max_length= 255,null=True,blank=True))\n     longitude = models.CharField(max_length= 255)\n     about = models.TextField(null = True,blank=True)\n     brochure = models.FileField(upload_to='college/brochure/',null=True,blank=True)\n     step_counter= models.ForeignKey(FormStepProgress, on_delete=models.CASCADE,related_name='step_counter',null=True,blank=True)\n"
                },
                {
                    "date": 1740372025366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,13 +52,13 @@\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline',null=True,blank=True))\n     # social_media = models.ManyToManyField(CollegeSocialMedia,blank=True)\n     google_map_link = models.URLField(blank=True, null=True)\n     latitude = models.CharField(max_length= 255,null=True,blank=True))\n-    longitude = models.CharField(max_length= 255)\n+    longitude = models.CharField(max_length= 255,null=True,blank=True))\n     about = models.TextField(null = True,blank=True)\n     brochure = models.FileField(upload_to='college/brochure/',null=True,blank=True)\n     step_counter= models.ForeignKey(FormStepProgress, on_delete=models.CASCADE,related_name='step_counter',null=True,blank=True)\n-    facilities = models.ManyToManyField(Facility,related_name='college_facilities')\n+    facilities = models.ManyToManyField(Facility,related_name='college_facilities',null=True,blank=True))\n     placement = models.TextField(null=True,blank=True)\n     scholarship = models.TextField(null=True,blank=True)\n     created_date = models.DateField(auto_now_add=True)\n     updated_date = models.DateField(auto_now=True)\n"
                },
                {
                    "date": 1740372032228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline',null=True,blank=True))\n     # social_media = models.ManyToManyField(CollegeSocialMedia,blank=True)\n     google_map_link = models.URLField(blank=True, null=True)\n     latitude = models.CharField(max_length= 255,null=True,blank=True))\n-    longitude = models.CharField(max_length= 255,null=True,blank=True))\n+    longitude = models.CharField(max_length= 255,null=True,blank=True)\n     about = models.TextField(null = True,blank=True)\n     brochure = models.FileField(upload_to='college/brochure/',null=True,blank=True)\n     step_counter= models.ForeignKey(FormStepProgress, on_delete=models.CASCADE,related_name='step_counter',null=True,blank=True)\n     facilities = models.ManyToManyField(Facility,related_name='college_facilities',null=True,blank=True))\n"
                },
                {
                    "date": 1740372038371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,12 +48,12 @@\n     phone_number = models.CharField(max_length=20)\n     email = models.EmailField(max_length=255)\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation',null=True,blank=True))\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type',null=True,blank=True))\n-    discipline = models.ManyToManyField(Discipline, related_name='college_discipline',null=True,blank=True))\n+    discipline = models.ManyToManyField(Discipline, related_name='college_discipline',null=True,blank=True)\n     # social_media = models.ManyToManyField(CollegeSocialMedia,blank=True)\n     google_map_link = models.URLField(blank=True, null=True)\n-    latitude = models.CharField(max_length= 255,null=True,blank=True))\n+    latitude = models.CharField(max_length= 255,null=True,blank=True)\n     longitude = models.CharField(max_length= 255,null=True,blank=True)\n     about = models.TextField(null = True,blank=True)\n     brochure = models.FileField(upload_to='college/brochure/',null=True,blank=True)\n     step_counter= models.ForeignKey(FormStepProgress, on_delete=models.CASCADE,related_name='step_counter',null=True,blank=True)\n"
                },
                {
                    "date": 1740372043790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n     website_link = models.URLField(null= True,blank=True)\n     address = models.CharField(max_length=255)\n     district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district',null=True,blank=True)\n     phone_number = models.CharField(max_length=20)\n-    email = models.EmailField(max_length=255)\n+    email = models.EmailField(max_length=255,null=True,blank=True))\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation',null=True,blank=True))\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type',null=True,blank=True))\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline',null=True,blank=True)\n     # social_media = models.ManyToManyField(CollegeSocialMedia,blank=True)\n"
                },
                {
                    "date": 1740372051480,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,11 +42,11 @@\n     name = models.CharField(max_length=255,unique=True)\n     is_show = models.BooleanField(default=False)\n     established_date = models.DateField(null= True,blank=True)\n     website_link = models.URLField(null= True,blank=True)\n-    address = models.CharField(max_length=255)\n+    address = models.CharField(max_length=255,null=True,blank=True))\n     district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district',null=True,blank=True)\n-    phone_number = models.CharField(max_length=20)\n+    phone_number = models.CharField(max_length=20,null=True,blank=True))\n     email = models.EmailField(max_length=255,null=True,blank=True))\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation',null=True,blank=True))\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type',null=True,blank=True))\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline',null=True,blank=True)\n"
                },
                {
                    "date": 1740372115777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n     slug = models.SlugField(max_length=255, unique=True, null=True, blank=True)\n     banner_image = models.ImageField(upload_to='college/banner/',null=True,blank=True)\n     dp_image = models.ImageField(upload_to='college/dp/',null=True,blank=True)\n-    name = models.CharField(max_length=255,unique=True)\n+    name = models.CharField(max_length=255)\n     is_show = models.BooleanField(default=False)\n     established_date = models.DateField(null= True,blank=True)\n     website_link = models.URLField(null= True,blank=True)\n     address = models.CharField(max_length=255,null=True,blank=True))\n"
                },
                {
                    "date": 1740372121574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n     slug = models.SlugField(max_length=255, unique=True, null=True, blank=True)\n     banner_image = models.ImageField(upload_to='college/banner/',null=True,blank=True)\n     dp_image = models.ImageField(upload_to='college/dp/',null=True,blank=True)\n-    name = models.CharField(max_length=255)\n+    name = models.CharField(max_length=255,null=True,blank=True))\n     is_show = models.BooleanField(default=False)\n     established_date = models.DateField(null= True,blank=True)\n     website_link = models.URLField(null= True,blank=True)\n     address = models.CharField(max_length=255,null=True,blank=True))\n"
                },
                {
                    "date": 1740372130362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n     slug = models.SlugField(max_length=255, unique=True, null=True, blank=True)\n     banner_image = models.ImageField(upload_to='college/banner/',null=True,blank=True)\n     dp_image = models.ImageField(upload_to='college/dp/',null=True,blank=True)\n-    name = models.CharField(max_length=255,null=True,blank=True))\n+    name = models.CharField(max_length=255\n     is_show = models.BooleanField(default=False)\n     established_date = models.DateField(null= True,blank=True)\n     website_link = models.URLField(null= True,blank=True)\n     address = models.CharField(max_length=255,null=True,blank=True))\n"
                },
                {
                    "date": 1740372253327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n     slug = models.SlugField(max_length=255, unique=True, null=True, blank=True)\n     banner_image = models.ImageField(upload_to='college/banner/',null=True,blank=True)\n     dp_image = models.ImageField(upload_to='college/dp/',null=True,blank=True)\n-    name = models.CharField(max_length=255\n+    name = models.CharField(max_length=255)\n     is_show = models.BooleanField(default=False)\n     established_date = models.DateField(null= True,blank=True)\n     website_link = models.URLField(null= True,blank=True)\n     address = models.CharField(max_length=255,null=True,blank=True))\n@@ -76,9 +76,9 @@\n           return self.name if self.name else \"Unnamed\"\n     \n     def save(self, *args, **kwargs):\n         if not self.slug:\n-            self.slug = slugify(self.name)\n+            self.slug = f'{slugify(self.name)}-{str(self.public_id)[1:5]}{str(self.public_id)[-1:-5]}'\n         super().save(*args, **kwargs)\n     \n     \n     class Meta:\n"
                },
                {
                    "date": 1740372276093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n     established_date = models.DateField(null= True,blank=True)\n     website_link = models.URLField(null= True,blank=True)\n     address = models.CharField(max_length=255,null=True,blank=True))\n     district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district',null=True,blank=True)\n-    phone_number = models.CharField(max_length=20,null=True,blank=True))\n+    phone_number = models.CharField(max_length=20,null=True,blank=True)\n     email = models.EmailField(max_length=255,null=True,blank=True))\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation',null=True,blank=True))\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type',null=True,blank=True))\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline',null=True,blank=True)\n"
                },
                {
                    "date": 1740372283129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,12 +42,12 @@\n     name = models.CharField(max_length=255)\n     is_show = models.BooleanField(default=False)\n     established_date = models.DateField(null= True,blank=True)\n     website_link = models.URLField(null= True,blank=True)\n-    address = models.CharField(max_length=255,null=True,blank=True))\n+    address = models.CharField(max_length=255,null=True,blank=True)\n     district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district',null=True,blank=True)\n     phone_number = models.CharField(max_length=20,null=True,blank=True)\n-    email = models.EmailField(max_length=255,null=True,blank=True))\n+    email = models.EmailField(max_length=255,null=True,blank=True)\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation',null=True,blank=True))\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type',null=True,blank=True))\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline',null=True,blank=True)\n     # social_media = models.ManyToManyField(CollegeSocialMedia,blank=True)\n@@ -56,9 +56,9 @@\n     longitude = models.CharField(max_length= 255,null=True,blank=True)\n     about = models.TextField(null = True,blank=True)\n     brochure = models.FileField(upload_to='college/brochure/',null=True,blank=True)\n     step_counter= models.ForeignKey(FormStepProgress, on_delete=models.CASCADE,related_name='step_counter',null=True,blank=True)\n-    facilities = models.ManyToManyField(Facility,related_name='college_facilities',null=True,blank=True))\n+    facilities = models.ManyToManyField(Facility,related_name='college_facilities',null=True,blank=True)\n     placement = models.TextField(null=True,blank=True)\n     scholarship = models.TextField(null=True,blank=True)\n     created_date = models.DateField(auto_now_add=True)\n     updated_date = models.DateField(auto_now=True)\n"
                },
                {
                    "date": 1740372311923,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,19 +46,19 @@\n     address = models.CharField(max_length=255,null=True,blank=True)\n     district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district',null=True,blank=True)\n     phone_number = models.CharField(max_length=20,null=True,blank=True)\n     email = models.EmailField(max_length=255,null=True,blank=True)\n-    affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation',null=True,blank=True))\n-    college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type',null=True,blank=True))\n+    affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation',null=True,blank=True)\n+    college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type',null=True,blank=True)\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline',null=True,blank=True)\n     # social_media = models.ManyToManyField(CollegeSocialMedia,blank=True)\n     google_map_link = models.URLField(blank=True, null=True)\n     latitude = models.CharField(max_length= 255,null=True,blank=True)\n     longitude = models.CharField(max_length= 255,null=True,blank=True)\n     about = models.TextField(null = True,blank=True)\n     brochure = models.FileField(upload_to='college/brochure/',null=True,blank=True)\n     step_counter= models.ForeignKey(FormStepProgress, on_delete=models.CASCADE,related_name='step_counter',null=True,blank=True)\n-    facilities = models.ManyToManyField(Facility,related_name='college_facilities',null=True,blank=True)\n+    facilities = models.ManyToManyField(Facility,related_name='college_facilities',blank=True)\n     placement = models.TextField(null=True,blank=True)\n     scholarship = models.TextField(null=True,blank=True)\n     created_date = models.DateField(auto_now_add=True)\n     updated_date = models.DateField(auto_now=True)\n"
                },
                {
                    "date": 1740372322186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n     phone_number = models.CharField(max_length=20,null=True,blank=True)\n     email = models.EmailField(max_length=255,null=True,blank=True)\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation',null=True,blank=True)\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type',null=True,blank=True)\n-    discipline = models.ManyToManyField(Discipline, related_name='college_discipline',null=True,blank=True)\n+    discipline = models.ManyToManyField(Discipline, related_name='college_discipline'blank=True)\n     # social_media = models.ManyToManyField(CollegeSocialMedia,blank=True)\n     google_map_link = models.URLField(blank=True, null=True)\n     latitude = models.CharField(max_length= 255,null=True,blank=True)\n     longitude = models.CharField(max_length= 255,null=True,blank=True)\n"
                },
                {
                    "date": 1740392318761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n     phone_number = models.CharField(max_length=20,null=True,blank=True)\n     email = models.EmailField(max_length=255,null=True,blank=True)\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation',null=True,blank=True)\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type',null=True,blank=True)\n-    discipline = models.ManyToManyField(Discipline, related_name='college_discipline'blank=True)\n+    discipline = models.ManyToManyField(Discipline, related_name='college_discipline',blank=True)\n     # social_media = models.ManyToManyField(CollegeSocialMedia,blank=True)\n     google_map_link = models.URLField(blank=True, null=True)\n     latitude = models.CharField(max_length= 255,null=True,blank=True)\n     longitude = models.CharField(max_length= 255,null=True,blank=True)\n@@ -103,9 +103,9 @@\n         ]\n \n class CollegeGallery(models.Model):\n     college = models.ForeignKey(College, on_delete=models.CASCADE,related_name='college_gallery',null=True,blank=True)\n-    image = models.ImageField(upload_to='college/gallery/',null=True,blank=True)\n+    images = models.ImageField(upload_to='college/gallery/',null=True,blank=True)\n     description = models.TextField(blank=True)\n     created_date = models.DateField(auto_now_add=True)\n     updated_date = models.DateField(auto_now=True)\n \n"
                },
                {
                    "date": 1740392505880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,17 +101,22 @@\n         permissions = [\n             ('manage_faq', 'Manage faq'),\n         ]\n \n+from django.db import models\n+\n class CollegeGallery(models.Model):\n-    college = models.ForeignKey(College, on_delete=models.CASCADE,related_name='college_gallery',null=True,blank=True)\n-    images = models.ImageField(upload_to='college/gallery/',null=True,blank=True)\n+    college = models.ForeignKey(\n+        College, on_delete=models.CASCADE, related_name='college_gallery', null=True, blank=True\n+    )\n+    image = models.ImageField(upload_to='college/gallery/', null=True, blank=True)  # Store one image per instance\n     description = models.TextField(blank=True)\n-    created_date = models.DateField(auto_now_add=True)\n-    updated_date = models.DateField(auto_now=True)\n+    created_date = models.DateTimeField(auto_now_add=True)\n\\ No newline at end of file\n+    updated_date = models.DateTimeField(auto_now=True)\n \n     def __str__(self):\n         return f'Gallery Image {self.id}'\n+\n     class Meta:\n         permissions = [\n             ('manage_college_gallery', 'Manage college gallery'),\n-        ]\n+        ]\n"
                },
                {
                    "date": 1740392506100,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,5 +118,5 @@\n \n     class Meta:\n         permissions = [\n             ('manage_college_gallery', 'Manage college gallery'),\n-        ]\n\\ No newline at end of file\n+        ]\n"
                },
                {
                    "date": 1740640156938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,9 +108,9 @@\n     college = models.ForeignKey(\n         College, on_delete=models.CASCADE, related_name='college_gallery', null=True, blank=True\n     )\n     image = models.ImageField(upload_to='college/gallery/', null=True, blank=True)  # Store one image per instance\n-    description = models.TextField(blank=True)\n+    # description = models.TextField(blank=True)\n     created_date = models.DateTimeField(auto_now_add=True)\n     updated_date = models.DateTimeField(auto_now=True)\n \n     def __str__(self):\n"
                },
                {
                    "date": 1740650216678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n     longitude = models.CharField(max_length= 255,null=True,blank=True)\n     about = models.TextField(null = True,blank=True)\n     brochure = models.FileField(upload_to='college/brochure/',null=True,blank=True)\n     step_counter= models.ForeignKey(FormStepProgress, on_delete=models.CASCADE,related_name='step_counter',null=True,blank=True)\n-    facilities = models.ManyToManyField(Facility,related_name='college_facilities',blank=True)\n+    # facilities = models.ManyToManyField(Facility,related_name='college_facilities',blank=True)\n     placement = models.TextField(null=True,blank=True)\n     scholarship = models.TextField(null=True,blank=True)\n     created_date = models.DateField(auto_now_add=True)\n     updated_date = models.DateField(auto_now=True)\n"
                },
                {
                    "date": 1740650240157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n # from admissionopen.models import AdmissionOpen\n # from location.models import Location\n from collegetype.models import CollegeType\n # from coursesandfees.models import CoursesAndFees\n-from facilities.models import Facility\n+# from facilities.models import Facility\n from socialmedia.models import SocialMedia,CollegeSocialMedia\n from district.models import District\n from discipline.models import Discipline\n from gallery.models import Gallery\n"
                },
                {
                    "date": 1740899123784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,8 @@\n # from location.models import Location\n from collegetype.models import CollegeType\n # from coursesandfees.models import CoursesAndFees\n # from facilities.models import Facility\n-from socialmedia.models import SocialMedia,CollegeSocialMedia\n from district.models import District\n from discipline.models import Discipline\n from gallery.models import Gallery\n # from accounts.models import CustomUser\n"
                },
                {
                    "date": 1740995173320,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,10 +83,59 @@\n     class Meta:\n         permissions = [\n             ('manage_college', 'Manage college'),\n         ]\n+    \n+    @property\n+    def get_profile_completion_percentage(self):\n+        # Required fields (must be filled)\n+        required_fields = [\n+            'name', 'district', 'affiliated', 'college_type'\n+        ]\n \n+        # Non-required fields (optional but contribute)\n+        non_required_fields = [\n+            'banner_image', 'dp_image', 'established_date', 'website_link', 'address',\n+            'phone_number', 'email', 'google_map_link', 'latitude', 'longitude', 'about',\n+            'brochure', 'placement', 'scholarship'\n+        ]\n \n+        # Related fields (foreign keys and many-to-many relationships)\n+        related_fields = [\n+            'discipline',  # Many-to-many field\n+        ]\n+\n+        # Calculate completion for required fields\n+        completed_required_fields = sum(1 for field in required_fields if getattr(self, field, None))\n+        total_required_fields = len(required_fields)\n+        required_percentage = (completed_required_fields / total_required_fields * 60) if total_required_fields else 60\n+\n+        # Calculate completion for non-required fields\n+        completed_non_required_fields = sum(1 for field in non_required_fields if getattr(self, field, None))\n+        total_non_required_fields = len(non_required_fields)\n+        non_required_percentage = (completed_non_required_fields / total_non_required_fields * 10) if total_non_required_fields else 10\n+\n+        # Calculate completion for related fields\n+        completed_related_fields = 0\n+        total_related_fields = len(related_fields)\n+\n+        for field in related_fields:\n+            related_value = getattr(self, field, None)\n+            if related_value:\n+                if isinstance(related_value, models.Manager):  # Many-to-many field\n+                    if related_value.exists():\n+                        completed_related_fields += 1\n+                else:  # ForeignKey or OneToOneField\n+                    completed_related_fields += 1\n+\n+        related_percentage = (completed_related_fields / total_related_fields * 30) if total_related_fields else 30\n+\n+        # Total completion percentage\n+        completion_percentage = required_percentage + related_percentage + non_required_percentage\n+\n+        return round(completion_percentage, 2)\n+\n+\n class CollegeFaqs(models.Model):\n     college = models.ForeignKey(College, on_delete=models.CASCADE,related_name='college_faq')\n     question = models.CharField(max_length=255)\n     answer = models.TextField(blank=True)\n"
                },
                {
                    "date": 1740995205557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,56 +84,56 @@\n         permissions = [\n             ('manage_college', 'Manage college'),\n         ]\n     \n-    @property\n-    def get_profile_completion_percentage(self):\n-        # Required fields (must be filled)\n-        required_fields = [\n-            'name', 'district', 'affiliated', 'college_type'\n-        ]\n+    # @property\n+    # def get_profile_completion_percentage(self):\n+    #     # Required fields (must be filled)\n+    #     required_fields = [\n+    #         'name', 'district', 'affiliated', 'college_type'\n+    #     ]\n \n-        # Non-required fields (optional but contribute)\n-        non_required_fields = [\n-            'banner_image', 'dp_image', 'established_date', 'website_link', 'address',\n-            'phone_number', 'email', 'google_map_link', 'latitude', 'longitude', 'about',\n-            'brochure', 'placement', 'scholarship'\n-        ]\n+    #     # Non-required fields (optional but contribute)\n+    #     non_required_fields = [\n+    #         'banner_image', 'dp_image', 'established_date', 'website_link', 'address',\n+    #         'phone_number', 'email', 'google_map_link', 'latitude', 'longitude', 'about',\n+    #         'brochure', 'placement', 'scholarship'\n+    #     ]\n \n-        # Related fields (foreign keys and many-to-many relationships)\n-        related_fields = [\n-            'discipline',  # Many-to-many field\n-        ]\n+    #     # Related fields (foreign keys and many-to-many relationships)\n+    #     related_fields = [\n+    #         'discipline',  # Many-to-many field\n+    #     ]\n \n-        # Calculate completion for required fields\n-        completed_required_fields = sum(1 for field in required_fields if getattr(self, field, None))\n-        total_required_fields = len(required_fields)\n-        required_percentage = (completed_required_fields / total_required_fields * 60) if total_required_fields else 60\n+    #     # Calculate completion for required fields\n+    #     completed_required_fields = sum(1 for field in required_fields if getattr(self, field, None))\n+    #     total_required_fields = len(required_fields)\n+    #     required_percentage = (completed_required_fields / total_required_fields * 60) if total_required_fields else 60\n \n-        # Calculate completion for non-required fields\n-        completed_non_required_fields = sum(1 for field in non_required_fields if getattr(self, field, None))\n-        total_non_required_fields = len(non_required_fields)\n-        non_required_percentage = (completed_non_required_fields / total_non_required_fields * 10) if total_non_required_fields else 10\n+    #     # Calculate completion for non-required fields\n+    #     completed_non_required_fields = sum(1 for field in non_required_fields if getattr(self, field, None))\n+    #     total_non_required_fields = len(non_required_fields)\n+    #     non_required_percentage = (completed_non_required_fields / total_non_required_fields * 10) if total_non_required_fields else 10\n \n-        # Calculate completion for related fields\n-        completed_related_fields = 0\n-        total_related_fields = len(related_fields)\n+    #     # Calculate completion for related fields\n+    #     completed_related_fields = 0\n+    #     total_related_fields = len(related_fields)\n \n-        for field in related_fields:\n-            related_value = getattr(self, field, None)\n-            if related_value:\n-                if isinstance(related_value, models.Manager):  # Many-to-many field\n-                    if related_value.exists():\n-                        completed_related_fields += 1\n-                else:  # ForeignKey or OneToOneField\n-                    completed_related_fields += 1\n+    #     for field in related_fields:\n+    #         related_value = getattr(self, field, None)\n+    #         if related_value:\n+    #             if isinstance(related_value, models.Manager):  # Many-to-many field\n+    #                 if related_value.exists():\n+    #                     completed_related_fields += 1\n+    #             else:  # ForeignKey or OneToOneField\n+    #                 completed_related_fields += 1\n \n-        related_percentage = (completed_related_fields / total_related_fields * 30) if total_related_fields else 30\n+    #     related_percentage = (completed_related_fields / total_related_fields * 30) if total_related_fields else 30\n \n-        # Total completion percentage\n-        completion_percentage = required_percentage + related_percentage + non_required_percentage\n+    #     # Total completion percentage\n+    #     completion_percentage = required_percentage + related_percentage + non_required_percentage\n \n-        return round(completion_percentage, 2)\n+    #     return round(completion_percentage, 2)\n \n \n class CollegeFaqs(models.Model):\n     college = models.ForeignKey(College, on_delete=models.CASCADE,related_name='college_faq')\n"
                },
                {
                    "date": 1740996539714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,56 +84,56 @@\n         permissions = [\n             ('manage_college', 'Manage college'),\n         ]\n     \n-    # @property\n-    # def get_profile_completion_percentage(self):\n-    #     # Required fields (must be filled)\n-    #     required_fields = [\n-    #         'name', 'district', 'affiliated', 'college_type'\n-    #     ]\n+    @property\n+    def get_profile_completion_percentage(self):\n+        # Required fields (must be filled)\n+        required_fields = [\n+            'name', 'district', 'affiliated', 'college_type'\n+        ]\n \n-    #     # Non-required fields (optional but contribute)\n-    #     non_required_fields = [\n-    #         'banner_image', 'dp_image', 'established_date', 'website_link', 'address',\n-    #         'phone_number', 'email', 'google_map_link', 'latitude', 'longitude', 'about',\n-    #         'brochure', 'placement', 'scholarship'\n-    #     ]\n+        # Non-required fields (optional but contribute)\n+        non_required_fields = [\n+            'banner_image', 'dp_image', 'established_date', 'website_link', 'address',\n+            'phone_number', 'email', 'google_map_link', 'latitude', 'longitude', 'about',\n+            'brochure', 'placement', 'scholarship'\n+        ]\n \n-    #     # Related fields (foreign keys and many-to-many relationships)\n-    #     related_fields = [\n-    #         'discipline',  # Many-to-many field\n-    #     ]\n+        # Related fields (foreign keys and many-to-many relationships)\n+        related_fields = [\n+            'discipline',  # Many-to-many field\n+        ]\n \n-    #     # Calculate completion for required fields\n-    #     completed_required_fields = sum(1 for field in required_fields if getattr(self, field, None))\n-    #     total_required_fields = len(required_fields)\n-    #     required_percentage = (completed_required_fields / total_required_fields * 60) if total_required_fields else 60\n+        # Calculate completion for required fields\n+        completed_required_fields = sum(1 for field in required_fields if getattr(self, field, None))\n+        total_required_fields = len(required_fields)\n+        required_percentage = (completed_required_fields / total_required_fields * 60) if total_required_fields else 60\n \n-    #     # Calculate completion for non-required fields\n-    #     completed_non_required_fields = sum(1 for field in non_required_fields if getattr(self, field, None))\n-    #     total_non_required_fields = len(non_required_fields)\n-    #     non_required_percentage = (completed_non_required_fields / total_non_required_fields * 10) if total_non_required_fields else 10\n+        # Calculate completion for non-required fields\n+        completed_non_required_fields = sum(1 for field in non_required_fields if getattr(self, field, None))\n+        total_non_required_fields = len(non_required_fields)\n+        non_required_percentage = (completed_non_required_fields / total_non_required_fields * 10) if total_non_required_fields else 10\n \n-    #     # Calculate completion for related fields\n-    #     completed_related_fields = 0\n-    #     total_related_fields = len(related_fields)\n+        # Calculate completion for related fields\n+        completed_related_fields = 0\n+        total_related_fields = len(related_fields)\n \n-    #     for field in related_fields:\n-    #         related_value = getattr(self, field, None)\n-    #         if related_value:\n-    #             if isinstance(related_value, models.Manager):  # Many-to-many field\n-    #                 if related_value.exists():\n-    #                     completed_related_fields += 1\n-    #             else:  # ForeignKey or OneToOneField\n-    #                 completed_related_fields += 1\n+        for field in related_fields:\n+            related_value = getattr(self, field, None)\n+            if related_value:\n+                if isinstance(related_value, models.Manager):  # Many-to-many field\n+                    if related_value.exists():\n+                        completed_related_fields += 1\n+                else:  # ForeignKey or OneToOneField\n+                    completed_related_fields += 1\n \n-    #     related_percentage = (completed_related_fields / total_related_fields * 30) if total_related_fields else 30\n+        related_percentage = (completed_related_fields / total_related_fields * 30) if total_related_fields else 30\n \n-    #     # Total completion percentage\n-    #     completion_percentage = required_percentage + related_percentage + non_required_percentage\n+        # Total completion percentage\n+        completion_percentage = required_percentage + related_percentage + non_required_percentage\n \n-    #     return round(completion_percentage, 2)\n+        return round(completion_percentage, 2)\n \n \n class CollegeFaqs(models.Model):\n     college = models.ForeignKey(College, on_delete=models.CASCADE,related_name='college_faq')\n"
                },
                {
                    "date": 1740997446542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,56 +84,56 @@\n         permissions = [\n             ('manage_college', 'Manage college'),\n         ]\n     \n-    @property\n-    def get_profile_completion_percentage(self):\n-        # Required fields (must be filled)\n-        required_fields = [\n-            'name', 'district', 'affiliated', 'college_type'\n-        ]\n+    # @property\n+    # def get_profile_completion_percentage(self):\n+    #     # Required fields (must be filled)\n+    #     required_fields = [\n+    #         'name', 'district', 'affiliated', 'college_type'\n+    #     ]\n \n-        # Non-required fields (optional but contribute)\n-        non_required_fields = [\n-            'banner_image', 'dp_image', 'established_date', 'website_link', 'address',\n-            'phone_number', 'email', 'google_map_link', 'latitude', 'longitude', 'about',\n-            'brochure', 'placement', 'scholarship'\n-        ]\n+    #     # Non-required fields (optional but contribute)\n+    #     non_required_fields = [\n+    #         'banner_image', 'dp_image', 'established_date', 'website_link', 'address',\n+    #         'phone_number', 'email', 'google_map_link', 'latitude', 'longitude', 'about',\n+    #         'brochure', 'placement', 'scholarship'\n+    #     ]\n \n-        # Related fields (foreign keys and many-to-many relationships)\n-        related_fields = [\n-            'discipline',  # Many-to-many field\n-        ]\n+    #     # Related fields (foreign keys and many-to-many relationships)\n+    #     related_fields = [\n+    #         'discipline',  # Many-to-many field\n+    #     ]\n \n-        # Calculate completion for required fields\n-        completed_required_fields = sum(1 for field in required_fields if getattr(self, field, None))\n-        total_required_fields = len(required_fields)\n-        required_percentage = (completed_required_fields / total_required_fields * 60) if total_required_fields else 60\n+    #     # Calculate completion for required fields\n+    #     completed_required_fields = sum(1 for field in required_fields if getattr(self, field, None))\n+    #     total_required_fields = len(required_fields)\n+    #     required_percentage = (completed_required_fields / total_required_fields * 60) if total_required_fields else 60\n \n-        # Calculate completion for non-required fields\n-        completed_non_required_fields = sum(1 for field in non_required_fields if getattr(self, field, None))\n-        total_non_required_fields = len(non_required_fields)\n-        non_required_percentage = (completed_non_required_fields / total_non_required_fields * 10) if total_non_required_fields else 10\n+    #     # Calculate completion for non-required fields\n+    #     completed_non_required_fields = sum(1 for field in non_required_fields if getattr(self, field, None))\n+    #     total_non_required_fields = len(non_required_fields)\n+    #     non_required_percentage = (completed_non_required_fields / total_non_required_fields * 10) if total_non_required_fields else 10\n \n-        # Calculate completion for related fields\n-        completed_related_fields = 0\n-        total_related_fields = len(related_fields)\n+    #     # Calculate completion for related fields\n+    #     completed_related_fields = 0\n+    #     total_related_fields = len(related_fields)\n \n-        for field in related_fields:\n-            related_value = getattr(self, field, None)\n-            if related_value:\n-                if isinstance(related_value, models.Manager):  # Many-to-many field\n-                    if related_value.exists():\n-                        completed_related_fields += 1\n-                else:  # ForeignKey or OneToOneField\n-                    completed_related_fields += 1\n+    #     for field in related_fields:\n+    #         related_value = getattr(self, field, None)\n+    #         if related_value:\n+    #             if isinstance(related_value, models.Manager):  # Many-to-many field\n+    #                 if related_value.exists():\n+    #                     completed_related_fields += 1\n+    #             else:  # ForeignKey or OneToOneField\n+    #                 completed_related_fields += 1\n \n-        related_percentage = (completed_related_fields / total_related_fields * 30) if total_related_fields else 30\n+    #     related_percentage = (completed_related_fields / total_related_fields * 30) if total_related_fields else 30\n \n-        # Total completion percentage\n-        completion_percentage = required_percentage + related_percentage + non_required_percentage\n+    #     # Total completion percentage\n+    #     completion_percentage = required_percentage + related_percentage + non_required_percentage\n \n-        return round(completion_percentage, 2)\n+    #     return round(completion_percentage, 2)\n \n \n class CollegeFaqs(models.Model):\n     college = models.ForeignKey(College, on_delete=models.CASCADE,related_name='college_faq')\n"
                },
                {
                    "date": 1741062738019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,56 +84,56 @@\n         permissions = [\n             ('manage_college', 'Manage college'),\n         ]\n     \n-    # @property\n-    # def get_profile_completion_percentage(self):\n-    #     # Required fields (must be filled)\n-    #     required_fields = [\n-    #         'name', 'district', 'affiliated', 'college_type'\n-    #     ]\n+    @property\n+    def get_profile_completion_percentage(self):\n+        # Required fields (must be filled)\n+        required_fields = [\n+            'name', 'district', 'affiliated', 'college_type'\n+        ]\n \n-    #     # Non-required fields (optional but contribute)\n-    #     non_required_fields = [\n-    #         'banner_image', 'dp_image', 'established_date', 'website_link', 'address',\n-    #         'phone_number', 'email', 'google_map_link', 'latitude', 'longitude', 'about',\n-    #         'brochure', 'placement', 'scholarship'\n-    #     ]\n+        # Non-required fields (optional but contribute)\n+        non_required_fields = [\n+            'banner_image', 'dp_image', 'established_date', 'website_link', 'address',\n+            'phone_number', 'email', 'google_map_link', 'latitude', 'longitude', 'about',\n+            'brochure', 'placement', 'scholarship'\n+        ]\n \n-    #     # Related fields (foreign keys and many-to-many relationships)\n-    #     related_fields = [\n-    #         'discipline',  # Many-to-many field\n-    #     ]\n+        # Related fields (foreign keys and many-to-many relationships)\n+        related_fields = [\n+            'discipline',  # Many-to-many field\n+        ]\n \n-    #     # Calculate completion for required fields\n-    #     completed_required_fields = sum(1 for field in required_fields if getattr(self, field, None))\n-    #     total_required_fields = len(required_fields)\n-    #     required_percentage = (completed_required_fields / total_required_fields * 60) if total_required_fields else 60\n+        # Calculate completion for required fields\n+        completed_required_fields = sum(1 for field in required_fields if getattr(self, field, None))\n+        total_required_fields = len(required_fields)\n+        required_percentage = (completed_required_fields / total_required_fields * 60) if total_required_fields else 60\n \n-    #     # Calculate completion for non-required fields\n-    #     completed_non_required_fields = sum(1 for field in non_required_fields if getattr(self, field, None))\n-    #     total_non_required_fields = len(non_required_fields)\n-    #     non_required_percentage = (completed_non_required_fields / total_non_required_fields * 10) if total_non_required_fields else 10\n+        # Calculate completion for non-required fields\n+        completed_non_required_fields = sum(1 for field in non_required_fields if getattr(self, field, None))\n+        total_non_required_fields = len(non_required_fields)\n+        non_required_percentage = (completed_non_required_fields / total_non_required_fields * 10) if total_non_required_fields else 10\n \n-    #     # Calculate completion for related fields\n-    #     completed_related_fields = 0\n-    #     total_related_fields = len(related_fields)\n+        # Calculate completion for related fields\n+        completed_related_fields = 0\n+        total_related_fields = len(related_fields)\n \n-    #     for field in related_fields:\n-    #         related_value = getattr(self, field, None)\n-    #         if related_value:\n-    #             if isinstance(related_value, models.Manager):  # Many-to-many field\n-    #                 if related_value.exists():\n-    #                     completed_related_fields += 1\n-    #             else:  # ForeignKey or OneToOneField\n-    #                 completed_related_fields += 1\n+        for field in related_fields:\n+            related_value = getattr(self, field, None)\n+            if related_value:\n+                if isinstance(related_value, models.Manager):  # Many-to-many field\n+                    if related_value.exists():\n+                        completed_related_fields += 1\n+                else:  # ForeignKey or OneToOneField\n+                    completed_related_fields += 1\n \n-    #     related_percentage = (completed_related_fields / total_related_fields * 30) if total_related_fields else 30\n+        related_percentage = (completed_related_fields / total_related_fields * 30) if total_related_fields else 30\n \n-    #     # Total completion percentage\n-    #     completion_percentage = required_percentage + related_percentage + non_required_percentage\n+        # Total completion percentage\n+        completion_percentage = required_percentage + related_percentage + non_required_percentage\n \n-    #     return round(completion_percentage, 2)\n+        return round(completion_percentage, 2)\n \n \n class CollegeFaqs(models.Model):\n     college = models.ForeignKey(College, on_delete=models.CASCADE,related_name='college_faq')\n"
                },
                {
                    "date": 1741160592958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,8 +39,9 @@\n     banner_image = models.ImageField(upload_to='college/banner/',null=True,blank=True)\n     dp_image = models.ImageField(upload_to='college/dp/',null=True,blank=True)\n     name = models.CharField(max_length=255)\n     is_show = models.BooleanField(default=False)\n+    is_show = models.BooleanField(default=False)\n     established_date = models.DateField(null= True,blank=True)\n     website_link = models.URLField(null= True,blank=True)\n     address = models.CharField(max_length=255,null=True,blank=True)\n     district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district',null=True,blank=True)\n"
                },
                {
                    "date": 1741160599649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n     banner_image = models.ImageField(upload_to='college/banner/',null=True,blank=True)\n     dp_image = models.ImageField(upload_to='college/dp/',null=True,blank=True)\n     name = models.CharField(max_length=255)\n     is_show = models.BooleanField(default=False)\n-    is_show = models.BooleanField(default=False)\n+    is_verified = models.BooleanField(default=False)\n     established_date = models.DateField(null= True,blank=True)\n     website_link = models.URLField(null= True,blank=True)\n     address = models.CharField(max_length=255,null=True,blank=True)\n     district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district',null=True,blank=True)\n"
                },
                {
                    "date": 1742120883656,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation',null=True,blank=True)\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type',null=True,blank=True)\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline',blank=True)\n     # social_media = models.ManyToManyField(CollegeSocialMedia,blank=True)\n-    google_map_link = models.URLField(blank=True, null=True)\n+    google_map_link = models.CharField(blank=True, null=True)\n     latitude = models.CharField(max_length= 255,null=True,blank=True)\n     longitude = models.CharField(max_length= 255,null=True,blank=True)\n     about = models.TextField(null = True,blank=True)\n     brochure = models.FileField(upload_to='college/brochure/',null=True,blank=True)\n"
                },
                {
                    "date": 1742120889127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation',null=True,blank=True)\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type',null=True,blank=True)\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline',blank=True)\n     # social_media = models.ManyToManyField(CollegeSocialMedia,blank=True)\n-    google_map_link = models.CharField(blank=True, null=True)\n+    google_map_link = models.CharField(blank=True, null=True,)\n     latitude = models.CharField(max_length= 255,null=True,blank=True)\n     longitude = models.CharField(max_length= 255,null=True,blank=True)\n     about = models.TextField(null = True,blank=True)\n     brochure = models.FileField(upload_to='college/brochure/',null=True,blank=True)\n"
                },
                {
                    "date": 1742120894363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation',null=True,blank=True)\n     college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type',null=True,blank=True)\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline',blank=True)\n     # social_media = models.ManyToManyField(CollegeSocialMedia,blank=True)\n-    google_map_link = models.CharField(blank=True, null=True,)\n+    google_map_link = models.CharField(blank=True, null=True, max_length=1000)\n     latitude = models.CharField(max_length= 255,null=True,blank=True)\n     longitude = models.CharField(max_length= 255,null=True,blank=True)\n     about = models.TextField(null = True,blank=True)\n     brochure = models.FileField(upload_to='college/brochure/',null=True,blank=True)\n"
                },
                {
                    "date": 1742126962972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n     name = models.CharField(max_length=255)\n     is_show = models.BooleanField(default=False)\n     is_verified = models.BooleanField(default=False)\n     established_date = models.DateField(null= True,blank=True)\n-    website_link = models.URLField(null= True,blank=True)\n+    website_link = models.CharField(null= True,blank=True)\n     address = models.CharField(max_length=255,null=True,blank=True)\n     district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district',null=True,blank=True)\n     phone_number = models.CharField(max_length=20,null=True,blank=True)\n     email = models.EmailField(max_length=255,null=True,blank=True)\n"
                },
                {
                    "date": 1742126982501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n     name = models.CharField(max_length=255)\n     is_show = models.BooleanField(default=False)\n     is_verified = models.BooleanField(default=False)\n     established_date = models.DateField(null= True,blank=True)\n-    website_link = models.CharField(null= True,blank=True)\n+    website_link = models.CharField(max_length=255,null= True,blank=True)\n     address = models.CharField(max_length=255,null=True,blank=True)\n     district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district',null=True,blank=True)\n     phone_number = models.CharField(max_length=20,null=True,blank=True)\n     email = models.EmailField(max_length=255,null=True,blank=True)\n"
                },
                {
                    "date": 1742126988942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n     name = models.CharField(max_length=255)\n     is_show = models.BooleanField(default=False)\n     is_verified = models.BooleanField(default=False)\n     established_date = models.DateField(null= True,blank=True)\n-    website_link = models.CharField(max_length=255,null= True,blank=True)\n+    website_link = models.CharField(max_length=2510,null= True,blank=True)\n     address = models.CharField(max_length=255,null=True,blank=True)\n     district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district',null=True,blank=True)\n     phone_number = models.CharField(max_length=20,null=True,blank=True)\n     email = models.EmailField(max_length=255,null=True,blank=True)\n"
                },
                {
                    "date": 1743745206945,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,15 +41,15 @@\n     name = models.CharField(max_length=255)\n     is_show = models.BooleanField(default=False)\n     is_verified = models.BooleanField(default=False)\n     established_date = models.DateField(null= True,blank=True)\n-    website_link = models.CharField(max_length=2510,null= True,blank=True)\n+    website_link = models.CharField(max_length=510,null= True,blank=True)\n     address = models.CharField(max_length=255,null=True,blank=True)\n     district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district',null=True,blank=True)\n     phone_number = models.CharField(max_length=20,null=True,blank=True)\n     email = models.EmailField(max_length=255,null=True,blank=True)\n     affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation',null=True,blank=True)\n-    college_type = models.ForeignKey(CollegeType, on_delete=models.CASCADE,related_name='college_type',null=True,blank=True)\n+    college_type = models.ForeignKey(CollegeType, on_delete=models.Se,related_name='college_type',null=True,blank=True)\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline',blank=True)\n     # social_media = models.ManyToManyField(CollegeSocialMedia,blank=True)\n     google_map_link = models.CharField(blank=True, null=True, max_length=1000)\n     latitude = models.CharField(max_length= 255,null=True,blank=True)\n"
                },
                {
                    "date": 1743745215471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,10 +46,10 @@\n     address = models.CharField(max_length=255,null=True,blank=True)\n     district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district',null=True,blank=True)\n     phone_number = models.CharField(max_length=20,null=True,blank=True)\n     email = models.EmailField(max_length=255,null=True,blank=True)\n-    affiliated = models.ForeignKey(Affiliation, on_delete=models.CASCADE,related_name='college_affiliation',null=True,blank=True)\n-    college_type = models.ForeignKey(CollegeType, on_delete=models.Se,related_name='college_type',null=True,blank=True)\n+    affiliated = models.ForeignKey(Affiliation, on_delete=models.Set,related_name='college_affiliation',null=True,blank=True)\n+    college_type = models.ForeignKey(CollegeType, on_delete=models.SET_NULL,related_name='college_type',null=True,blank=True)\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline',blank=True)\n     # social_media = models.ManyToManyField(CollegeSocialMedia,blank=True)\n     google_map_link = models.CharField(blank=True, null=True, max_length=1000)\n     latitude = models.CharField(max_length= 255,null=True,blank=True)\n"
                },
                {
                    "date": 1743745228260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,12 +43,12 @@\n     is_verified = models.BooleanField(default=False)\n     established_date = models.DateField(null= True,blank=True)\n     website_link = models.CharField(max_length=510,null= True,blank=True)\n     address = models.CharField(max_length=255,null=True,blank=True)\n-    district = models.ForeignKey(District,on_delete=models.CASCADE,related_name='college_district',null=True,blank=True)\n+    district = models.ForeignKey(District,on_delete=models.SET_NULL,related_name='college_district',null=True,blank=True)\n     phone_number = models.CharField(max_length=20,null=True,blank=True)\n     email = models.EmailField(max_length=255,null=True,blank=True)\n-    affiliated = models.ForeignKey(Affiliation, on_delete=models.Set,related_name='college_affiliation',null=True,blank=True)\n+    affiliated = models.ForeignKey(Affiliation, on_delete=models.SET_NULL,related_name='college_affiliation',null=True,blank=True)\n     college_type = models.ForeignKey(CollegeType, on_delete=models.SET_NULL,related_name='college_type',null=True,blank=True)\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline',blank=True)\n     # social_media = models.ManyToManyField(CollegeSocialMedia,blank=True)\n     google_map_link = models.CharField(blank=True, null=True, max_length=1000)\n"
                },
                {
                    "date": 1744707642017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n     address = models.CharField(max_length=255,null=True,blank=True)\n     district = models.ForeignKey(District,on_delete=models.SET_NULL,related_name='college_district',null=True,blank=True)\n     phone_number = models.CharField(max_length=20,null=True,blank=True)\n     email = models.EmailField(max_length=255,null=True,blank=True)\n-    affiliated = models.ForeignKey(Affiliation, on_delete=models.SET_NULL,related_name='college_affiliation',null=True,blank=True)\n+    affiliated = models.ManyToManyField(Affiliation, on_delete=models.SET_NULL,related_name='college_affiliation',null=True,blank=True)\n     college_type = models.ForeignKey(CollegeType, on_delete=models.SET_NULL,related_name='college_type',null=True,blank=True)\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline',blank=True)\n     # social_media = models.ManyToManyField(CollegeSocialMedia,blank=True)\n     google_map_link = models.CharField(blank=True, null=True, max_length=1000)\n"
                },
                {
                    "date": 1744707649426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n     address = models.CharField(max_length=255,null=True,blank=True)\n     district = models.ForeignKey(District,on_delete=models.SET_NULL,related_name='college_district',null=True,blank=True)\n     phone_number = models.CharField(max_length=20,null=True,blank=True)\n     email = models.EmailField(max_length=255,null=True,blank=True)\n-    affiliated = models.ManyToManyField(Affiliation, on_delete=models.SET_NULL,related_name='college_affiliation',null=True,blank=True)\n+    affiliated = models.ManyToManyField(Affiliationrelated_name='college_affiliation',null=True,blank=True)\n     college_type = models.ForeignKey(CollegeType, on_delete=models.SET_NULL,related_name='college_type',null=True,blank=True)\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline',blank=True)\n     # social_media = models.ManyToManyField(CollegeSocialMedia,blank=True)\n     google_map_link = models.CharField(blank=True, null=True, max_length=1000)\n"
                },
                {
                    "date": 1744707658127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n     address = models.CharField(max_length=255,null=True,blank=True)\n     district = models.ForeignKey(District,on_delete=models.SET_NULL,related_name='college_district',null=True,blank=True)\n     phone_number = models.CharField(max_length=20,null=True,blank=True)\n     email = models.EmailField(max_length=255,null=True,blank=True)\n-    affiliated = models.ManyToManyField(Affiliationrelated_name='college_affiliation',null=True,blank=True)\n+    affiliated = models.ManyToManyField(Affiliation,blank=)\n     college_type = models.ForeignKey(CollegeType, on_delete=models.SET_NULL,related_name='college_type',null=True,blank=True)\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline',blank=True)\n     # social_media = models.ManyToManyField(CollegeSocialMedia,blank=True)\n     google_map_link = models.CharField(blank=True, null=True, max_length=1000)\n"
                },
                {
                    "date": 1744709327758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n     address = models.CharField(max_length=255,null=True,blank=True)\n     district = models.ForeignKey(District,on_delete=models.SET_NULL,related_name='college_district',null=True,blank=True)\n     phone_number = models.CharField(max_length=20,null=True,blank=True)\n     email = models.EmailField(max_length=255,null=True,blank=True)\n-    affiliated = models.ManyToManyField(Affiliation,blank=)\n+    affiliated = models.ManyToManyField(Affiliation,blank='True')\n     college_type = models.ForeignKey(CollegeType, on_delete=models.SET_NULL,related_name='college_type',null=True,blank=True)\n     discipline = models.ManyToManyField(Discipline, related_name='college_discipline',blank=True)\n     # social_media = models.ManyToManyField(CollegeSocialMedia,blank=True)\n     google_map_link = models.CharField(blank=True, null=True, max_length=1000)\n@@ -101,9 +101,10 @@\n         ]\n \n         # Related fields (foreign keys and many-to-many relationships)\n         related_fields = [\n-            'discipline',  # Many-to-many field\n+            'discipline',\n+            # Many-to-many field\n         ]\n \n         # Calculate completion for required fields\n         completed_required_fields = sum(1 for field in required_fields if getattr(self, field, None))\n"
                },
                {
                    "date": 1744709340848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,10 +101,10 @@\n         ]\n \n         # Related fields (foreign keys and many-to-many relationships)\n         related_fields = [\n-            'discipline',\n-            # Many-to-many field\n+            'discipline',  # Many-to-many field\n+            'affiliated',  # Many-to-many field\n         ]\n \n         # Calculate completion for required fields\n         completed_required_fields = sum(1 for field in required_fields if getattr(self, field, None))\n"
                },
                {
                    "date": 1744709392117,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n     @property\n     def get_profile_completion_percentage(self):\n         # Required fields (must be filled)\n         required_fields = [\n-            'name', 'district', 'affiliated', 'college_type'\n+            'name', 'district',  'college_type'\n         ]\n \n         # Non-required fields (optional but contribute)\n         non_required_fields = [\n"
                }
            ],
            "date": 1727170911784,
            "name": "Commit-0",
            "content": "from django.db import models\n\n# Create your models here.\nclass "
        }
    ]
}