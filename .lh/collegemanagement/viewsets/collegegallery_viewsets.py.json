{
    "sourceFile": "collegemanagement/viewsets/collegegallery_viewsets.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 46,
            "patches": [
                {
                    "date": 1737963405809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1737963411868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     serializer_class = CollegeGalleryListSerializers\n     # permission_classes = [collegemanagementPermission]\n     # authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n-    queryset = CollegeGallery.objects.all()\n+    queryset = CollegeGallery.objects.all().order_by(-id)\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n     ordering_fields = ['id']\n"
                },
                {
                    "date": 1737963429108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n     # }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n-        #return queryset.filter(user_id=self.request.user.id)\n+        return queryset\n \n     def get_serializer_class(self):\n         if self.action in ['create', 'update', 'partial_update']:\n             return CollegeGalleryWriteSerializers\n"
                },
                {
                    "date": 1737963916176,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     serializer_class = CollegeGalleryListSerializers\n     # permission_classes = [collegemanagementPermission]\n     # authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n-    queryset = CollegeGallery.objects.all().order_by(-id)\n+    queryset = CollegeGallery.objects.all().order_by('-id)\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n     ordering_fields = ['id']\n"
                },
                {
                    "date": 1738748436365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,11 +7,11 @@\n \n class collegegalleryViewsets(viewsets.ModelViewSet):\n     serializer_class = CollegeGalleryListSerializers\n     # permission_classes = [collegemanagementPermission]\n-    # authentication_classes = [JWTAuthentication]\n+    authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n-    queryset = CollegeGallery.objects.all().order_by('-id)\n+    queryset = CollegeGallery.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n     ordering_fields = ['id']\n"
                },
                {
                    "date": 1739264346602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n from ..utilities.importbase import *\n \n class collegegalleryViewsets(viewsets.ModelViewSet):\n     serializer_class = CollegeGalleryListSerializers\n-    # permission_classes = [collegemanagementPermission]\n+    permission_classes = [collegemanagementPermission]\n     authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = CollegeGallery.objects.all().order_by('-id')\n \n"
                },
                {
                    "date": 1739770728297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,11 +15,11 @@\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n     ordering_fields = ['id']\n \n-    # filterset_fields = {\n-    #     'id': ['exact'],\n-    # }\n+    filterset_fields = {\n+        'id': ['exact'],\n+    }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n         return queryset\n"
                },
                {
                    "date": 1739770736791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n     ordering_fields = ['id']\n \n     filterset_fields = {\n         'id': ['exact'],\n+        'college': ['exact'],\n     }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1739770747016,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n     pagination_class = MyPageNumberPagination\n     queryset = CollegeGallery.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = ['id']\n+    search_fields = ['id','college__name']\n     ordering_fields = ['id']\n \n     filterset_fields = {\n         'id': ['exact'],\n"
                },
                {
                    "date": 1739772663312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,5 +34,18 @@\n \n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n+    \n+    @action(detail=False, methods=['get'], name=\"latest_college_images\", url_path=\"latest-college-images\")\n+    def latest_college_images(self, request, *args, **kwargs):\n+        # Retrieve the latest 5 images for each college\n+        colleges = CollegeGallery.objects.values_list('college', flat=True).distinct()\n+        latest_images = []\n \n+        for college in colleges:\n+            images = CollegeGallery.objects.filter(college=college).order_by('-created_date')[:5]\n+            latest_images.extend(images)\n+\n+        serializer = self.get_serializer(latest_images, many=True)\n+        return Response(serializer.data)\n+\n"
                },
                {
                    "date": 1739772677754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,10 @@\n from django_filters.rest_framework import DjangoFilterBackend\n from ..models import CollegeGallery\n from ..serializers.collegegallery_serializers import CollegeGalleryListSerializers, CollegeGalleryRetrieveSerializers, CollegeGalleryWriteSerializers\n from ..utilities.importbase import *\n+from rest_framework.decorators import action\n+from rest_framework.response import Response\n \n class collegegalleryViewsets(viewsets.ModelViewSet):\n     serializer_class = CollegeGalleryListSerializers\n     permission_classes = [collegemanagementPermission]\n"
                },
                {
                    "date": 1739772686163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n     \n-    @action(detail=False, methods=['get'], name=\"latest_college_images\", url_path=\"latest-college-images\")\n+    @action(detail=False, methods=['get'], name=\"latest_college_images\", url_path=\"latest-images\")\n     def latest_college_images(self, request, *args, **kwargs):\n         # Retrieve the latest 5 images for each college\n         colleges = CollegeGallery.objects.values_list('college', flat=True).distinct()\n         latest_images = []\n"
                },
                {
                    "date": 1739772844099,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n     \n-    @action(detail=False, methods=['get'], name=\"latest_college_images\", url_path=\"latest-images\")\n+    @action(detail=False, methods=['get'], name=\"latest_college_images\", url_path=\"latest-images\",permiss)\n     def latest_college_images(self, request, *args, **kwargs):\n         # Retrieve the latest 5 images for each college\n         colleges = CollegeGallery.objects.values_list('college', flat=True).distinct()\n         latest_images = []\n"
                },
                {
                    "date": 1739772885969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n     \n-    @action(detail=False, methods=['get'], name=\"latest_college_images\", url_path=\"latest-images\",permiss)\n+    @action(detail=False, methods=['get'], name=\"latest_college_images\", url_path=\"latest-images\",permission_classes=[DynamicModelPermission])\n     def latest_college_images(self, request, *args, **kwargs):\n         # Retrieve the latest 5 images for each college\n         colleges = CollegeGallery.objects.values_list('college', flat=True).distinct()\n         latest_images = []\n"
                },
                {
                    "date": 1739772891166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n from ..serializers.collegegallery_serializers import CollegeGalleryListSerializers, CollegeGalleryRetrieveSerializers, CollegeGalleryWriteSerializers\n from ..utilities.importbase import *\n from rest_framework.decorators import action\n from rest_framework.response import Response\n+from \n \n class collegegalleryViewsets(viewsets.ModelViewSet):\n     serializer_class = CollegeGalleryListSerializers\n     permission_classes = [collegemanagementPermission]\n"
                },
                {
                    "date": 1739772908132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n from ..serializers.collegegallery_serializers import CollegeGalleryListSerializers, CollegeGalleryRetrieveSerializers, CollegeGalleryWriteSerializers\n from ..utilities.importbase import *\n from rest_framework.decorators import action\n from rest_framework.response import Response\n-from \n+from mainproj.permissions import DynamicModelPermission\n \n class collegegalleryViewsets(viewsets.ModelViewSet):\n     serializer_class = CollegeGalleryListSerializers\n     permission_classes = [collegemanagementPermission]\n"
                },
                {
                    "date": 1739772949881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n     \n-    @action(detail=False, methods=['get'], name=\"latest_college_images\", url_path=\"latest-images\",permission_classes=[DynamicModelPermission])\n+    @action(detail=False, methods=['get'], name=\"latest_college_images\", url_path=\"latest-images\",permission_classes=[AllowAny])\n     def latest_college_images(self, request, *args, **kwargs):\n         # Retrieve the latest 5 images for each college\n         colleges = CollegeGallery.objects.values_list('college', flat=True).distinct()\n         latest_images = []\n"
                },
                {
                    "date": 1739772955469,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n from ..utilities.importbase import *\n from rest_framework.decorators import action\n from rest_framework.response import Response\n from mainproj.permissions import DynamicModelPermission\n+fr\n \n class collegegalleryViewsets(viewsets.ModelViewSet):\n     serializer_class = CollegeGalleryListSerializers\n     permission_classes = [collegemanagementPermission]\n"
                },
                {
                    "date": 1739772961170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,55 @@\n+from rest_framework import viewsets\n+from rest_framework.filters import SearchFilter, OrderingFilter\n+from django_filters.rest_framework import DjangoFilterBackend\n+from ..models import CollegeGallery\n+from ..serializers.collegegallery_serializers import CollegeGalleryListSerializers, CollegeGalleryRetrieveSerializers, CollegeGalleryWriteSerializers\n+from ..utilities.importbase import *\n+from rest_framework.decorators import action\n+from rest_framework.response import Response\n+from mainproj.permissions import DynamicModelPermission\n+from rest_framework.permissions import AllowAny\n+\n+class collegegalleryViewsets(viewsets.ModelViewSet):\n+    serializer_class = CollegeGalleryListSerializers\n+    permission_classes = [collegemanagementPermission]\n+    authentication_classes = [JWTAuthentication]\n+    pagination_class = MyPageNumberPagination\n+    queryset = CollegeGallery.objects.all().order_by('-id')\n+\n+    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n+    search_fields = ['id','college__name']\n+    ordering_fields = ['id']\n+\n+    filterset_fields = {\n+        'id': ['exact'],\n+        'college': ['exact'],\n+    }\n+\n+    def get_queryset(self):\n+        queryset = super().get_queryset()\n+        return queryset\n+\n+    def get_serializer_class(self):\n+        if self.action in ['create', 'update', 'partial_update']:\n+            return CollegeGalleryWriteSerializers\n+        elif self.action == 'retrieve':\n+            return CollegeGalleryRetrieveSerializers\n+        return super().get_serializer_class()\n+\n+    # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n+    # def action_name(self, request, *args, **kwargs):\n+    #     return super().list(request, *args, **kwargs)\n+    \n+    @action(detail=False, methods=['get'], name=\"latest_college_images\", url_path=\"latest-images\",permission_classes=[AllowAny])\n+    def latest_college_images(self, request, *args, **kwargs):\n+        # Retrieve the latest 5 images for each college\n+        colleges = CollegeGallery.objects.values_list('college', flat=True).distinct()\n+        latest_images = []\n+\n+        for college in colleges:\n+            images = CollegeGallery.objects.filter(college=college).order_by('-created_date')[:5]\n+            latest_images.extend(images)\n+\n+        serializer = self.get_serializer(latest_images, many=True)\n+        return Response(serializer.data)\n+\n"
                },
                {
                    "date": 1739773264022,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,72 +39,16 @@\n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n     \n-    @action(detail=False, methods=['get'], name=\"latest_college_images\", url_path=\"latest-images\",permission_classes=[AllowAny])\n-    def latest_college_images(self, request, *args, **kwargs):\n-        # Retrieve the latest 5 images for each college\n-        colleges = CollegeGallery.objects.values_list('college', flat=True).distinct()\n-        latest_images = []\n+    @action(detail=False, methods=['get'], url_path=\"latest-images/(?P<college_slug>[^/]+)\")\n+    def latest_college_images(self, request, college_slug=None, *args, **kwargs):\n+        # Fetch the college using slug\n+        college = get_object_or_404(College, slug=college_slug)\n \n-        for college in colleges:\n-            images = CollegeGallery.objects.filter(college=college).order_by('-created_date')[:5]\n-            latest_images.extend(images)\n+        # Get the latest 5 images of the specified college\n+        images = CollegeGallery.objects.filter(college=college).order_by('-created_date')[:5]\n \n-        serializer = self.get_serializer(latest_images, many=True)\n+        # Serialize and return the data\n+        serializer = self.get_serializer(images, many=True)\n         return Response(serializer.data)\n \n-from rest_framework import viewsets\n-from rest_framework.filters import SearchFilter, OrderingFilter\n-from django_filters.rest_framework import DjangoFilterBackend\n-from ..models import CollegeGallery\n-from ..serializers.collegegallery_serializers import CollegeGalleryListSerializers, CollegeGalleryRetrieveSerializers, CollegeGalleryWriteSerializers\n-from ..utilities.importbase import *\n-from rest_framework.decorators import action\n-from rest_framework.response import Response\n-from mainproj.permissions import DynamicModelPermission\n-fr\n-\n-class collegegalleryViewsets(viewsets.ModelViewSet):\n-    serializer_class = CollegeGalleryListSerializers\n-    permission_classes = [collegemanagementPermission]\n-    authentication_classes = [JWTAuthentication]\n-    pagination_class = MyPageNumberPagination\n-    queryset = CollegeGallery.objects.all().order_by('-id')\n-\n-    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = ['id','college__name']\n-    ordering_fields = ['id']\n-\n-    filterset_fields = {\n-        'id': ['exact'],\n-        'college': ['exact'],\n-    }\n-\n-    def get_queryset(self):\n-        queryset = super().get_queryset()\n-        return queryset\n-\n-    def get_serializer_class(self):\n-        if self.action in ['create', 'update', 'partial_update']:\n-            return CollegeGalleryWriteSerializers\n-        elif self.action == 'retrieve':\n-            return CollegeGalleryRetrieveSerializers\n-        return super().get_serializer_class()\n-\n-    # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n-    # def action_name(self, request, *args, **kwargs):\n-    #     return super().list(request, *args, **kwargs)\n-    \n-    @action(detail=False, methods=['get'], name=\"latest_college_images\", url_path=\"latest-images\",permission_classes=[AllowAny])\n-    def latest_college_images(self, request, *args, **kwargs):\n-        # Retrieve the latest 5 images for each college\n-        colleges = CollegeGallery.objects.values_list('college', flat=True).distinct()\n-        latest_images = []\n-\n-        for college in colleges:\n-            images = CollegeGallery.objects.filter(college=college).order_by('-created_date')[:5]\n-            latest_images.extend(images)\n-\n-        serializer = self.get_serializer(latest_images, many=True)\n-        return Response(serializer.data)\n-\n"
                },
                {
                    "date": 1739773273386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n from rest_framework.decorators import action\n from rest_framework.response import Response\n from mainproj.permissions import DynamicModelPermission\n from rest_framework.permissions import AllowAny\n+from django.shortcuts import get_object_or_404\n \n class collegegalleryViewsets(viewsets.ModelViewSet):\n     serializer_class = CollegeGalleryListSerializers\n     permission_classes = [collegemanagementPermission]\n"
                },
                {
                    "date": 1739773284913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n from rest_framework import viewsets\n from rest_framework.filters import SearchFilter, OrderingFilter\n from django_filters.rest_framework import DjangoFilterBackend\n-from ..models import CollegeGallery\n+from ..models import CollegeGallery,Cp\n from ..serializers.collegegallery_serializers import CollegeGalleryListSerializers, CollegeGalleryRetrieveSerializers, CollegeGalleryWriteSerializers\n from ..utilities.importbase import *\n from rest_framework.decorators import action\n from rest_framework.response import Response\n"
                },
                {
                    "date": 1739773297038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n from rest_framework import viewsets\n from rest_framework.filters import SearchFilter, OrderingFilter\n from django_filters.rest_framework import DjangoFilterBackend\n-from ..models import CollegeGallery,Cp\n+from ..models import CollegeGallery,College\n from ..serializers.collegegallery_serializers import CollegeGalleryListSerializers, CollegeGalleryRetrieveSerializers, CollegeGalleryWriteSerializers\n from ..utilities.importbase import *\n from rest_framework.decorators import action\n from rest_framework.response import Response\n@@ -40,9 +40,9 @@\n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n     \n-    @action(detail=False, methods=['get'], url_path=\"latest-images/(?P<college_slug>[^/]+)\")\n+    @action(detail=False, methods=['get'],p url_path=\"latest-images/(?P<college_slug>[^/]+)\")\n     def latest_college_images(self, request, college_slug=None, *args, **kwargs):\n         # Fetch the college using slug\n         college = get_object_or_404(College, slug=college_slug)\n \n"
                },
                {
                    "date": 1739773302701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n     \n-    @action(detail=False, methods=['get'],p url_path=\"latest-images/(?P<college_slug>[^/]+)\")\n+    @action(detail=False, methods=['get'],permission_classes=[AllowAny], url_path=\"latest-images/(?P<college_slug>[^/]+)\")\n     def latest_college_images(self, request, college_slug=None, *args, **kwargs):\n         # Fetch the college using slug\n         college = get_object_or_404(College, slug=college_slug)\n \n"
                },
                {
                    "date": 1739773636993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,5 +51,17 @@\n \n         # Serialize and return the data\n         serializer = self.get_serializer(images, many=True)\n         return Response(serializer.data)\n+    \n+    action(detail=False, methods=['get'], url_path=\"latest-images/(?P<college_slug>[^/]+)\")\n+    def latest_college_images(self, request, college_slug=None, *args, **kwargs):\n+        # Fetch the college using slug\n+        college = get_object_or_404(College, slug=college_slug)\n \n+        # Get the latest 5 images of the specified college\n+        images = CollegeGallery.objects.filter(college=college).order_by('-created_date')[:5]\n+\n+        # Serialize and return the data as a flat array\n+        serializer = CollegeGallerySerializer(images, many=True)\n+        return Response(serializer.data)\n+\n"
                },
                {
                    "date": 1739773642093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n         # Serialize and return the data\n         serializer = self.get_serializer(images, many=True)\n         return Response(serializer.data)\n     \n-    action(detail=False, methods=['get'], url_path=\"latest-images/(?P<college_slug>[^/]+)\")\n+    action(detail=False, methods=['get'], url_path=\"latest/(?P<college_slug>[^/]+)\")\n     def latest_college_images(self, request, college_slug=None, *args, **kwargs):\n         # Fetch the college using slug\n         college = get_object_or_404(College, slug=college_slug)\n \n"
                },
                {
                    "date": 1739773654299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,7 +61,7 @@\n         # Get the latest 5 images of the specified college\n         images = CollegeGallery.objects.filter(college=college).order_by('-created_date')[:5]\n \n         # Serialize and return the data as a flat array\n-        serializer = CollegeGallerySerializer(images, many=True)\n+        serializer = CollegeReGallerySerializer(images, many=True)\n         return Response(serializer.data)\n \n"
                },
                {
                    "date": 1739773663933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,7 +61,7 @@\n         # Get the latest 5 images of the specified college\n         images = CollegeGallery.objects.filter(college=college).order_by('-created_date')[:5]\n \n         # Serialize and return the data as a flat array\n-        serializer = CollegeReGallerySerializer(images, many=True)\n+        serializer = CollegeGalleryRetrieveSerializers(images, many=True)\n         return Response(serializer.data)\n \n"
                },
                {
                    "date": 1739773826030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n         # Serialize and return the data\n         serializer = self.get_serializer(images, many=True)\n         return Response(serializer.data)\n     \n-    action(detail=False, methods=['get'], url_path=\"latest/(?P<college_slug>[^/]+)\")\n+    @action(detail=False, methods=['get'], url_path=\"latest/(?P<college_slug>[^/]+)\")\n     def latest_college_images(self, request, college_slug=None, *args, **kwargs):\n         # Fetch the college using slug\n         college = get_object_or_404(College, slug=college_slug)\n \n"
                },
                {
                    "date": 1739773849682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n         # Serialize and return the data\n         serializer = self.get_serializer(images, many=True)\n         return Response(serializer.data)\n     \n-    @action(detail=False, methods=['get'], url_path=\"latest/(?P<college_slug>[^/]+)\")\n+    @action(detail=False, methods=['get']permission_classes=[AllowAny], url_path=\"latest/(?P<college_slug>[^/]+)\")\n     def latest_college_images(self, request, college_slug=None, *args, **kwargs):\n         # Fetch the college using slug\n         college = get_object_or_404(College, slug=college_slug)\n \n"
                },
                {
                    "date": 1739774087808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n     \n-    @action(detail=False, methods=['get'],permission_classes=[AllowAny], url_path=\"latest-images/(?P<college_slug>[^/]+)\")\n+    @action(detail=False, methods=['get'],permission_classes=[AllowAny], url_path=\"latest/(?P<college_slug>[^/]+)\")\n     def latest_college_images(self, request, college_slug=None, *args, **kwargs):\n         # Fetch the college using slug\n         college = get_object_or_404(College, slug=college_slug)\n \n@@ -52,9 +52,9 @@\n         # Serialize and return the data\n         serializer = self.get_serializer(images, many=True)\n         return Response(serializer.data)\n     \n-    @action(detail=False, methods=['get']permission_classes=[AllowAny], url_path=\"latest/(?P<college_slug>[^/]+)\")\n+    @action(detail=False, methods=['get'],permission_classes=[AllowAny], url_path=\"latest/(?P<college_slug>[^/]+)\")\n     def latest_college_images(self, request, college_slug=None, *args, **kwargs):\n         # Fetch the college using slug\n         college = get_object_or_404(College, slug=college_slug)\n \n"
                },
                {
                    "date": 1739774121878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n     \n-    @action(detail=False, methods=['get'],permission_classes=[AllowAny], url_path=\"latest/(?P<college_slug>[^/]+)\")\n+    @action(detail=False, methods=['get'],permission_classes=[AllowAny], url_path=\"latest-images/(?P<college_slug>[^/]+)\")\n     def latest_college_images(self, request, college_slug=None, *args, **kwargs):\n         # Fetch the college using slug\n         college = get_object_or_404(College, slug=college_slug)\n \n@@ -52,9 +52,9 @@\n         # Serialize and return the data\n         serializer = self.get_serializer(images, many=True)\n         return Response(serializer.data)\n     \n-    @action(detail=False, methods=['get'],permission_classes=[AllowAny], url_path=\"latest/(?P<college_slug>[^/]+)\")\n+    @action(detail=False, methods=['get']permission_classes=[AllowAny], url_path=\"latest/(?P<college_slug>[^/]+)\")\n     def latest_college_images(self, request, college_slug=None, *args, **kwargs):\n         # Fetch the college using slug\n         college = get_object_or_404(College, slug=college_slug)\n \n"
                },
                {
                    "date": 1739786774861,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,9 @@\n \n     filterset_fields = {\n         'id': ['exact'],\n         'college': ['exact'],\n+        'college': ['exact'],\n     }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n@@ -52,16 +53,16 @@\n         # Serialize and return the data\n         serializer = self.get_serializer(images, many=True)\n         return Response(serializer.data)\n     \n-    @action(detail=False, methods=['get']permission_classes=[AllowAny], url_path=\"latest/(?P<college_slug>[^/]+)\")\n-    def latest_college_images(self, request, college_slug=None, *args, **kwargs):\n-        # Fetch the college using slug\n-        college = get_object_or_404(College, slug=college_slug)\n+    # @action(detail=False, methods=['get'],permission_classes=[AllowAny], url_path=\"latest/(?P<college_slug>[^/]+)\")\n+    # def latest_college_images(self, request, college_slug=None, *args, **kwargs):\n+    #     # Fetch the college using slug\n+    #     college = get_object_or_404(College, slug=college_slug)\n \n-        # Get the latest 5 images of the specified college\n-        images = CollegeGallery.objects.filter(college=college).order_by('-created_date')[:5]\n+    #     # Get the latest 5 images of the specified college\n+    #     images = CollegeGallery.objects.filter(college=college).order_by('-created_date')[:5]\n \n-        # Serialize and return the data as a flat array\n-        serializer = CollegeGalleryRetrieveSerializers(images, many=True)\n-        return Response(serializer.data)\n+    #     # Serialize and return the data as a flat array\n+    #     serializer = CollegeGalleryRetrieveSerializers(images, many=True)\n+    #     return Response(serializer.data)\n \n"
                },
                {
                    "date": 1739854070891,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,12 +23,14 @@\n \n     filterset_fields = {\n         'id': ['exact'],\n         'college': ['exact'],\n-        'college': ['exact'],\n+        'college__slug': ['exact'],\n     }\n \n     def get_queryset(self):\n+        \n+        \n         queryset = super().get_queryset()\n         return queryset\n \n     def get_serializer_class(self):\n"
                },
                {
                    "date": 1739854077498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,10 +27,8 @@\n         'college__slug': ['exact'],\n     }\n \n     def get_queryset(self):\n-        \n-        \n         queryset = super().get_queryset()\n         return queryset\n \n     def get_serializer_class(self):\n"
                },
                {
                    "date": 1741235948803,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,10 +11,10 @@\n from django.shortcuts import get_object_or_404\n \n class collegegalleryViewsets(viewsets.ModelViewSet):\n     serializer_class = CollegeGalleryListSerializers\n-    permission_classes = [collegemanagementPermission]\n-    authentication_classes = [JWTAuthentication]\n+    permission_classes = [DynamicModelPermission]\n+    # authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = CollegeGallery.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n@@ -53,16 +53,5 @@\n         # Serialize and return the data\n         serializer = self.get_serializer(images, many=True)\n         return Response(serializer.data)\n     \n-    # @action(detail=False, methods=['get'],permission_classes=[AllowAny], url_path=\"latest/(?P<college_slug>[^/]+)\")\n-    # def latest_college_images(self, request, college_slug=None, *args, **kwargs):\n-    #     # Fetch the college using slug\n-    #     college = get_object_or_404(College, slug=college_slug)\n-\n-    #     # Get the latest 5 images of the specified college\n-    #     images = CollegeGallery.objects.filter(college=college).order_by('-created_date')[:5]\n-\n-    #     # Serialize and return the data as a flat array\n-    #     serializer = CollegeGalleryRetrieveSerializers(images, many=True)\n-    #     return Response(serializer.data)\n-\n+    \n"
                },
                {
                    "date": 1741235955221,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,5 +53,16 @@\n         # Serialize and return the data\n         serializer = self.get_serializer(images, many=True)\n         return Response(serializer.data)\n     \n-    \n+    # @action(detail=False, methods=['get'],permission_classes=[AllowAny], url_path=\"latest/(?P<college_slug>[^/]+)\")\n+    # def latest_college_images(self, request, college_slug=None, *args, **kwargs):\n+    #     # Fetch the college using slug\n+    #     college = get_object_or_404(College, slug=college_slug)\n+\n+    #     # Get the latest 5 images of the specified college\n+    #     images = CollegeGallery.objects.filter(college=college).order_by('-created_date')[:5]\n+\n+    #     # Serialize and return the data as a flat array\n+    #     serializer = CollegeGalleryRetrieveSerializers(images, many=True)\n+    #     return Response(serializer.data)\n+\n"
                },
                {
                    "date": 1741235977172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,5 +64,29 @@\n \n     #     # Serialize and return the data as a flat array\n     #     serializer = CollegeGalleryRetrieveSerializers(images, many=True)\n     #     return Response(serializer.data)\n+    \n+    @action(detail=False, methods=['get'], name=\"latest_college_images\", url_path=\"latest-images\")\n+    def latest_college_images(self, request):\n+        college_id = request.query_params.get('college_id')\n \n+        if not college_id:\n+            return Response({\"error\": \"college_id is required\"}, status=400)\n+\n+        try:\n+            college = College.objects.get(id=college_id)\n+        except College.DoesNotExist:\n+            return Response({\"error\": \"College not found\"}, status=404)\n+\n+        # Fetch the latest 3 images for the given college\n+        latest_images = CollegeGallery.objects.filter(college=college).order_by('-created_at')[:3]\n+\n+        # Serialize data\n+        college_serializer = CollegeLSerializers(college)\n+        images_serializer = CollegeGalleryListSerializers(latest_images, many=True)\n+\n+        return Response({\n+            \"college\": college_serializer.data,\n+            \"latest_images\": images_serializer.data\n+        }, status=200)\n+\n"
                },
                {
                    "date": 1741235989672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n from rest_framework import viewsets\n from rest_framework.filters import SearchFilter, OrderingFilter\n from django_filters.rest_framework import DjangoFilterBackend\n from ..models import CollegeGallery,College\n+from \n from ..serializers.collegegallery_serializers import CollegeGalleryListSerializers, CollegeGalleryRetrieveSerializers, CollegeGalleryWriteSerializers\n from ..utilities.importbase import *\n from rest_framework.decorators import action\n from rest_framework.response import Response\n@@ -81,9 +82,9 @@\n         # Fetch the latest 3 images for the given college\n         latest_images = CollegeGallery.objects.filter(college=college).order_by('-created_at')[:3]\n \n         # Serialize data\n-        college_serializer = CollegeLSerializers(college)\n+        college_serializer = CollegeListSerializers(college)\n         images_serializer = CollegeGalleryListSerializers(latest_images, many=True)\n \n         return Response({\n             \"college\": college_serializer.data,\n"
                },
                {
                    "date": 1741236043603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n from rest_framework import viewsets\n from rest_framework.filters import SearchFilter, OrderingFilter\n from django_filters.rest_framework import DjangoFilterBackend\n from ..models import CollegeGallery,College\n-from \n from ..serializers.collegegallery_serializers import CollegeGalleryListSerializers, CollegeGalleryRetrieveSerializers, CollegeGalleryWriteSerializers\n from ..utilities.importbase import *\n from rest_framework.decorators import action\n from rest_framework.response import Response\n@@ -82,9 +81,9 @@\n         # Fetch the latest 3 images for the given college\n         latest_images = CollegeGallery.objects.filter(college=college).order_by('-created_at')[:3]\n \n         # Serialize data\n-        college_serializer = CollegeListSerializers(college)\n+        college_serializer = CollegeSerializers(college)\n         images_serializer = CollegeGalleryListSerializers(latest_images, many=True)\n \n         return Response({\n             \"college\": college_serializer.data,\n"
                },
                {
                    "date": 1741236049909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n from rest_framework import viewsets\n from rest_framework.filters import SearchFilter, OrderingFilter\n from django_filters.rest_framework import DjangoFilterBackend\n from ..models import CollegeGallery,College\n-from ..serializers.collegegallery_serializers import CollegeGalleryListSerializers, CollegeGalleryRetrieveSerializers, CollegeGalleryWriteSerializers\n+from ..serializers.collegegallery_serializers import CollegeGalleryListSerializers, CollegeGalleryRetrieveSerializers, CollegeGalleryWriteSerializers,Colle\n from ..utilities.importbase import *\n from rest_framework.decorators import action\n from rest_framework.response import Response\n from mainproj.permissions import DynamicModelPermission\n"
                },
                {
                    "date": 1741236074832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n from rest_framework import viewsets\n from rest_framework.filters import SearchFilter, OrderingFilter\n from django_filters.rest_framework import DjangoFilterBackend\n from ..models import CollegeGallery,College\n-from ..serializers.collegegallery_serializers import CollegeGalleryListSerializers, CollegeGalleryRetrieveSerializers, CollegeGalleryWriteSerializers,Colle\n+from ..serializers.collegegallery_serializers import CollegeGalleryListSerializers, CollegeGalleryRetrieveSerializers, CollegeGalleryWriteSerializers,CollegeSerializers\n from ..utilities.importbase import *\n from rest_framework.decorators import action\n from rest_framework.response import Response\n from mainproj.permissions import DynamicModelPermission\n@@ -78,9 +78,9 @@\n         except College.DoesNotExist:\n             return Response({\"error\": \"College not found\"}, status=404)\n \n         # Fetch the latest 3 images for the given college\n-        latest_images = CollegeGallery.objects.filter(college=college).order_by('-created_at')[:3]\n+        latest_images = CollegeGallery.objects.filter(college=college).order_by('-created_date')[:3]\n \n         # Serialize data\n         college_serializer = CollegeSerializers(college)\n         images_serializer = CollegeGalleryListSerializers(latest_images, many=True)\n"
                },
                {
                    "date": 1741236242431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,26 +67,24 @@\n     #     return Response(serializer.data)\n     \n     @action(detail=False, methods=['get'], name=\"latest_college_images\", url_path=\"latest-images\")\n     def latest_college_images(self, request):\n-        college_id = request.query_params.get('college_id')\n+        \"\"\"\n+        Returns the latest 3 images for each college.\n+        \"\"\"\n+        colleges = College.objects.all()\n+        response_data = []\n \n-        if not college_id:\n-            return Response({\"error\": \"college_id is required\"}, status=400)\n+        for college in colleges:\n+            latest_images = CollegeGallery.objects.filter(college=college).order_by('-created_date')[:3]\n+            \n+            if latest_images:\n+                college_serializer = CollegeSerializers(college)\n+                images_serializer = CollegeGalleryListSerializers(latest_images, many=True)\n \n-        try:\n-            college = College.objects.get(id=college_id)\n-        except College.DoesNotExist:\n-            return Response({\"error\": \"College not found\"}, status=404)\n+                response_data.append({\n+                    \"college\": college_serializer.data,\n+                    \"latest_images\": images_serializer.data\n+                })\n \n-        # Fetch the latest 3 images for the given college\n-        latest_images = CollegeGallery.objects.filter(college=college).order_by('-created_date')[:3]\n+        return Response(response_data, status=200)\n \n-        # Serialize data\n-        college_serializer = CollegeSerializers(college)\n-        images_serializer = CollegeGalleryListSerializers(latest_images, many=True)\n-\n-        return Response({\n-            \"college\": college_serializer.data,\n-            \"latest_images\": images_serializer.data\n-        }, status=200)\n-\n"
                },
                {
                    "date": 1741236374561,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,26 +65,35 @@\n     #     # Serialize and return the data as a flat array\n     #     serializer = CollegeGalleryRetrieveSerializers(images, many=True)\n     #     return Response(serializer.data)\n     \n-    @action(detail=False, methods=['get'], name=\"latest_college_images\", url_path=\"latest-images\")\n+   @action(detail=False, methods=['get'], name=\"latest_college_images\", url_path=\"latest-images\")\n     def latest_college_images(self, request):\n         \"\"\"\n-        Returns the latest 3 images for each college.\n+        Returns all colleges with their details and a single array of latest 3 images.\n         \"\"\"\n         colleges = College.objects.all()\n         response_data = []\n \n         for college in colleges:\n             latest_images = CollegeGallery.objects.filter(college=college).order_by('-created_date')[:3]\n-            \n+\n+            # Convert images into an array format (instead of individual objects)\n+            images_array = [image.image.url for image in latest_images]\n+\n             if latest_images:\n                 college_serializer = CollegeSerializers(college)\n-                images_serializer = CollegeGalleryListSerializers(latest_images, many=True)\n \n                 response_data.append({\n-                    \"college\": college_serializer.data,\n-                    \"latest_images\": images_serializer.data\n+                    \"college\": {\n+                        \"id\": college.id,\n+                        \"slug\": college.slug,\n+                        \"name\": college.name,\n+                        \"dp_image\": college.dp_image.url if college.dp_image else None,\n+                        \"address\": college.address,\n+                        \"latest_images\": images_array  # Return an array of image URLs\n+                    }\n                 })\n \n         return Response(response_data, status=200)\n \n+\n"
                },
                {
                    "date": 1741236542775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,21 +65,21 @@\n     #     # Serialize and return the data as a flat array\n     #     serializer = CollegeGalleryRetrieveSerializers(images, many=True)\n     #     return Response(serializer.data)\n     \n-   @action(detail=False, methods=['get'], name=\"latest_college_images\", url_path=\"latest-images\")\n+    @action(detail=False, methods=['get'], name=\"latest_college_images\", url_path=\"latest-images\")\n     def latest_college_images(self, request):\n         \"\"\"\n-        Returns all colleges with their details and a single array of latest 3 images.\n+        Returns all colleges with their details and a single array of latest 3 image URLs.\n         \"\"\"\n         colleges = College.objects.all()\n         response_data = []\n \n         for college in colleges:\n             latest_images = CollegeGallery.objects.filter(college=college).order_by('-created_date')[:3]\n \n-            # Convert images into an array format (instead of individual objects)\n-            images_array = [image.image.url for image in latest_images]\n+            # Convert images into an array of full URLs\n+            images_array = [request.build_absolute_uri(image.image.url) for image in latest_images]\n \n             if latest_images:\n                 college_serializer = CollegeSerializers(college)\n \n@@ -87,11 +87,11 @@\n                     \"college\": {\n                         \"id\": college.id,\n                         \"slug\": college.slug,\n                         \"name\": college.name,\n-                        \"dp_image\": college.dp_image.url if college.dp_image else None,\n+                        \"dp_image\": request.build_absolute_uri(college.dp_image.url) if college.dp_image else None,\n                         \"address\": college.address,\n-                        \"latest_images\": images_array  # Return an array of image URLs\n+                        \"latest_images\": images_array  # Full URLs of latest images\n                     }\n                 })\n \n         return Response(response_data, status=200)\n"
                },
                {
                    "date": 1741236919016,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n                         \"slug\": college.slug,\n                         \"name\": college.name,\n                         \"dp_image\": request.build_absolute_uri(college.dp_image.url) if college.dp_image else None,\n                         \"address\": college.address,\n-                        \"latest_images\": images_array  # Full URLs of latest images\n+                        \"\": images_array  # Full URLs of latest images\n                     }\n                 })\n \n         return Response(response_data, status=200)\n"
                },
                {
                    "date": 1741236924270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n                         \"slug\": college.slug,\n                         \"name\": college.name,\n                         \"dp_image\": request.build_absolute_uri(college.dp_image.url) if college.dp_image else None,\n                         \"address\": college.address,\n-                        \"\": images_array  # Full URLs of latest images\n+                        \"swiper-\": images_array  # Full URLs of latest images\n                     }\n                 })\n \n         return Response(response_data, status=200)\n"
                }
            ],
            "date": 1737963405809,
            "name": "Commit-0",
            "content": "from rest_framework import viewsets\nfrom rest_framework.filters import SearchFilter, OrderingFilter\nfrom django_filters.rest_framework import DjangoFilterBackend\nfrom ..models import CollegeGallery\nfrom ..serializers.collegegallery_serializers import CollegeGalleryListSerializers, CollegeGalleryRetrieveSerializers, CollegeGalleryWriteSerializers\nfrom ..utilities.importbase import *\n\nclass collegegalleryViewsets(viewsets.ModelViewSet):\n    serializer_class = CollegeGalleryListSerializers\n    # permission_classes = [collegemanagementPermission]\n    # authentication_classes = [JWTAuthentication]\n    pagination_class = MyPageNumberPagination\n    queryset = CollegeGallery.objects.all()\n\n    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n    search_fields = ['id']\n    ordering_fields = ['id']\n\n    # filterset_fields = {\n    #     'id': ['exact'],\n    # }\n\n    def get_queryset(self):\n        queryset = super().get_queryset()\n        #return queryset.filter(user_id=self.request.user.id)\n\n    def get_serializer_class(self):\n        if self.action in ['create', 'update', 'partial_update']:\n            return CollegeGalleryWriteSerializers\n        elif self.action == 'retrieve':\n            return CollegeGalleryRetrieveSerializers\n        return super().get_serializer_class()\n\n    # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n    # def action_name(self, request, *args, **kwargs):\n    #     return super().list(request, *args, **kwargs)\n\n"
        }
    ]
}