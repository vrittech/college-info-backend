{
    "sourceFile": "collegemanagement/viewsets/collegefaqs_viewsets.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1737963415881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1737963932793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     serializer_class = CollegeFaqsListSerializers\n     # permission_classes = [collegemanagementPermission]\n     # authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n-    queryset = CollegeFaqs.objects.all()\n+    queryset = CollegeFaqs.objects.all().order_by\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n     ordering_fields = ['id']\n@@ -21,9 +21,9 @@\n     # }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n-        #return queryset.filter(user_id=self.request.user.id)\n+        return queryset\n \n     def get_serializer_class(self):\n         if self.action in ['create', 'update', 'partial_update']:\n             return CollegeFaqsWriteSerializers\n"
                },
                {
                    "date": 1738748432696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,37 @@\n+from rest_framework import viewsets\n+from rest_framework.filters import SearchFilter, OrderingFilter\n+from django_filters.rest_framework import DjangoFilterBackend\n+from ..models import CollegeFaqs\n+from ..serializers.collegefaqs_serializers import CollegeFaqsListSerializers, CollegeFaqsRetrieveSerializers, CollegeFaqsWriteSerializers\n+from ..utilities.importbase import *\n+\n+class collegefaqsViewsets(viewsets.ModelViewSet):\n+    serializer_class = CollegeFaqsListSerializers\n+    # permission_classes = [collegemanagementPermission]\n+    authentication_classes = [JWTAuthentication]\n+    pagination_class = MyPageNumberPagination\n+    queryset = CollegeFaqs.objects.all().order_by('-id')\n+\n+    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n+    search_fields = ['id']\n+    ordering_fields = ['id']\n+\n+    # filterset_fields = {\n+    #     'id': ['exact'],\n+    # }\n+\n+    def get_queryset(self):\n+        queryset = super().get_queryset()\n+        return queryset\n+\n+    def get_serializer_class(self):\n+        if self.action in ['create', 'update', 'partial_update']:\n+            return CollegeFaqsWriteSerializers\n+        elif self.action == 'retrieve':\n+            return CollegeFaqsRetrieveSerializers\n+        return super().get_serializer_class()\n+\n+    # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n+    # def action_name(self, request, *args, **kwargs):\n+    #     return super().list(request, *args, **kwargs)\n+\n"
                },
                {
                    "date": 1739264343184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n from ..utilities.importbase import *\n \n class collegefaqsViewsets(viewsets.ModelViewSet):\n     serializer_class = CollegeFaqsListSerializers\n-    # permission_classes = [collegemanagementPermission]\n+    permission_classes = [collegemanagementPermission]\n     authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = CollegeFaqs.objects.all().order_by('-id')\n \n@@ -34,41 +34,4 @@\n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n \n-from rest_framework import viewsets\n-from rest_framework.filters import SearchFilter, OrderingFilter\n-from django_filters.rest_framework import DjangoFilterBackend\n-from ..models import CollegeFaqs\n-from ..serializers.collegefaqs_serializers import CollegeFaqsListSerializers, CollegeFaqsRetrieveSerializers, CollegeFaqsWriteSerializers\n-from ..utilities.importbase import *\n-\n-class collegefaqsViewsets(viewsets.ModelViewSet):\n-    serializer_class = CollegeFaqsListSerializers\n-    # permission_classes = [collegemanagementPermission]\n-    # authentication_classes = [JWTAuthentication]\n-    pagination_class = MyPageNumberPagination\n-    queryset = CollegeFaqs.objects.all().order_by\n-\n-    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = ['id']\n-    ordering_fields = ['id']\n-\n-    # filterset_fields = {\n-    #     'id': ['exact'],\n-    # }\n-\n-    def get_queryset(self):\n-        queryset = super().get_queryset()\n-        return queryset\n-\n-    def get_serializer_class(self):\n-        if self.action in ['create', 'update', 'partial_update']:\n-            return CollegeFaqsWriteSerializers\n-        elif self.action == 'retrieve':\n-            return CollegeFaqsRetrieveSerializers\n-        return super().get_serializer_class()\n-\n-    # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n-    # def action_name(self, request, *args, **kwargs):\n-    #     return super().list(request, *args, **kwargs)\n-\n"
                }
            ],
            "date": 1737963415881,
            "name": "Commit-0",
            "content": "from rest_framework import viewsets\nfrom rest_framework.filters import SearchFilter, OrderingFilter\nfrom django_filters.rest_framework import DjangoFilterBackend\nfrom ..models import CollegeFaqs\nfrom ..serializers.collegefaqs_serializers import CollegeFaqsListSerializers, CollegeFaqsRetrieveSerializers, CollegeFaqsWriteSerializers\nfrom ..utilities.importbase import *\n\nclass collegefaqsViewsets(viewsets.ModelViewSet):\n    serializer_class = CollegeFaqsListSerializers\n    # permission_classes = [collegemanagementPermission]\n    # authentication_classes = [JWTAuthentication]\n    pagination_class = MyPageNumberPagination\n    queryset = CollegeFaqs.objects.all()\n\n    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n    search_fields = ['id']\n    ordering_fields = ['id']\n\n    # filterset_fields = {\n    #     'id': ['exact'],\n    # }\n\n    def get_queryset(self):\n        queryset = super().get_queryset()\n        #return queryset.filter(user_id=self.request.user.id)\n\n    def get_serializer_class(self):\n        if self.action in ['create', 'update', 'partial_update']:\n            return CollegeFaqsWriteSerializers\n        elif self.action == 'retrieve':\n            return CollegeFaqsRetrieveSerializers\n        return super().get_serializer_class()\n\n    # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n    # def action_name(self, request, *args, **kwargs):\n    #     return super().list(request, *args, **kwargs)\n\n"
        }
    ]
}