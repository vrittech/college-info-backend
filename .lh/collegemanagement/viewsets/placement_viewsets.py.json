{
    "sourceFile": "collegemanagement/viewsets/placement_viewsets.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1733643685640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1733643685640,
            "name": "Commit-0",
            "content": "# from rest_framework import viewsets\n# from rest_framework.filters import SearchFilter, OrderingFilter\n# from django_filters.rest_framework import DjangoFilterBackend\n# from ..models import Placement\n# from ..serializers.placement_serializers import PlacementListSerializers, PlacementRetrieveSerializers, PlacementWriteSerializers\n# from ..utilities.importbase import *\n\n# class placementViewsets(viewsets.ModelViewSet):\n#     serializer_class = PlacementListSerializers\n#     # permission_classes = [collegemanagementPermission]\n#     # authentication_classes = [JWTAuthentication]\n#     #pagination_class = MyPageNumberPagination\n#     queryset = Placement.objects.all()\n\n#     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n#     search_fields = ['id']\n#     ordering_fields = ['id']\n\n#     # filterset_fields = {\n#     #     'id': ['exact'],\n#     # }\n\n#     def get_queryset(self):\n#         queryset = super().get_queryset()\n#         #return queryset.filter(user_id=self.request.user.id)\n\n#     def get_serializer_class(self):\n#         if self.action in ['create', 'update', 'partial_update']:\n#             return PlacementWriteSerializers\n#         elif self.action == 'retrieve':\n#             return PlacementRetrieveSerializers\n#         return super().get_serializer_class()\n\n#     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n#     # def action_name(self, request, *args, **kwargs):\n#     #     return super().list(request, *args, **kwargs)\n\n"
        }
    ]
}