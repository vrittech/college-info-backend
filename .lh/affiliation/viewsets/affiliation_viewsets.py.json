{
    "sourceFile": "affiliation/viewsets/affiliation_viewsets.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 54,
            "patches": [
                {
                    "date": 1733481192866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1733481199836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     serializer_class = AffiliationListSerializers\n     # permission_classes = [affiliationPermission]\n     # authentication_classes = [JWTAuthentication]\n     #pagination_class = MyPageNumberPagination\n-    queryset = Affiliation.objects.all()\n+    queryset = Affiliation.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n     ordering_fields = ['id']\n"
                },
                {
                    "date": 1733719301021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \n     # filterset_fields = {\n     #     'id': ['exact'],\n     # }\n-\n+('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n     def get_queryset(self):\n         queryset = super().get_queryset()\n         return queryset\n \n"
                },
                {
                    "date": 1733719312982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,12 +15,12 @@\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n     ordering_fields = ['id']\n \n-    # filterset_fields = {\n-    #     'id': ['exact'],\n-    # }\n-('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n+    filterset_fields = {\n+        'id': ['exact'],\n+    }\n+# ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n     def get_queryset(self):\n         queryset = super().get_queryset()\n         return queryset\n \n"
                },
                {
                    "date": 1733719321655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,16 @@\n     ordering_fields = ['id']\n \n     filterset_fields = {\n         'id': ['exact'],\n+        'id': ['exact'],\n+        'id': ['exact'],\n+        'id': ['exact'],\n+        'id': ['exact'],\n+        'id': ['exact'],\n+        'id': ['exact'],\n+        'id': ['exact'],\n+        'id': ['exact'],\n     }\n # ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1733719329469,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,16 +17,16 @@\n     ordering_fields = ['id']\n \n     filterset_fields = {\n         'id': ['exact'],\n+        'name': ['exact'],\n+        'established_year': ['exact'],\n         'id': ['exact'],\n         'id': ['exact'],\n         'id': ['exact'],\n         'id': ['exact'],\n         'id': ['exact'],\n         'id': ['exact'],\n-        'id': ['exact'],\n-        'id': ['exact'],\n     }\n # ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1733719337090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,14 +19,14 @@\n     filterset_fields = {\n         'id': ['exact'],\n         'name': ['exact'],\n         'established_year': ['exact'],\n+        'address': ['exact'],\n         'id': ['exact'],\n         'id': ['exact'],\n         'id': ['exact'],\n         'id': ['exact'],\n         'id': ['exact'],\n-        'id': ['exact'],\n     }\n # ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1733719344312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,13 +20,13 @@\n         'id': ['exact'],\n         'name': ['exact'],\n         'established_year': ['exact'],\n         'address': ['exact'],\n+        'district': ['exact'],\n         'id': ['exact'],\n         'id': ['exact'],\n         'id': ['exact'],\n         'id': ['exact'],\n-        'id': ['exact'],\n     }\n # ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1733719349857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,12 +21,12 @@\n         'name': ['exact'],\n         'established_year': ['exact'],\n         'address': ['exact'],\n         'district': ['exact'],\n+        'created_date': ['exact'],\n         'id': ['exact'],\n         'id': ['exact'],\n         'id': ['exact'],\n-        'id': ['exact'],\n     }\n # ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1733719355625,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,45 @@\n+from rest_framework import viewsets\n+from rest_framework.filters import SearchFilter, OrderingFilter\n+from django_filters.rest_framework import DjangoFilterBackend\n+from ..models import Affiliation\n+from ..serializers.affiliation_serializers import AffiliationListSerializers, AffiliationRetrieveSerializers, AffiliationWriteSerializers\n+from ..utilities.importbase import *\n+\n+class affiliationViewsets(viewsets.ModelViewSet):\n+    serializer_class = AffiliationListSerializers\n+    # permission_classes = [affiliationPermission]\n+    # authentication_classes = [JWTAuthentication]\n+    #pagination_class = MyPageNumberPagination\n+    queryset = Affiliation.objects.all().order_by('-id')\n+\n+    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n+    search_fields = ['id']\n+    ordering_fields = ['id']\n+\n+    filterset_fields = {\n+        'id': ['exact'],\n+        'name': ['exact'],\n+        'established_year': ['exact'],\n+        'address': ['exact'],\n+        'district': ['exact'],\n+        'created_date': ['exact'],\n+        'updated_date': ['exact'],\n+        'id': ['exact'],\n+        'id': ['exact'],\n+    }\n+# ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n+    def get_queryset(self):\n+        queryset = super().get_queryset()\n+        return queryset\n+\n+    def get_serializer_class(self):\n+        if self.action in ['create', 'update', 'partial_update']:\n+            return AffiliationWriteSerializers\n+        elif self.action == 'retrieve':\n+            return AffiliationRetrieveSerializers\n+        return super().get_serializer_class()\n+\n+    # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n+    # def action_name(self, request, *args, **kwargs):\n+    #     return super().list(request, *args, **kwargs)\n+\n"
                },
                {
                    "date": 1733719364586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,11 +22,9 @@\n         'established_year': ['exact'],\n         'address': ['exact'],\n         'district': ['exact'],\n         'created_date': ['exact'],\n-        'updated_date': ['exact'],\n-        'id': ['exact'],\n-        'id': ['exact'],\n+        'updated_date': ['exact',],\n     }\n # ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n     def get_queryset(self):\n         queryset = super().get_queryset()\n@@ -42,49 +40,4 @@\n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n \n-from rest_framework import viewsets\n-from rest_framework.filters import SearchFilter, OrderingFilter\n-from django_filters.rest_framework import DjangoFilterBackend\n-from ..models import Affiliation\n-from ..serializers.affiliation_serializers import AffiliationListSerializers, AffiliationRetrieveSerializers, AffiliationWriteSerializers\n-from ..utilities.importbase import *\n-\n-class affiliationViewsets(viewsets.ModelViewSet):\n-    serializer_class = AffiliationListSerializers\n-    # permission_classes = [affiliationPermission]\n-    # authentication_classes = [JWTAuthentication]\n-    #pagination_class = MyPageNumberPagination\n-    queryset = Affiliation.objects.all().order_by('-id')\n-\n-    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = ['id']\n-    ordering_fields = ['id']\n-\n-    filterset_fields = {\n-        'id': ['exact'],\n-        'name': ['exact'],\n-        'established_year': ['exact'],\n-        'address': ['exact'],\n-        'district': ['exact'],\n-        'created_date': ['exact'],\n-        'id': ['exact'],\n-        'id': ['exact'],\n-        'id': ['exact'],\n-    }\n-# ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n-    def get_queryset(self):\n-        queryset = super().get_queryset()\n-        return queryset\n-\n-    def get_serializer_class(self):\n-        if self.action in ['create', 'update', 'partial_update']:\n-            return AffiliationWriteSerializers\n-        elif self.action == 'retrieve':\n-            return AffiliationRetrieveSerializers\n-        return super().get_serializer_class()\n-\n-    # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n-    # def action_name(self, request, *args, **kwargs):\n-    #     return super().list(request, *args, **kwargs)\n-\n"
                },
                {
                    "date": 1733719372779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,10 +21,10 @@\n         'name': ['exact'],\n         'established_year': ['exact'],\n         'address': ['exact'],\n         'district': ['exact'],\n-        'created_date': ['exact'],\n-        'updated_date': ['exact',],\n+        'created_date': ['exact',   'gte','lte'],\n+        'updated_date': ['exact','gte','lte'],\n     }\n # ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1733719381532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,12 +18,12 @@\n \n     filterset_fields = {\n         'id': ['exact'],\n         'name': ['exact'],\n-        'established_year': ['exact'],\n+        'established_year': ['exact',],\n         'address': ['exact'],\n         'district': ['exact'],\n-        'created_date': ['exact',   'gte','lte'],\n+        'created_date': ['exact','gte','lte'],\n         'updated_date': ['exact','gte','lte'],\n     }\n # ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n     def get_queryset(self):\n"
                },
                {
                    "date": 1733719387365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,8 @@\n \n     filterset_fields = {\n         'id': ['exact'],\n         'name': ['exact'],\n-        'established_year': ['exact',],\n         'address': ['exact'],\n         'district': ['exact'],\n         'created_date': ['exact','gte','lte'],\n         'updated_date': ['exact','gte','lte'],\n"
                },
                {
                    "date": 1733719394042,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,42 @@\n+from rest_framework import viewsets\n+from rest_framework.filters import SearchFilter, OrderingFilter\n+from django_filters.rest_framework import DjangoFilterBackend\n+from ..models import Affiliation\n+from ..serializers.affiliation_serializers import AffiliationListSerializers, AffiliationRetrieveSerializers, AffiliationWriteSerializers\n+from ..utilities.importbase import *\n+\n+class affiliationViewsets(viewsets.ModelViewSet):\n+    serializer_class = AffiliationListSerializers\n+    # permission_classes = [affiliationPermission]\n+    # authentication_classes = [JWTAuthentication]\n+    #pagination_class = MyPageNumberPagination\n+    queryset = Affiliation.objects.all().order_by('-id')\n+\n+    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n+    search_fields = ['id','name']\n+    ordering_fields = ['id']\n+\n+    filterset_fields = {\n+        'id': ['exact'],\n+        'name': ['exact'],\n+        'address': ['exact'],\n+        'district': ['exact'],\n+        'created_date': ['exact','gte','lte'],\n+        'updated_date': ['exact','gte','lte'],\n+    }\n+# ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n+    def get_queryset(self):\n+        queryset = super().get_queryset()\n+        return queryset\n+\n+    def get_serializer_class(self):\n+        if self.action in ['create', 'update', 'partial_update']:\n+            return AffiliationWriteSerializers\n+        elif self.action == 'retrieve':\n+            return AffiliationRetrieveSerializers\n+        return super().get_serializer_class()\n+\n+    # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n+    # def action_name(self, request, *args, **kwargs):\n+    #     return super().list(request, *args, **kwargs)\n+\n"
                },
                {
                    "date": 1733719401854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n     #pagination_class = MyPageNumberPagination\n     queryset = Affiliation.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = ['id','name']\n+    search_fields = ['id','name',distr]\n     ordering_fields = ['id']\n \n     filterset_fields = {\n         'id': ['exact'],\n@@ -39,46 +39,4 @@\n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n \n-from rest_framework import viewsets\n-from rest_framework.filters import SearchFilter, OrderingFilter\n-from django_filters.rest_framework import DjangoFilterBackend\n-from ..models import Affiliation\n-from ..serializers.affiliation_serializers import AffiliationListSerializers, AffiliationRetrieveSerializers, AffiliationWriteSerializers\n-from ..utilities.importbase import *\n-\n-class affiliationViewsets(viewsets.ModelViewSet):\n-    serializer_class = AffiliationListSerializers\n-    # permission_classes = [affiliationPermission]\n-    # authentication_classes = [JWTAuthentication]\n-    #pagination_class = MyPageNumberPagination\n-    queryset = Affiliation.objects.all().order_by('-id')\n-\n-    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = ['id']\n-    ordering_fields = ['id']\n-\n-    filterset_fields = {\n-        'id': ['exact'],\n-        'name': ['exact'],\n-        'address': ['exact'],\n-        'district': ['exact'],\n-        'created_date': ['exact','gte','lte'],\n-        'updated_date': ['exact','gte','lte'],\n-    }\n-# ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n-    def get_queryset(self):\n-        queryset = super().get_queryset()\n-        return queryset\n-\n-    def get_serializer_class(self):\n-        if self.action in ['create', 'update', 'partial_update']:\n-            return AffiliationWriteSerializers\n-        elif self.action == 'retrieve':\n-            return AffiliationRetrieveSerializers\n-        return super().get_serializer_class()\n-\n-    # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n-    # def action_name(self, request, *args, **kwargs):\n-    #     return super().list(request, *args, **kwargs)\n-\n"
                },
                {
                    "date": 1733719408982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n     #pagination_class = MyPageNumberPagination\n     queryset = Affiliation.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = ['id','name',distr]\n+    search_fields = ['id','name','district]\n     ordering_fields = ['id']\n \n     filterset_fields = {\n         'id': ['exact'],\n"
                },
                {
                    "date": 1733719415394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n     #pagination_class = MyPageNumberPagination\n     queryset = Affiliation.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = ['id','name','district]\n+    search_fields = ['id','name','district','address']\n     ordering_fields = ['id']\n \n     filterset_fields = {\n         'id': ['exact'],\n"
                },
                {
                    "date": 1733719420714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n     queryset = Affiliation.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id','name','district','address']\n-    ordering_fields = ['id']\n+    ordering_fields = ['id','name','district','address']\n \n     filterset_fields = {\n         'id': ['exact'],\n         'name': ['exact'],\n"
                },
                {
                    "date": 1733719513776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n     queryset = Affiliation.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id','name','district','address']\n-    ordering_fields = ['id','name','district','address']\n+    ordering_fields = ['id','name','district','address','created_date','updated_date']\n \n     filterset_fields = {\n         'id': ['exact'],\n         'name': ['exact'],\n"
                },
                {
                    "date": 1733726522798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,9 @@\n         'id': ['exact'],\n         'name': ['exact'],\n         'address': ['exact'],\n         'district': ['exact'],\n+        'district': ['exact'],\n         'created_date': ['exact','gte','lte'],\n         'updated_date': ['exact','gte','lte'],\n     }\n # ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n"
                },
                {
                    "date": 1733726532013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n         'id': ['exact'],\n         'name': ['exact'],\n         'address': ['exact'],\n         'district': ['exact'],\n-        'district': ['exact'],\n+        'university_type': ['exact'],\n         'created_date': ['exact','gte','lte'],\n         'updated_date': ['exact','gte','lte'],\n     }\n # ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n"
                },
                {
                    "date": 1733726541554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,9 @@\n         'name': ['exact'],\n         'address': ['exact'],\n         'district': ['exact'],\n         'university_type': ['exact'],\n+        'university_type': ['exact'],\n         'created_date': ['exact','gte','lte'],\n         'updated_date': ['exact','gte','lte'],\n     }\n # ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n"
                },
                {
                    "date": 1733726817318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n         'address': ['exact'],\n         'district': ['exact'],\n         'university_type': ['exact'],\n         'university_type': ['exact'],\n+        'level': ['exact'],\n         'created_date': ['exact','gte','lte'],\n         'updated_date': ['exact','gte','lte'],\n     }\n # ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n"
                },
                {
                    "date": 1733726846667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,11 +21,12 @@\n         'name': ['exact'],\n         'address': ['exact'],\n         'district': ['exact'],\n         'university_type': ['exact'],\n-        'university_type': ['exact'],\n+        'certification': ['exact'],\n         'level': ['exact'],\n         'created_date': ['exact','gte','lte'],\n+        'created_date': ['exact','gte','lte'],\n         'updated_date': ['exact','gte','lte'],\n     }\n # ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n     def get_queryset(self):\n"
                },
                {
                    "date": 1733726866176,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n         'university_type': ['exact'],\n         'certification': ['exact'],\n         'level': ['exact'],\n         'created_date': ['exact','gte','lte'],\n-        'created_date': ['exact','gte','lte'],\n+        'established_year': ['exact','gte','lte'],\n         'updated_date': ['exact','gte','lte'],\n     }\n # ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n     def get_queryset(self):\n"
                },
                {
                    "date": 1733726875945,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n class affiliationViewsets(viewsets.ModelViewSet):\n     serializer_class = AffiliationListSerializers\n     # permission_classes = [affiliationPermission]\n     # authentication_classes = [JWTAuthentication]\n-    #pagination_class = MyPageNumberPagination\n+    pagination_class = MyPageNumberPagination\n     queryset = Affiliation.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id','name','district','address']\n"
                },
                {
                    "date": 1733730249316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,8 @@\n         'address': ['exact'],\n         'district': ['exact'],\n         'university_type': ['exact'],\n         'certification': ['exact'],\n-        'level': ['exact'],\n         'created_date': ['exact','gte','lte'],\n         'established_year': ['exact','gte','lte'],\n         'updated_date': ['exact','gte','lte'],\n     }\n"
                },
                {
                    "date": 1738211776383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,11 @@\n     # permission_classes = [affiliationPermission]\n     # authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = Affiliation.objects.all().order_by('-id')\n+    lookup_field = \"slug\"\n \n+\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id','name','district','address']\n     ordering_fields = ['id','name','district','address','created_date','updated_date']\n \n"
                },
                {
                    "date": 1738748411012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,47 @@\n+from rest_framework import viewsets\n+from rest_framework.filters import SearchFilter, OrderingFilter\n+from django_filters.rest_framework import DjangoFilterBackend\n+from ..models import Affiliation\n+from ..serializers.affiliation_serializers import AffiliationListSerializers, AffiliationRetrieveSerializers, AffiliationWriteSerializers\n+from ..utilities.importbase import *\n+\n+class affiliationViewsets(viewsets.ModelViewSet):\n+    serializer_class = AffiliationListSerializers\n+    # permission_classes = [affiliationPermission]\n+    authentication_classes = [JWTAuthentication]\n+    pagination_class = MyPageNumberPagination\n+    queryset = Affiliation.objects.all().order_by('-id')\n+    lookup_field = \"slug\"\n+\n+\n+    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n+    search_fields = ['id','name','district','address']\n+    ordering_fields = ['id','name','district','address','created_date','updated_date']\n+\n+    filterset_fields = {\n+        'id': ['exact'],\n+        'name': ['exact'],\n+        'address': ['exact'],\n+        'district': ['exact'],\n+        'university_type': ['exact'],\n+        'certification': ['exact'],\n+        'created_date': ['exact','gte','lte'],\n+        'established_year': ['exact','gte','lte'],\n+        'updated_date': ['exact','gte','lte'],\n+    }\n+# ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n+    def get_queryset(self):\n+        queryset = super().get_queryset()\n+        return queryset\n+\n+    def get_serializer_class(self):\n+        if self.action in ['create', 'update', 'partial_update']:\n+            return AffiliationWriteSerializers\n+        elif self.action == 'retrieve':\n+            return AffiliationRetrieveSerializers\n+        return super().get_serializer_class()\n+\n+    # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n+    # def action_name(self, request, *args, **kwargs):\n+    #     return super().list(request, *args, **kwargs)\n+\n"
                },
                {
                    "date": 1739264279563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n from ..utilities.importbase import *\n \n class affiliationViewsets(viewsets.ModelViewSet):\n     serializer_class = AffiliationListSerializers\n-    # permission_classes = [affiliationPermission]\n+    permission_classes = [affiliationPermission]\n     authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = Affiliation.objects.all().order_by('-id')\n     lookup_field = \"slug\"\n@@ -44,51 +44,4 @@\n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n \n-from rest_framework import viewsets\n-from rest_framework.filters import SearchFilter, OrderingFilter\n-from django_filters.rest_framework import DjangoFilterBackend\n-from ..models import Affiliation\n-from ..serializers.affiliation_serializers import AffiliationListSerializers, AffiliationRetrieveSerializers, AffiliationWriteSerializers\n-from ..utilities.importbase import *\n-\n-class affiliationViewsets(viewsets.ModelViewSet):\n-    serializer_class = AffiliationListSerializers\n-    # permission_classes = [affiliationPermission]\n-    # authentication_classes = [JWTAuthentication]\n-    pagination_class = MyPageNumberPagination\n-    queryset = Affiliation.objects.all().order_by('-id')\n-    lookup_field = \"slug\"\n-\n-\n-    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = ['id','name','district','address']\n-    ordering_fields = ['id','name','district','address','created_date','updated_date']\n-\n-    filterset_fields = {\n-        'id': ['exact'],\n-        'name': ['exact'],\n-        'address': ['exact'],\n-        'district': ['exact'],\n-        'university_type': ['exact'],\n-        'certification': ['exact'],\n-        'created_date': ['exact','gte','lte'],\n-        'established_year': ['exact','gte','lte'],\n-        'updated_date': ['exact','gte','lte'],\n-    }\n-# ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n-    def get_queryset(self):\n-        queryset = super().get_queryset()\n-        return queryset\n-\n-    def get_serializer_class(self):\n-        if self.action in ['create', 'update', 'partial_update']:\n-            return AffiliationWriteSerializers\n-        elif self.action == 'retrieve':\n-            return AffiliationRetrieveSerializers\n-        return super().get_serializer_class()\n-\n-    # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n-    # def action_name(self, request, *args, **kwargs):\n-    #     return super().list(request, *args, **kwargs)\n-\n"
                },
                {
                    "date": 1739509198260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n from django_filters.rest_framework import DjangoFilterBackend\n from ..models import Affiliation\n from ..serializers.affiliation_serializers import AffiliationListSerializers, AffiliationRetrieveSerializers, AffiliationWriteSerializers\n from ..utilities.importbase import *\n+from mainproj.permissions import affiliationPermission\n \n class affiliationViewsets(viewsets.ModelViewSet):\n     serializer_class = AffiliationListSerializers\n     permission_classes = [affiliationPermission]\n"
                },
                {
                    "date": 1739509207703,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,13 +3,14 @@\n from django_filters.rest_framework import DjangoFilterBackend\n from ..models import Affiliation\n from ..serializers.affiliation_serializers import AffiliationListSerializers, AffiliationRetrieveSerializers, AffiliationWriteSerializers\n from ..utilities.importbase import *\n-from mainproj.permissions import affiliationPermission\n+from mainproj.permissions import DynamicModelPermission\n \n class affiliationViewsets(viewsets.ModelViewSet):\n     serializer_class = AffiliationListSerializers\n-    permission_classes = [affiliationPermission]\n+    # permission_classes = [affiliationPermission]\n+    # permission_classes = [affiliationPermission]\n     authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = Affiliation.objects.all().order_by('-id')\n     lookup_field = \"slug\"\n"
                },
                {
                    "date": 1739767302853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,10 +8,10 @@\n \n class affiliationViewsets(viewsets.ModelViewSet):\n     serializer_class = AffiliationListSerializers\n     # permission_classes = [affiliationPermission]\n-    # permission_classes = [affiliationPermission]\n-    authentication_classes = [JWTAuthentication]\n+    permission_classes = [DynamicModelPermission]\n+    # authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = Affiliation.objects.all().order_by('-id')\n     lookup_field = \"slug\"\n \n"
                },
                {
                    "date": 1739940136686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,19 +19,19 @@\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id','name','district','address']\n     ordering_fields = ['id','name','district','address','created_date','updated_date']\n \n-    filterset_fields = {\n-        'id': ['exact'],\n-        'name': ['exact'],\n-        'address': ['exact'],\n-        'district': ['exact'],\n-        'university_type': ['exact'],\n-        'certification': ['exact'],\n-        'created_date': ['exact','gte','lte'],\n-        'established_year': ['exact','gte','lte'],\n-        'updated_date': ['exact','gte','lte'],\n-    }\n+    # filterset_fields = {\n+    #     'id': ['exact'],\n+    #     'name': ['exact'],\n+    #     'address': ['exact'],\n+    #     'district': ['exact'],\n+    #     'university_type': ['exact'],\n+    #     'certification': ['exact'],\n+    #     'created_date': ['exact','gte','lte'],\n+    #     'established_year': ['exact','gte','lte'],\n+    #     'updated_date': ['exact','gte','lte'],\n+    # }\n # ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n     def get_queryset(self):\n         queryset = super().get_queryset()\n         return queryset\n"
                },
                {
                    "date": 1739940146798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n from ..models import Affiliation\n from ..serializers.affiliation_serializers import AffiliationListSerializers, AffiliationRetrieveSerializers, AffiliationWriteSerializers\n from ..utilities.importbase import *\n from mainproj.permissions import DynamicModelPermission\n+from utilities.\n \n class affiliationViewsets(viewsets.ModelViewSet):\n     serializer_class = AffiliationListSerializers\n     # permission_classes = [affiliationPermission]\n@@ -18,8 +19,9 @@\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id','name','district','address']\n     ordering_fields = ['id','name','district','address','created_date','updated_date']\n+    \n \n     # filterset_fields = {\n     #     'id': ['exact'],\n     #     'name': ['exact'],\n"
                },
                {
                    "date": 1739940156336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n from ..models import Affiliation\n from ..serializers.affiliation_serializers import AffiliationListSerializers, AffiliationRetrieveSerializers, AffiliationWriteSerializers\n from ..utilities.importbase import *\n from mainproj.permissions import DynamicModelPermission\n-from utilities.\n+from utilities.filter import AffiliationFilter\n \n class affiliationViewsets(viewsets.ModelViewSet):\n     serializer_class = AffiliationListSerializers\n     # permission_classes = [affiliationPermission]\n@@ -14,8 +14,9 @@\n     # authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = Affiliation.objects.all().order_by('-id')\n     lookup_field = \"slug\"\n+    filterset_class= AffiliationFilter\n \n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id','name','district','address']\n"
                },
                {
                    "date": 1739940519614,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n from ..models import Affiliation\n from ..serializers.affiliation_serializers import AffiliationListSerializers, AffiliationRetrieveSerializers, AffiliationWriteSerializers\n from ..utilities.importbase import *\n from mainproj.permissions import DynamicModelPermission\n-from utilities.filter import AffiliationFilter\n+from /utilities.filter import AffiliationFilter\n \n class affiliationViewsets(viewsets.ModelViewSet):\n     serializer_class = AffiliationListSerializers\n     # permission_classes = [affiliationPermission]\n"
                },
                {
                    "date": 1739940527416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n from ..models import Affiliation\n from ..serializers.affiliation_serializers import AffiliationListSerializers, AffiliationRetrieveSerializers, AffiliationWriteSerializers\n from ..utilities.importbase import *\n from mainproj.permissions import DynamicModelPermission\n-from /utilities.filter import AffiliationFilter\n+from ..utilities.filter import AffiliationFilter\n \n class affiliationViewsets(viewsets.ModelViewSet):\n     serializer_class = AffiliationListSerializers\n     # permission_classes = [affiliationPermission]\n"
                },
                {
                    "date": 1740651303706,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     filterset_class= AffiliationFilter\n \n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = ['id','name','district','address']\n+    search_fields = ['id','name','','address']\n     ordering_fields = ['id','name','district','address','created_date','updated_date']\n     \n \n     # filterset_fields = {\n"
                },
                {
                    "date": 1740651312157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,10 +18,10 @@\n     filterset_class= AffiliationFilter\n \n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = ['id','name','','address']\n-    ordering_fields = ['id','name','district','address','created_date','updated_date']\n+    search_fields = ['id','name','address']\n+    ordering_fields = ['id','name','address','created_date','updated_date']\n     \n \n     # filterset_fields = {\n     #     'id': ['exact'],\n"
                },
                {
                    "date": 1740651319954,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     filterset_class= AffiliationFilter\n \n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = ['id','name','address']\n+    search_fields = ['id','name','address','created_date']\n     ordering_fields = ['id','name','address','created_date','updated_date']\n     \n \n     # filterset_fields = {\n"
                },
                {
                    "date": 1741071732974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,18 @@\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id','name','address','created_date']\n     ordering_fields = ['id','name','address','created_date','updated_date']\n     \n+        def get_object(self):\n+        \"\"\"\n+        Override get_object to allow lookup by either 'id' or 'slug'.\n+        \"\"\"\n+        queryset = self.get_queryset()\n+        lookup_value = self.kwargs.get(self.lookup_field)  # Get lookup value from URL\n+        if lookup_value.isdigit():  # Check if lookup_value is numeric (ID)\n+            return get_object_or_404(queryset, id=int(lookup_value))\n+        return get_object_or_404(queryset, slug=lookup_value)  # Otherwise, lookup by slug\n+    \n \n     # filterset_fields = {\n     #     'id': ['exact'],\n     #     'name': ['exact'],\n"
                },
                {
                    "date": 1741071850886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,11 @@\n from ..serializers.affiliation_serializers import AffiliationListSerializers, AffiliationRetrieveSerializers, AffiliationWriteSerializers\n from ..utilities.importbase import *\n from mainproj.permissions import DynamicModelPermission\n from ..utilities.filter import AffiliationFilter\n+from django.shortcuts import get_object_or_404\n \n+\n class affiliationViewsets(viewsets.ModelViewSet):\n     serializer_class = AffiliationListSerializers\n     # permission_classes = [affiliationPermission]\n     permission_classes = [DynamicModelPermission]\n@@ -21,9 +23,9 @@\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id','name','address','created_date']\n     ordering_fields = ['id','name','address','created_date','updated_date']\n     \n-        def get_object(self):\n+    def get_object(self):\n         \"\"\"\n         Override get_object to allow lookup by either 'id' or 'slug'.\n         \"\"\"\n         queryset = self.get_queryset()\n"
                },
                {
                    "date": 1744728277829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,8 +47,9 @@\n     #     'updated_date': ['exact','gte','lte'],\n     # }\n # ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n     def get_queryset(self):\n+        \n         queryset = super().get_queryset()\n         return queryset\n \n     def get_serializer_class(self):\n"
                },
                {
                    "date": 1744728284277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n     #     'updated_date': ['exact','gte','lte'],\n     # }\n # ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n     def get_queryset(self):\n-        \n+        #TOD\n         queryset = super().get_queryset()\n         return queryset\n \n     def get_serializer_class(self):\n"
                },
                {
                    "date": 1744728296306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n     #     'updated_date': ['exact','gte','lte'],\n     # }\n # ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n     def get_queryset(self):\n-        #TOD\n+        #TODO only super user can view\n         queryset = super().get_queryset()\n         return queryset\n \n     def get_serializer_class(self):\n"
                },
                {
                    "date": 1744728302774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n     #     'updated_date': ['exact','gte','lte'],\n     # }\n # ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n     def get_queryset(self):\n-        #TODO only super user can view\n+        #TODO only super user can view this data\n         queryset = super().get_queryset()\n         return queryset\n \n     def get_serializer_class(self):\n"
                },
                {
                    "date": 1744728307952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,8 +48,9 @@\n     # }\n # ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n     def get_queryset(self):\n         #TODO only super user can view this data\n+        if \n         queryset = super().get_queryset()\n         return queryset\n \n     def get_serializer_class(self):\n"
                },
                {
                    "date": 1744728313038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,10 @@\n     # }\n # ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n     def get_queryset(self):\n         #TODO only super user can view this data\n-        if \n+        if self.request.user.is_superuser:\n+            queryset = self.queryset\n         queryset = super().get_queryset()\n         return queryset\n \n     def get_serializer_class(self):\n"
                },
                {
                    "date": 1744728322250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,10 @@\n     def get_queryset(self):\n         #TODO only super user can view this data\n         if self.request.user.is_superuser:\n             queryset = self.queryset\n-        queryset = super().get_queryset()\n+        \n+        \n         return queryset\n \n     def get_serializer_class(self):\n         if self.action in ['create', 'update', 'partial_update']:\n"
                },
                {
                    "date": 1744728330776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,11 +47,13 @@\n     #     'updated_date': ['exact','gte','lte'],\n     # }\n # ('name', 'established_year', '.year,validators', 'google_map_embed_url', 'latitude', 'longitude', 'address', 'district', 'university_type', 'certification', 'phone_number', 'email', 'description', 'logo_image', 'cover_image', 'created_date', 'updated_date', )\n     def get_queryset(self):\n+        queryset = super().get_queryset()\n         #TODO only super user can view this data\n         if self.request.user.is_superuser:\n             queryset = self.queryset\n+        else\n         \n         \n         return queryset\n \n"
                },
                {
                    "date": 1744728336600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,10 +52,10 @@\n         #TODO only super user can view this data\n         if self.request.user.is_superuser:\n             queryset = self.queryset\n         else\n+        queryset = self.queryset.filter(user=self.request.user)\n         \n-        \n         return queryset\n \n     def get_serializer_class(self):\n         if self.action in ['create', 'update', 'partial_update']:\n"
                },
                {
                    "date": 1744728348426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,11 +51,12 @@\n         queryset = super().get_queryset()\n         #TODO only super user can view this data\n         if self.request.user.is_superuser:\n             queryset = self.queryset\n-        else\n-        queryset = self.queryset.filter(user=self.request.user)\n+        else:\n+        q   queryset = self.queryset.filter(user=self.request.user)\n         \n+        \n         return queryset\n \n     def get_serializer_class(self):\n         if self.action in ['create', 'update', 'partial_update']:\n"
                },
                {
                    "date": 1744728354723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n         #TODO only super user can view this data\n         if self.request.user.is_superuser:\n             queryset = self.queryset\n         else:\n-           queryset = self.queryset.filter(user=self.request.user)\n+            queryset = self.queryset.filter(user=self.request.user)\n         \n         \n         return queryset\n \n"
                }
            ],
            "date": 1733481192866,
            "name": "Commit-0",
            "content": "from rest_framework import viewsets\nfrom rest_framework.filters import SearchFilter, OrderingFilter\nfrom django_filters.rest_framework import DjangoFilterBackend\nfrom ..models import Affiliation\nfrom ..serializers.affiliation_serializers import AffiliationListSerializers, AffiliationRetrieveSerializers, AffiliationWriteSerializers\nfrom ..utilities.importbase import *\n\nclass affiliationViewsets(viewsets.ModelViewSet):\n    serializer_class = AffiliationListSerializers\n    # permission_classes = [affiliationPermission]\n    # authentication_classes = [JWTAuthentication]\n    #pagination_class = MyPageNumberPagination\n    queryset = Affiliation.objects.all()\n\n    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n    search_fields = ['id']\n    ordering_fields = ['id']\n\n    # filterset_fields = {\n    #     'id': ['exact'],\n    # }\n\n    def get_queryset(self):\n        queryset = super().get_queryset()\n        return queryset\n\n    def get_serializer_class(self):\n        if self.action in ['create', 'update', 'partial_update']:\n            return AffiliationWriteSerializers\n        elif self.action == 'retrieve':\n            return AffiliationRetrieveSerializers\n        return super().get_serializer_class()\n\n    # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n    # def action_name(self, request, *args, **kwargs):\n    #     return super().list(request, *args, **kwargs)\n\n"
        }
    ]
}