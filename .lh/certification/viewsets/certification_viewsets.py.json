{
    "sourceFile": "certification/viewsets/certification_viewsets.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1733481216579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1733481223788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     serializer_class = CertificationListSerializers\n     # permission_classes = [certificationPermission]\n     # authentication_classes = [JWTAuthentication]\n     #pagination_class = MyPageNumberPagination\n-    queryset = Certification.objects.all().order_by\n+    queryset = Certification.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n     ordering_fields = ['id']\n@@ -21,9 +21,9 @@\n     # }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n-        #return queryset.filter(user_id=self.request.user.id)\n+        return queryset\n \n     def get_serializer_class(self):\n         if self.action in ['create', 'update', 'partial_update']:\n             return CertificationWriteSerializers\n"
                },
                {
                    "date": 1737963390642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n class certificationViewsets(viewsets.ModelViewSet):\n     serializer_class = CertificationListSerializers\n     # permission_classes = [certificationPermission]\n     # authentication_classes = [JWTAuthentication]\n-    #pagination_class = MyPageNumberPagination\n+    pagination_class = MyPageNumberPagination\n     queryset = Certification.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n"
                },
                {
                    "date": 1738748258064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     # permission_classes = [certificationPermission]\n     # authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = Certification.objects.all().order_by('-id')\n-\n+('name', 'is_show', 'image', 'created_date', 'created_date_time', 'updated_date', )\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n     ordering_fields = ['id']\n \n"
                },
                {
                    "date": 1738748264581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,16 +10,16 @@\n     # permission_classes = [certificationPermission]\n     # authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = Certification.objects.all().order_by('-id')\n-('name', 'is_show', 'image', 'created_date', 'created_date_time', 'updated_date', )\n+# ('name', 'is_show', 'image', 'created_date', 'created_date_time', 'updated_date', )\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n     ordering_fields = ['id']\n \n-    # filterset_fields = {\n-    #     'id': ['exact'],\n-    # }\n+    filterset_fields = {\n+        'id': ['exact'],\n+    }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n         return queryset\n"
                },
                {
                    "date": 1738748270041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,10 @@\n     ordering_fields = ['id']\n \n     filterset_fields = {\n         'id': ['exact'],\n+        'id': ['exact'],\n+        'id': ['exact'],\n     }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1738748279007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,10 +17,10 @@\n     ordering_fields = ['id']\n \n     filterset_fields = {\n         'id': ['exact'],\n-        'id': ['exact'],\n-        'id': ['exact'],\n+        'name': ['exact'],\n+        'is_show': ['exact'],\n     }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1738748290619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n     filterset_fields = {\n         'id': ['exact'],\n         'name': ['exact'],\n         'is_show': ['exact'],\n+        'created_date': ['exact'],\n     }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1738748296172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     filterset_fields = {\n         'id': ['exact'],\n         'name': ['exact'],\n         'is_show': ['exact'],\n-        'created_date': ['exact'],\n+        'created_date': ['exact', 'lte', 'gte'],\n     }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1738748323038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,16 +12,17 @@\n     pagination_class = MyPageNumberPagination\n     queryset = Certification.objects.all().order_by('-id')\n # ('name', 'is_show', 'image', 'created_date', 'created_date_time', 'updated_date', )\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = ['id']\n+    search_fields = ['id','name', 'is_show', 'image', 'created_date',]\n     ordering_fields = ['id']\n \n     filterset_fields = {\n         'id': ['exact'],\n         'name': ['exact'],\n         'is_show': ['exact'],\n         'created_date': ['exact', 'lte', 'gte'],\n+        'updated_date': ['exact', 'lte', 'gte'],\n     }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1738748328546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n     pagination_class = MyPageNumberPagination\n     queryset = Certification.objects.all().order_by('-id')\n # ('name', 'is_show', 'image', 'created_date', 'created_date_time', 'updated_date', )\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = ['id','name', 'is_show', 'image', 'created_date',]\n+    search_fields = ['id','name', 'is_show','created_date']\n     ordering_fields = ['id']\n \n     filterset_fields = {\n         'id': ['exact'],\n"
                },
                {
                    "date": 1738748337300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n     queryset = Certification.objects.all().order_by('-id')\n # ('name', 'is_show', 'image', 'created_date', 'created_date_time', 'updated_date', )\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id','name', 'is_show','created_date']\n-    ordering_fields = ['id']\n+    ordering_fields = ['id','name', 'is_show',]\n \n     filterset_fields = {\n         'id': ['exact'],\n         'name': ['exact'],\n"
                },
                {
                    "date": 1738748384431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,15 +7,15 @@\n \n class certificationViewsets(viewsets.ModelViewSet):\n     serializer_class = CertificationListSerializers\n     # permission_classes = [certificationPermission]\n-    # authentication_classes = [JWTAuthentication]\n+    authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = Certification.objects.all().order_by('-id')\n # ('name', 'is_show', 'image', 'created_date', 'created_date_time', 'updated_date', )\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id','name', 'is_show','created_date']\n-    ordering_fields = ['id','name', 'is_show',]\n+    ordering_fields = ['id','name', 'is_show']\n \n     filterset_fields = {\n         'id': ['exact'],\n         'name': ['exact'],\n"
                }
            ],
            "date": 1733481216579,
            "name": "Commit-0",
            "content": "from rest_framework import viewsets\nfrom rest_framework.filters import SearchFilter, OrderingFilter\nfrom django_filters.rest_framework import DjangoFilterBackend\nfrom ..models import Certification\nfrom ..serializers.certification_serializers import CertificationListSerializers, CertificationRetrieveSerializers, CertificationWriteSerializers\nfrom ..utilities.importbase import *\n\nclass certificationViewsets(viewsets.ModelViewSet):\n    serializer_class = CertificationListSerializers\n    # permission_classes = [certificationPermission]\n    # authentication_classes = [JWTAuthentication]\n    #pagination_class = MyPageNumberPagination\n    queryset = Certification.objects.all().order_by\n\n    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n    search_fields = ['id']\n    ordering_fields = ['id']\n\n    # filterset_fields = {\n    #     'id': ['exact'],\n    # }\n\n    def get_queryset(self):\n        queryset = super().get_queryset()\n        #return queryset.filter(user_id=self.request.user.id)\n\n    def get_serializer_class(self):\n        if self.action in ['create', 'update', 'partial_update']:\n            return CertificationWriteSerializers\n        elif self.action == 'retrieve':\n            return CertificationRetrieveSerializers\n        return super().get_serializer_class()\n\n    # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n    # def action_name(self, request, *args, **kwargs):\n    #     return super().list(request, *args, **kwargs)\n\n"
        }
    ]
}