{
    "sourceFile": "superadmindetails/viewsets/superadmindetails_viewsets.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 39,
            "patches": [
                {
                    "date": 1733482016443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1733482021638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     serializer_class = SuperAdminDetailsListSerializers\n     # permission_classes = [superadmindetailsPermission]\n     # authentication_classes = [JWTAuthentication]\n     #pagination_class = MyPageNumberPagination\n-    queryset = SuperAdminDetails.objects.all().order_by\n+    queryset = SuperAdminDetails.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n     ordering_fields = ['id']\n@@ -21,9 +21,9 @@\n     # }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n-        #return queryset.filter(user_id=self.request.user.id)\n+        return queryset\n \n     def get_serializer_class(self):\n         if self.action in ['create', 'update', 'partial_update']:\n             return SuperAdminDetailsWriteSerializers\n"
                },
                {
                    "date": 1737963669145,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n class superadmindetailsViewsets(viewsets.ModelViewSet):\n     serializer_class = SuperAdminDetailsListSerializers\n     # permission_classes = [superadmindetailsPermission]\n     # authentication_classes = [JWTAuthentication]\n-    #pagination_class = MyPageNumberPagination\n+    pagination_class = MyPageNumberPagination\n     queryset = SuperAdminDetails.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n"
                },
                {
                    "date": 1738748669163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n \n class superadmindetailsViewsets(viewsets.ModelViewSet):\n     serializer_class = SuperAdminDetailsListSerializers\n     # permission_classes = [superadmindetailsPermission]\n-    # authentication_classes = [JWTAuthentication]\n+    authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = SuperAdminDetails.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n"
                },
                {
                    "date": 1738748758214,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     # permission_classes = [superadmindetailsPermission]\n     authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = SuperAdminDetails.objects.all().order_by('-id')\n-\n+('name', 'email', 'phone_number', 'location', 'social_media_links', 'created_at', 'updated_at', )\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n     ordering_fields = ['id']\n \n"
                },
                {
                    "date": 1738748767737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,11 +10,11 @@\n     # permission_classes = [superadmindetailsPermission]\n     authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = SuperAdminDetails.objects.all().order_by('-id')\n-('name', 'email', 'phone_number', 'location', 'social_media_links', 'created_at', 'updated_at', )\n+# ('name', 'email', 'phone_number', 'location', 'social_media_links', 'created_at', 'updated_at', )\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = ['id']\n+    search_fields = ['id','name', 'email', 'phone_number', 'location', 'social_media_links', 'created_at', 'updated_at']\n     ordering_fields = ['id']\n \n     # filterset_fields = {\n     #     'id': ['exact'],\n"
                },
                {
                    "date": 1738748775801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,13 +13,13 @@\n     queryset = SuperAdminDetails.objects.all().order_by('-id')\n # ('name', 'email', 'phone_number', 'location', 'social_media_links', 'created_at', 'updated_at', )\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id','name', 'email', 'phone_number', 'location', 'social_media_links', 'created_at', 'updated_at']\n-    ordering_fields = ['id']\n+    ordering_fields = ['id','name', 'email', 'phone_number', 'location', 'social_media_links', 'created_at', 'updated_at']\n \n-    # filterset_fields = {\n-    #     'id': ['exact'],\n-    # }\n+    filterset_fields = {\n+        'id': ['exact'],\n+    }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n         return queryset\n"
                },
                {
                    "date": 1738748782939,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,12 @@\n     ordering_fields = ['id','name', 'email', 'phone_number', 'location', 'social_media_links', 'created_at', 'updated_at']\n \n     filterset_fields = {\n         'id': ['exact'],\n+        'name': ['exact'],\n+        'id': ['exact'],\n+        'id': ['exact'],\n+        'id': ['exact'],\n     }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1738748789110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n     queryset = SuperAdminDetails.objects.all().order_by('-id')\n # ('name', 'email', 'phone_number', 'location', 'social_media_links', 'created_at', 'updated_at', )\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id','name', 'email', 'phone_number', 'location', 'social_media_links', 'created_at', 'updated_at']\n-    ordering_fields = ['id','name', 'email', 'phone_number', 'location', 'social_media_links', 'created_at', 'updated_at']\n+    ordering_fields = ['id','name', 'phone_number', 'location', 'social_media_links', 'created_at', 'updated_at']\n \n     filterset_fields = {\n         'id': ['exact'],\n         'name': ['exact'],\n"
                },
                {
                    "date": 1738748803196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,11 +18,11 @@\n \n     filterset_fields = {\n         'id': ['exact'],\n         'name': ['exact'],\n+        'location': ['exact'],\n         'id': ['exact'],\n         'id': ['exact'],\n-        'id': ['exact'],\n     }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1738748811874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,10 +19,10 @@\n     filterset_fields = {\n         'id': ['exact'],\n         'name': ['exact'],\n         'location': ['exact'],\n+        'created_at': ['exact'],\n         'id': ['exact'],\n-        'id': ['exact'],\n     }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1739265007389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n from ..utilities.importbase import *\n \n class superadmindetailsViewsets(viewsets.ModelViewSet):\n     serializer_class = SuperAdminDetailsListSerializers\n-    # permission_classes = [superadmindetailsPermission]\n+    permission_classes = [superadmindetailsPermission]\n     authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = SuperAdminDetails.objects.all().order_by('-id')\n # ('name', 'email', 'phone_number', 'location', 'social_media_links', 'created_at', 'updated_at', )\n@@ -20,9 +20,9 @@\n         'id': ['exact'],\n         'name': ['exact'],\n         'location': ['exact'],\n         'created_at': ['exact'],\n-        'id': ['exact'],\n+        'updated_at': ['exact'],\n     }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1739265161097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     filterset_fields = {\n         'id': ['exact'],\n         'name': ['exact'],\n         'location': ['exact'],\n-        'created_at': ['exact'],\n+        'created_at': ['exact',],\n         'updated_at': ['exact'],\n     }\n \n     def get_queryset(self):\n"
                },
                {
                    "date": 1739265167646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,10 +19,10 @@\n     filterset_fields = {\n         'id': ['exact'],\n         'name': ['exact'],\n         'location': ['exact'],\n-        'created_at': ['exact',],\n-        'updated_at': ['exact'],\n+        'created_at': ['exact', 'gte', 'lte'],\n+        'updated_at': ['exact', 'gte', 'lte'],\n     }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1739509737484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n from django_filters.rest_framework import DjangoFilterBackend\n from ..models import SuperAdminDetails\n from ..serializers.superadmindetails_serializers import SuperAdminDetailsListSerializers, SuperAdminDetailsRetrieveSerializers, SuperAdminDetailsWriteSerializers\n from ..utilities.importbase import *\n+from mainproj.permissions\n \n class superadmindetailsViewsets(viewsets.ModelViewSet):\n     serializer_class = SuperAdminDetailsListSerializers\n     permission_classes = [superadmindetailsPermission]\n"
                },
                {
                    "date": 1743070271822,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n from django_filters.rest_framework import DjangoFilterBackend\n from ..models import SuperAdminDetails\n from ..serializers.superadmindetails_serializers import SuperAdminDetailsListSerializers, SuperAdminDetailsRetrieveSerializers, SuperAdminDetailsWriteSerializers\n from ..utilities.importbase import *\n-from mainproj.permissions\n+from mainproj.permissions import DynamicModelPermission\n \n class superadmindetailsViewsets(viewsets.ModelViewSet):\n     serializer_class = SuperAdminDetailsListSerializers\n     permission_classes = [superadmindetailsPermission]\n@@ -38,5 +38,25 @@\n \n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n+    \n+    @action(detail=False, methods=['post'], name=\"create-update\", url_path=\"create-about-us\")\n+    def create_update_about_us(self, request, *args, **kwargs):\n+        description = request.data.get('description', None)\n \n+        if not description:\n+            return Response({\"error\": \"Description is required.\"}, status=status.HTTP_400_BAD_REQUEST)\n+\n+        about_us = AboutUs.objects.all()\n+\n+        if about_us.exists():\n+            # Update the existing AboutUs entry\n+            about_us = about_us.first()\n+            about_us.description = description\n+            about_us.save()\n+            return Response({\"message\": \"About Us section updated successfully.\"}, status=status.HTTP_200_OK)\n+        else:\n+            # Create a new AboutUs entry\n+            new_about_us = AboutUs.objects.create(description=description)\n+            return Response({\"message\": \"About Us section created successfully.\", \"about_us_id\": new_about_us.id}, status=status.HTTP_201_CREATED)\n+\n"
                },
                {
                    "date": 1743070279408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n     \n-    @action(detail=False, methods=['post'], name=\"create-update\", url_path=\"create-about-us\")\n+    @action(detail=False, methods=['post'], name=\"create-update\", url_path=\"create-details\")\n     def create_update_about_us(self, request, *args, **kwargs):\n         description = request.data.get('description', None)\n \n         if not description:\n"
                },
                {
                    "date": 1743070287910,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n     \n-    @action(detail=False, methods=['post'], name=\"create-update\", url_path=\"create-details\")\n+    @action(detail=False, methods=['post'], name=\"create-update\", url_path=\"create-super-admindetails\")\n     def create_update_about_us(self, request, *args, **kwargs):\n         description = request.data.get('description', None)\n \n         if not description:\n"
                },
                {
                    "date": 1743070294274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n \n         if not description:\n             return Response({\"error\": \"Description is required.\"}, status=status.HTTP_400_BAD_REQUEST)\n \n-        about_us = AboutUs.objects.all()\n+        about_us = SuperAdminDetails.objects.all()\n \n         if about_us.exists():\n             # Update the existing AboutUs entry\n             about_us = about_us.first()\n"
                },
                {
                    "date": 1743070302582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,11 @@\n from ..models import SuperAdminDetails\n from ..serializers.superadmindetails_serializers import SuperAdminDetailsListSerializers, SuperAdminDetailsRetrieveSerializers, SuperAdminDetailsWriteSerializers\n from ..utilities.importbase import *\n from mainproj.permissions import DynamicModelPermission\n+from rest_framework.decorators import action\n+from rest_framework.response import Response\n+from rest_framework import status\n \n class superadmindetailsViewsets(viewsets.ModelViewSet):\n     serializer_class = SuperAdminDetailsListSerializers\n     permission_classes = [superadmindetailsPermission]\n"
                },
                {
                    "date": 1743070308534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,7 +59,7 @@\n             about_us.save()\n             return Response({\"message\": \"About Us section updated successfully.\"}, status=status.HTTP_200_OK)\n         else:\n             # Create a new AboutUs entry\n-            new_about_us = AboutUs.objects.create(description=description)\n+            new_about_us = SuperAdminDetails.objects.create(description=description)\n             return Response({\"message\": \"About Us section created successfully.\", \"about_us_id\": new_about_us.id}, status=status.HTTP_201_CREATED)\n \n"
                },
                {
                    "date": 1743070316598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,6 +60,6 @@\n             return Response({\"message\": \"About Us section updated successfully.\"}, status=status.HTTP_200_OK)\n         else:\n             # Create a new AboutUs entry\n             new_about_us = SuperAdminDetails.objects.create(description=description)\n-            return Response({\"message\": \"About Us section created successfully.\", \"about_us_id\": new_about_us.id}, status=status.HTTP_201_CREATED)\n+            return Response({\"message\": \"SuperAdminDetails created successfully.\", \"about_us_id\": new_about_us.id}, status=status.HTTP_201_CREATED)\n \n"
                },
                {
                    "date": 1743070330315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,6 +60,6 @@\n             return Response({\"message\": \"About Us section updated successfully.\"}, status=status.HTTP_200_OK)\n         else:\n             # Create a new AboutUs entry\n             new_about_us = SuperAdminDetails.objects.create(description=description)\n-            return Response({\"message\": \"SuperAdminDetails created successfully.\", \"about_us_id\": new_about_us.id}, status=status.HTTP_201_CREATED)\n+            return Response({\"message\": \"SuperAdminDetails created successfully.\", \"super_admin_id\": new_about_us.id}, status=status.HTTP_201_CREATED)\n \n"
                },
                {
                    "date": 1743070342802,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n \n         if not description:\n             return Response({\"error\": \"Description is required.\"}, status=status.HTTP_400_BAD_REQUEST)\n \n-        about_us = SuperAdminDetails.objects.all()\n+        superadmijn = SuperAdminDetails.objects.all()\n \n         if about_us.exists():\n             # Update the existing AboutUs entry\n             about_us = about_us.first()\n"
                },
                {
                    "date": 1743070353864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,11 +49,11 @@\n \n         if not description:\n             return Response({\"error\": \"Description is required.\"}, status=status.HTTP_400_BAD_REQUEST)\n \n-        superadmijn = SuperAdminDetails.objects.all()\n+        superadmin = SuperAdminDetails.objects.all()\n \n-        if about_us.exists():\n+        if superadmin.exists():\n             # Update the existing AboutUs entry\n             about_us = about_us.first()\n             about_us.description = description\n             about_us.save()\n"
                },
                {
                    "date": 1743070439230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,24 +42,61 @@\n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n     \n-    @action(detail=False, methods=['post'], name=\"create-update\", url_path=\"create-super-admindetails\")\n-    def create_update_about_us(self, request, *args, **kwargs):\n-        description = request.data.get('description', None)\n+    from rest_framework import status\n+from rest_framework.response import Response\n+from rest_framework.decorators import action\n+from .models import SuperAdminDetails\n \n-        if not description:\n-            return Response({\"error\": \"Description is required.\"}, status=status.HTTP_400_BAD_REQUEST)\n+@action(detail=False, methods=['post'], name=\"create-update\", url_path=\"create-super-admindetails\")\n+def create_update_about_us(self, request, *args, **kwargs):\n+    # Retrieve data from request\n+    description = request.data.get('description', None)\n+    name = request.data.get('name', None)\n+    email = request.data.get('email', None)\n+    phone_number = request.data.get('phone_number', None)\n+    location = request.data.get('location', None)\n+    messenger_link = request.data.get('messenger_link', None)\n+    facebook_link = request.data.get('facebook_link', None)\n+    x_link = request.data.get('x_link', None)\n+    youtube_link = request.data.get('youtube_link', None)\n+    linkedin_link = request.data.get('linkedin_link', None)\n \n-        superadmin = SuperAdminDetails.objects.all()\n+    # Validate required fields\n+    if not description:\n+        return Response({\"error\": \"Description is required.\"}, status=status.HTTP_400_BAD_REQUEST)\n \n-        if superadmin.exists():\n-            # Update the existing AboutUs entry\n-            about_us = about_us.first()\n-            about_us.description = description\n-            about_us.save()\n-            return Response({\"message\": \"About Us section updated successfully.\"}, status=status.HTTP_200_OK)\n-        else:\n-            # Create a new AboutUs entry\n-            new_about_us = SuperAdminDetails.objects.create(description=description)\n-            return Response({\"message\": \"SuperAdminDetails created successfully.\", \"super_admin_id\": new_about_us.id}, status=status.HTTP_201_CREATED)\n+    # Check if SuperAdminDetails exists\n+    superadmin = SuperAdminDetails.objects.all()\n \n+    if superadmin.exists():\n+        # Update the existing SuperAdminDetails entry\n+        superadmin = superadmin.first()\n+        superadmin.description = description\n+        superadmin.name = name if name else superadmin.name\n+        superadmin.email = email if email else superadmin.email\n+        superadmin.phone_number = phone_number if phone_number else superadmin.phone_number\n+        superadmin.location = location if location else superadmin.location\n+        superadmin.messenger_link = messenger_link if messenger_link else superadmin.messenger_link\n+        superadmin.facebook_link = facebook_link if facebook_link else superadmin.facebook_link\n+        superadmin.x_link = x_link if x_link else superadmin.x_link\n+        superadmin.youtube_link = youtube_link if youtube_link else superadmin.youtube_link\n+        superadmin.linkedin_link = linkedin_link if linkedin_link else superadmin.linkedin_link\n+        \n+        superadmin.save()\n+        return Response({\"message\": \"SuperAdminDetails updated successfully.\"}, status=status.HTTP_200_OK)\n+    else:\n+        # Create a new SuperAdminDetails entry\n+        new_superadmin = SuperAdminDetails.objects.create(\n+            description=description,\n+            name=name,\n+            email=email,\n+            phone_number=phone_number,\n+            location=location,\n+            messenger_link=messenger_link,\n+            facebook_link=facebook_link,\n+            x_link=x_link,\n+            youtube_link=youtube_link,\n+            linkedin_link=linkedin_link\n+        )\n+        return Response({\"message\": \"SuperAdminDetails created successfully.\", \"super_admin_id\": new_superadmin.id}, status=status.HTTP_201_CREATED)\n"
                },
                {
                    "date": 1743070446424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,12 +42,8 @@\n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n     \n-    from rest_framework import status\n-from rest_framework.response import Response\n-from rest_framework.decorators import action\n-from .models import SuperAdminDetails\n \n @action(detail=False, methods=['post'], name=\"create-update\", url_path=\"create-super-admindetails\")\n def create_update_about_us(self, request, *args, **kwargs):\n     # Retrieve data from request\n"
                },
                {
                    "date": 1743070452364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,58 +41,58 @@\n \n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n-    \n+        \n \n-@action(detail=False, methods=['post'], name=\"create-update\", url_path=\"create-super-admindetails\")\n-def create_update_about_us(self, request, *args, **kwargs):\n-    # Retrieve data from request\n-    description = request.data.get('description', None)\n-    name = request.data.get('name', None)\n-    email = request.data.get('email', None)\n-    phone_number = request.data.get('phone_number', None)\n-    location = request.data.get('location', None)\n-    messenger_link = request.data.get('messenger_link', None)\n-    facebook_link = request.data.get('facebook_link', None)\n-    x_link = request.data.get('x_link', None)\n-    youtube_link = request.data.get('youtube_link', None)\n-    linkedin_link = request.data.get('linkedin_link', None)\n+    @action(detail=False, methods=['post'], name=\"create-update\", url_path=\"create-super-admindetails\")\n+    def create_update_about_us(self, request, *args, **kwargs):\n+        # Retrieve data from request\n+        description = request.data.get('description', None)\n+        name = request.data.get('name', None)\n+        email = request.data.get('email', None)\n+        phone_number = request.data.get('phone_number', None)\n+        location = request.data.get('location', None)\n+        messenger_link = request.data.get('messenger_link', None)\n+        facebook_link = request.data.get('facebook_link', None)\n+        x_link = request.data.get('x_link', None)\n+        youtube_link = request.data.get('youtube_link', None)\n+        linkedin_link = request.data.get('linkedin_link', None)\n \n-    # Validate required fields\n-    if not description:\n-        return Response({\"error\": \"Description is required.\"}, status=status.HTTP_400_BAD_REQUEST)\n+        # Validate required fields\n+        if not description:\n+            return Response({\"error\": \"Description is required.\"}, status=status.HTTP_400_BAD_REQUEST)\n \n-    # Check if SuperAdminDetails exists\n-    superadmin = SuperAdminDetails.objects.all()\n+        # Check if SuperAdminDetails exists\n+        superadmin = SuperAdminDetails.objects.all()\n \n-    if superadmin.exists():\n-        # Update the existing SuperAdminDetails entry\n-        superadmin = superadmin.first()\n-        superadmin.description = description\n-        superadmin.name = name if name else superadmin.name\n-        superadmin.email = email if email else superadmin.email\n-        superadmin.phone_number = phone_number if phone_number else superadmin.phone_number\n-        superadmin.location = location if location else superadmin.location\n-        superadmin.messenger_link = messenger_link if messenger_link else superadmin.messenger_link\n-        superadmin.facebook_link = facebook_link if facebook_link else superadmin.facebook_link\n-        superadmin.x_link = x_link if x_link else superadmin.x_link\n-        superadmin.youtube_link = youtube_link if youtube_link else superadmin.youtube_link\n-        superadmin.linkedin_link = linkedin_link if linkedin_link else superadmin.linkedin_link\n-        \n-        superadmin.save()\n-        return Response({\"message\": \"SuperAdminDetails updated successfully.\"}, status=status.HTTP_200_OK)\n-    else:\n-        # Create a new SuperAdminDetails entry\n-        new_superadmin = SuperAdminDetails.objects.create(\n-            description=description,\n-            name=name,\n-            email=email,\n-            phone_number=phone_number,\n-            location=location,\n-            messenger_link=messenger_link,\n-            facebook_link=facebook_link,\n-            x_link=x_link,\n-            youtube_link=youtube_link,\n-            linkedin_link=linkedin_link\n-        )\n-        return Response({\"message\": \"SuperAdminDetails created successfully.\", \"super_admin_id\": new_superadmin.id}, status=status.HTTP_201_CREATED)\n+        if superadmin.exists():\n+            # Update the existing SuperAdminDetails entry\n+            superadmin = superadmin.first()\n+            superadmin.description = description\n+            superadmin.name = name if name else superadmin.name\n+            superadmin.email = email if email else superadmin.email\n+            superadmin.phone_number = phone_number if phone_number else superadmin.phone_number\n+            superadmin.location = location if location else superadmin.location\n+            superadmin.messenger_link = messenger_link if messenger_link else superadmin.messenger_link\n+            superadmin.facebook_link = facebook_link if facebook_link else superadmin.facebook_link\n+            superadmin.x_link = x_link if x_link else superadmin.x_link\n+            superadmin.youtube_link = youtube_link if youtube_link else superadmin.youtube_link\n+            superadmin.linkedin_link = linkedin_link if linkedin_link else superadmin.linkedin_link\n+            \n+            superadmin.save()\n+            return Response({\"message\": \"SuperAdminDetails updated successfully.\"}, status=status.HTTP_200_OK)\n+        else:\n+            # Create a new SuperAdminDetails entry\n+            new_superadmin = SuperAdminDetails.objects.create(\n+                description=description,\n+                name=name,\n+                email=email,\n+                phone_number=phone_number,\n+                location=location,\n+                messenger_link=messenger_link,\n+                facebook_link=facebook_link,\n+                x_link=x_link,\n+                youtube_link=youtube_link,\n+                linkedin_link=linkedin_link\n+            )\n+            return Response({\"message\": \"SuperAdminDetails created successfully.\", \"super_admin_id\": new_superadmin.id}, status=status.HTTP_201_CREATED)\n"
                },
                {
                    "date": 1743070461695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n         \n \n-    @action(detail=False, methods=['post'], name=\"create-update\", url_path=\"create-super-admindetails\")\n+    @action(detail=False, methods=['post'], name=\"create-update\", url_path=\"create-super-admin-details\")\n     def create_update_about_us(self, request, *args, **kwargs):\n         # Retrieve data from request\n         description = request.data.get('description', None)\n         name = request.data.get('name', None)\n"
                },
                {
                    "date": 1743654795585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n \n class superadmindetailsViewsets(viewsets.ModelViewSet):\n     serializer_class = SuperAdminDetailsListSerializers\n     permission_classes = [superadmindetailsPermission]\n-    authentication_classes = [JWTAuthentication]\n+    # authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = SuperAdminDetails.objects.all().order_by('-id')\n # ('name', 'email', 'phone_number', 'location', 'social_media_links', 'created_at', 'updated_at', )\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n"
                },
                {
                    "date": 1743654834962,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n     pagination_class = MyPageNumberPagination\n     queryset = SuperAdminDetails.objects.all().order_by('-id')\n # ('name', 'email', 'phone_number', 'location', 'social_media_links', 'created_at', 'updated_at', )\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = ['id','name', 'email', 'phone_number', 'location', 'social_media_links', 'created_at', 'updated_at']\n+    search_fields = ['id','name', 'email']\n     ordering_fields = ['id','name', 'phone_number', 'location', 'social_media_links', 'created_at', 'updated_at']\n \n     filterset_fields = {\n         'id': ['exact'],\n"
                },
                {
                    "date": 1743654841321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     queryset = SuperAdminDetails.objects.all().order_by('-id')\n # ('name', 'email', 'phone_number', 'location', 'social_media_links', 'created_at', 'updated_at', )\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id','name', 'email']\n-    ordering_fields = ['id','name', 'phone_number', 'location', 'social_media_links', 'created_at', 'updated_at']\n+    ordering_fields = ['id','name', 'phone_number', 'location', 'social_media_links', 'cre]\n \n     filterset_fields = {\n         'id': ['exact'],\n         'name': ['exact'],\n"
                },
                {
                    "date": 1743654849145,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,18 +17,10 @@\n     queryset = SuperAdminDetails.objects.all().order_by('-id')\n # ('name', 'email', 'phone_number', 'location', 'social_media_links', 'created_at', 'updated_at', )\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id','name', 'email']\n-    ordering_fields = ['id','name', 'phone_number', 'location', 'social_media_links', 'cre]\n+    ordering_fields = ['id','name']\n \n-    filterset_fields = {\n-        'id': ['exact'],\n-        'name': ['exact'],\n-        'location': ['exact'],\n-        'created_at': ['exact', 'gte', 'lte'],\n-        'updated_at': ['exact', 'gte', 'lte'],\n-    }\n-\n     def get_queryset(self):\n         queryset = super().get_queryset()\n         return queryset\n \n"
                },
                {
                    "date": 1743655152030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n from rest_framework import status\n \n class superadmindetailsViewsets(viewsets.ModelViewSet):\n     serializer_class = SuperAdminDetailsListSerializers\n-    permission_classes = [superadmindetailsPermission]\n+    permission_classes = [Is]\n     # authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = SuperAdminDetails.objects.all().order_by('-id')\n # ('name', 'email', 'phone_number', 'location', 'social_media_links', 'created_at', 'updated_at', )\n"
                },
                {
                    "date": 1743655162293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n from rest_framework import status\n \n class superadmindetailsViewsets(viewsets.ModelViewSet):\n     serializer_class = SuperAdminDetailsListSerializers\n-    permission_classes = [Is]\n+    permission_classes = [IsAdminUser]\n     # authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = SuperAdminDetails.objects.all().order_by('-id')\n # ('name', 'email', 'phone_number', 'location', 'social_media_links', 'created_at', 'updated_at', )\n"
                },
                {
                    "date": 1743655168663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n from rest_framework.decorators import action\n from rest_framework.response import Response\n from rest_framework import status\n \n+\n class superadmindetailsViewsets(viewsets.ModelViewSet):\n     serializer_class = SuperAdminDetailsListSerializers\n     permission_classes = [IsAdminUser]\n     # authentication_classes = [JWTAuthentication]\n"
                },
                {
                    "date": 1743655174110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,10 @@\n from mainproj.permissions import DynamicModelPermission\n from rest_framework.decorators import action\n from rest_framework.response import Response\n from rest_framework import status\n+from rest_framework.permissions import AllowAny\n \n-\n class superadmindetailsViewsets(viewsets.ModelViewSet):\n     serializer_class = SuperAdminDetailsListSerializers\n     permission_classes = [IsAdminUser]\n     # authentication_classes = [JWTAuthentication]\n"
                },
                {
                    "date": 1743655200772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n from mainproj.permissions import DynamicModelPermission\n from rest_framework.decorators import action\n from rest_framework.response import Response\n from rest_framework import status\n-from rest_framework.permissions import AllowAny\n+from rest_framework.permissions import AllowAny,IsAdminUser\n \n class superadmindetailsViewsets(viewsets.ModelViewSet):\n     serializer_class = SuperAdminDetailsListSerializers\n     permission_classes = [IsAdminUser]\n@@ -36,9 +36,9 @@\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n         \n \n-    @action(detail=False, methods=['post'], name=\"create-update\", url_path=\"create-super-admin-details\")\n+    @action(detail=False, methods=['post'], name=\"create-update\", url_path=\"create-super-admin-details\",)\n     def create_update_about_us(self, request, *args, **kwargs):\n         # Retrieve data from request\n         description = request.data.get('description', None)\n         name = request.data.get('name', None)\n"
                },
                {
                    "date": 1743655512575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n         \n \n-    @action(detail=False, methods=['post'], name=\"create-update\", url_path=\"create-super-admin-details\",)\n+    @action(detail=False, methods=['post'], name=\"create-update\", url_path=\"create-super-admin-details\",permission_classes=[IsAdminUser])\n     def create_update_about_us(self, request, *args, **kwargs):\n         # Retrieve data from request\n         description = request.data.get('description', None)\n         name = request.data.get('name', None)\n@@ -60,9 +60,8 @@\n \n         if superadmin.exists():\n             # Update the existing SuperAdminDetails entry\n             superadmin = superadmin.first()\n-            superadmin.description = description\n             superadmin.name = name if name else superadmin.name\n             superadmin.email = email if email else superadmin.email\n             superadmin.phone_number = phone_number if phone_number else superadmin.phone_number\n             superadmin.location = location if location else superadmin.location\n"
                },
                {
                    "date": 1743655519633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,8 @@\n             return Response({\"message\": \"SuperAdminDetails updated successfully.\"}, status=status.HTTP_200_OK)\n         else:\n             # Create a new SuperAdminDetails entry\n             new_superadmin = SuperAdminDetails.objects.create(\n-                description=description,\n                 name=name,\n                 email=email,\n                 phone_number=phone_number,\n                 location=location,\n"
                }
            ],
            "date": 1733482016443,
            "name": "Commit-0",
            "content": "from rest_framework import viewsets\nfrom rest_framework.filters import SearchFilter, OrderingFilter\nfrom django_filters.rest_framework import DjangoFilterBackend\nfrom ..models import SuperAdminDetails\nfrom ..serializers.superadmindetails_serializers import SuperAdminDetailsListSerializers, SuperAdminDetailsRetrieveSerializers, SuperAdminDetailsWriteSerializers\nfrom ..utilities.importbase import *\n\nclass superadmindetailsViewsets(viewsets.ModelViewSet):\n    serializer_class = SuperAdminDetailsListSerializers\n    # permission_classes = [superadmindetailsPermission]\n    # authentication_classes = [JWTAuthentication]\n    #pagination_class = MyPageNumberPagination\n    queryset = SuperAdminDetails.objects.all().order_by\n\n    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n    search_fields = ['id']\n    ordering_fields = ['id']\n\n    # filterset_fields = {\n    #     'id': ['exact'],\n    # }\n\n    def get_queryset(self):\n        queryset = super().get_queryset()\n        #return queryset.filter(user_id=self.request.user.id)\n\n    def get_serializer_class(self):\n        if self.action in ['create', 'update', 'partial_update']:\n            return SuperAdminDetailsWriteSerializers\n        elif self.action == 'retrieve':\n            return SuperAdminDetailsRetrieveSerializers\n        return super().get_serializer_class()\n\n    # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n    # def action_name(self, request, *args, **kwargs):\n    #     return super().list(request, *args, **kwargs)\n\n"
        }
    ]
}