{
    "sourceFile": "advertisement/utilities/permissions.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1739256870024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739256975531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n     \"add\": \"add_advertisement\",\n     \"change\": \"change_advertisement\",\n     \"delete\": \"delete_advertisement\",\n     \"view\": \"view_advertisement\",\n+    \"manage\": \"manage_advertisement\",\n }\n \n def IsAuthenticated(request):\n     return bool(request.user and request.user.is_authenticated)\n@@ -22,8 +23,12 @@\n def HasPermission(request, codename):\n     \"\"\"Check if the user has a specific permission\"\"\"\n     return request.user.has_perm(f\"app_name.{codename}\")\n \n+def CanManage(request):\n+    \"\"\"Check if the user has full manage access\"\"\"\n+    return HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"manage\"])\n+\n def isOwner(request, obj=None):\n     \"\"\"Check if the request user is the owner of the object\"\"\"\n     if obj:\n         return obj.user_id == request.user.id\n@@ -34,22 +39,25 @@\n     Permission class for managing advertisements based on user permissions and ownership.\n     \"\"\"\n \n     def has_permission(self, request, view):\n+        if CanManage(request):  # If the user has manage permission, grant full access\n+            return True\n+\n         if view.action in [\"list\"]:\n-            return HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"view\"])  # View permission required\n+            return HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"view\"])\n \n         elif view.action in [\"retrieve\"]:\n             return isOwner(request) or HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"view\"])\n \n         elif view.action in [\"create\"]:\n-            return HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"add\"])  # Add permission required\n+            return HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"add\"])\n \n         elif view.action in [\"update\", \"partial_update\"]:\n             obj = view.get_object()\n-            return isOwner(request, obj) and HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"change\"])  # Change permission required\n+            return (isOwner(request, obj) and HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"change\"]))\n \n         elif view.action == \"destroy\":\n             obj = view.get_object()\n-            return isOwner(request, obj) and HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"delete\"])  # Delete permission required\n+            return (isOwner(request, obj) and HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"delete\"]))\n \n         return False  # Default deny access\n"
                },
                {
                    "date": 1739258823491,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n             return HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"add\"])\n \n         elif view.action in [\"update\", \"partial_update\"]:\n             obj = view.get_object()\n-            return (isOwner(request, obj) and HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"change\"]))\n+            return ( HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"change\"]))\n \n         elif view.action == \"destroy\":\n             obj = view.get_object()\n             return (isOwner(request, obj) and HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"delete\"]))\n"
                },
                {
                    "date": 1739258830398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,11 +53,11 @@\n             return HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"add\"])\n \n         elif view.action in [\"update\", \"partial_update\"]:\n             obj = view.get_object()\n-            return ( HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"change\"]))\n+            return (HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"change\"]))\n \n         elif view.action == \"destroy\":\n             obj = view.get_object()\n-            return (isOwner(request, obj) and HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"delete\"]))\n+            return ( HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"delete\"]))\n \n         return False  # Default deny access\n"
                },
                {
                    "date": 1739263799429,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n         if CanManage(request):  # If the user has manage permission, grant full access\n             return True\n \n         if view.action in [\"list\"]:\n-            return HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"view\"])\n+            return True\n \n         elif view.action in [\"retrieve\"]:\n             return isOwner(request) or HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"view\"])\n \n@@ -57,7 +57,7 @@\n             return (HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"change\"]))\n \n         elif view.action == \"destroy\":\n             obj = view.get_object()\n-            return ( HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"delete\"]))\n+            return (HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"delete\"]))\n \n         return False  # Default deny access\n"
                },
                {
                    "date": 1739263807430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n         if view.action in [\"list\"]:\n             return True\n \n         elif view.action in [\"retrieve\"]:\n-            return isOwner(request) or HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"view\"])\n+            return True\n \n         elif view.action in [\"create\"]:\n             return HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"add\"])\n \n"
                },
                {
                    "date": 1739264250272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n     if obj:\n         return obj.user_id == request.user.id\n     return str(request.user.id) == str(request.data.get(\"user\")) or (not request.data and not request.POST)\n \n-class AdvertisementPermission(BasePermission):\n+class advertisementPermission(BasePermission):\n     \"\"\"\n     Permission class for managing advertisements based on user permissions and ownership.\n     \"\"\"\n \n"
                }
            ],
            "date": 1739256870024,
            "name": "Commit-0",
            "content": "from rest_framework.permissions import BasePermission\n\nSUPER_ADMIN = 1\nADMIN = 2\n\nADVERTISEMENT_PERMISSIONS = {\n    \"add\": \"add_advertisement\",\n    \"change\": \"change_advertisement\",\n    \"delete\": \"delete_advertisement\",\n    \"view\": \"view_advertisement\",\n}\n\ndef IsAuthenticated(request):\n    return bool(request.user and request.user.is_authenticated)\n\ndef SuperAdminLevel(request):\n    return bool(IsAuthenticated(request) and request.user.is_superuser)\n\ndef AdminLevel(request):\n    return bool(IsAuthenticated(request) and request.user.role in [ADMIN, SUPER_ADMIN])\n\ndef HasPermission(request, codename):\n    \"\"\"Check if the user has a specific permission\"\"\"\n    return request.user.has_perm(f\"app_name.{codename}\")\n\ndef isOwner(request, obj=None):\n    \"\"\"Check if the request user is the owner of the object\"\"\"\n    if obj:\n        return obj.user_id == request.user.id\n    return str(request.user.id) == str(request.data.get(\"user\")) or (not request.data and not request.POST)\n\nclass AdvertisementPermission(BasePermission):\n    \"\"\"\n    Permission class for managing advertisements based on user permissions and ownership.\n    \"\"\"\n\n    def has_permission(self, request, view):\n        if view.action in [\"list\"]:\n            return HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"view\"])  # View permission required\n\n        elif view.action in [\"retrieve\"]:\n            return isOwner(request) or HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"view\"])\n\n        elif view.action in [\"create\"]:\n            return HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"add\"])  # Add permission required\n\n        elif view.action in [\"update\", \"partial_update\"]:\n            obj = view.get_object()\n            return isOwner(request, obj) and HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"change\"])  # Change permission required\n\n        elif view.action == \"destroy\":\n            obj = view.get_object()\n            return isOwner(request, obj) and HasPermission(request, ADVERTISEMENT_PERMISSIONS[\"delete\"])  # Delete permission required\n\n        return False  # Default deny access\n"
        }
    ]
}