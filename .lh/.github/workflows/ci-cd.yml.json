{
    "sourceFile": ".github/workflows/ci-cd.yml",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 81,
            "patches": [
                {
                    "date": 1733397109290,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1733397116352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n         SERVER_IP: \"142.171.168.136\"\n         PORT: \"8007\"\n-        SCREEN_NAME: \"nepalcity\"\n+        SCREEN_NAME: \"collegeinfo\"\n         PROJECT_FOLDER: \"/home/nepalcity\"\n \n       run: |\n         mkdir -p ~/.ssh\n"
                },
                {
                    "date": 1733397619619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n         SERVER_IP: \"142.171.168.136\"\n         PORT: \"8007\"\n         SCREEN_NAME: \"collegeinfo\"\n-        PROJECT_FOLDER: \"/home/nepalcity\"\n+        PROJECT_FOLDER: \"/home/collegeinfo\"\n \n       run: |\n         mkdir -p ~/.ssh\n         echo \"${{ secrets.SSH_PRIVATE_KEY }}\" > ~/.ssh/id_rsa\n@@ -68,9 +68,9 @@\n         #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n         #echo \"Running deployment commands on the server\" && \n         # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n"
                },
                {
                    "date": 1733471051247,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n         #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n         #echo \"Running deployment commands on the server\" && \n         # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n"
                },
                {
                    "date": 1733811732418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,8 +70,9 @@\n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n         ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n+        \n         #echo \"Running deployment commands on the server\" && \n         # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n"
                },
                {
                    "date": 1733812014432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,11 +70,11 @@\n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n         ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n-        \n+\n         #echo \"Running deployment commands on the server\" && \n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n"
                },
                {
                    "date": 1733812147719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,13 +68,13 @@\n         #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n \n         #echo \"Running deployment commands on the server\" && \n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n"
                },
                {
                    "date": 1737961973971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,13 +68,13 @@\n         #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n \n         #echo \"Running deployment commands on the server\" && \n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n"
                },
                {
                    "date": 1737962104946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,13 +68,13 @@\n         #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n \n         #echo \"Running deployment commands on the server\" && \n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n"
                },
                {
                    "date": 1737962582890,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,13 +68,13 @@\n         #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n \n         #echo \"Running deployment commands on the server\" && \n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n"
                },
                {
                    "date": 1737962591636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,13 +68,13 @@\n         #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n \n         #echo \"Running deployment commands on the server\" && \n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n"
                },
                {
                    "date": 1738045502536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,13 +68,13 @@\n         #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n \n         #echo \"Running deployment commands on the server\" && \n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n"
                },
                {
                    "date": 1738134702060,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,13 +68,13 @@\n         #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n \n         #echo \"Running deployment commands on the server\" && \n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n"
                },
                {
                    "date": 1738652710419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,13 +68,13 @@\n         #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n \n         #echo \"Running deployment commands on the server\" && \n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n"
                },
                {
                    "date": 1738659011294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,10 @@\n         ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n \n         #echo \"Running deployment commands on the server\" && \n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"c\n+        d $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n"
                },
                {
                    "date": 1738659263203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,10 +72,9 @@\n         ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n \n         #echo \"Running deployment commands on the server\" && \n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"c\n-        d $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n"
                },
                {
                    "date": 1739172548314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n \n         #echo \"Running deployment commands on the server\" && \n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n"
                },
                {
                    "date": 1739172683264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,13 +68,13 @@\n         #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n \n         #echo \"Running deployment commands on the server\" && \n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PR÷OJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n"
                },
                {
                    "date": 1739342445098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n         PROJECT_FOLDER: \"/home/collegeinfo\"\n \n       run: |\n         mkdir -p ~/.ssh\n-        echo \"${{ secrets.SSH_PRIVATE_KEY }}\" > ~/.ssh/id_rsa\n+        echo \"${{ secrets.SSH_PRIVATE_KEY_PROD }}\" > ~/.ssh/id_rsa\n         chmod 600 ~/.ssh/id_rsa\n \n         # Install rsync\n         #sudo apt-get install -y rsync\n@@ -68,13 +68,13 @@\n         #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n \n         #echo \"Running deployment commands on the server\" && \n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PR÷OJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n"
                },
                {
                    "date": 1739342451627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n         PROJECT_FOLDER: \"/home/collegeinfo\"\n \n       run: |\n         mkdir -p ~/.ssh\n-        echo \"${{ secrets.SSH_PRIVATE_KEY_PROD }}\" > ~/.ssh/id_rsa\n+        echo \"${{ secrets.SSH_PRIVATE_KEY }}\" > ~/.ssh/id_rsa\n         chmod 600 ~/.ssh/id_rsa\n \n         # Install rsync\n         #sudo apt-get install -y rsync\n"
                },
                {
                    "date": 1739685916197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n \n         #echo \"Running deployment commands on the server\" && \n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n"
                },
                {
                    "date": 1739686785253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,11 +29,11 @@\n       run: |\n         # python -m pip install --upgrade pip\n         pip install -r requirements.txt --use-deprecated=legacy-resolver\n \n-    - name: Run tests\n-      run: |\n-        python manage.py test\n+    # - name: Run tests\n+    #   run: |\n+    #     python manage.py test\n \n     - name: Deploy to VPS Server\n       env:\n         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n@@ -68,9 +68,9 @@\n         #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n \n         #echo \"Running deployment commands on the server\" && \n         ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n"
                },
                {
                    "date": 1739687115378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,98 @@\n+name: CI/CD Pipeline\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+\n+jobs:\n+  build-and-deploy:\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+    - name: Checkout code\n+      uses: actions/checkout@v2\n+\n+    - name: Set up Python\n+      uses: actions/setup-python@v2\n+      with:\n+        python-version: 3.10.12\n+\n+    - name: Upgrade pip and install setuptools\n+      run: |\n+        python -m pip install --upgrade pip==21.2.4\n+        pip install --upgrade setuptools\n+\n+        # pip install autobahn\n+        # pip install autobahn==23.6.1\n+\n+    - name: Install dependencies\n+      run: |\n+        # python -m pip install --upgrade pip\n+        pip install -r requirements.txt --use-deprecated=legacy-resolver\n+\n+    # - name: Run tests\n+    #   run: |\n+    #     python manage.py test\n+\n+    - name: Deploy to VPS Server\n+      env:\n+        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n+        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n+        AWS_DEFAULT_REGION: ap-southeast-2\n+        BACKEND_USER: backend\n+        BACKEND_PASSWORD: backend\n+        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n+        SERVER_IP: \"142.171.168.136\"\n+        PORT: \"8007\"\n+        SCREEN_NAME: \"collegeinfo\"\n+        PROJECT_FOLDER: \"/home/collegeinfo\"\n+\n+      run: |\n+        mkdir -p ~/.ssh\n+        echo \"${{ secrets.SSH_PRIVATE_KEY }}\" > ~/.ssh/id_rsa\n+        chmod 600 ~/.ssh/id_rsa\n+\n+        # Install rsync\n+        #sudo apt-get install -y rsync\n+\n+        # Create necessary directories on the server\n+        echo \"Create necessary directories on the server\"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"sudo apt-get install -y python3-venv\"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"mkdir -p $PROJECT_FOLDER\"\n+\n+        # Use rsync to copy only changed files\n+        echo \"Use rsync to copy only changed files\"\n+        rsync -avz --delete --exclude='__pycache__/' --exclude='venv/' --exclude='db.sqlite3' --exclude='env/' --exclude='staticfiles/' --exclude='media/' --exclude='.git/' -e \"ssh -o StrictHostKeyChecking=no\" ./ root@$SERVER_IP:$PROJECT_FOLDER/\n+\n+        #copy and replace all files to cicd folder\n+        #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n+\n+        # Run deployment commands on the server\n+        echo \"Running deployment commands on the server\"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        \n+\n+        #echo \"Running deployment commands on the server\" && \n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+\n+\n+\n+\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"\n+        #     cd $PROJECT_FOLDER &&\n+        #     virtualenv venv &&\n+        #     source venv/bin/activate &&\n+        #     pip install -r requirements.txt &&\n+        #     python manage.py migrate &&\n+        #     python manage.py collectstatic --noinput &&\n+        #     python manage.py populate_blog &&\n+        #     python manage.py populate_book &&\n+        #     python manage.py populate_branch &&\n+        #     python manage.py populate_inquiry &&\n+        #     python manage.py populate_quot &&\n+        #     python manage.py populate_cat &&\n+        #     python manage.py populate_ser\n+        # \"\n+\n+#AmazonEC2FullAccess\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739687121062,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,97 @@\n+name: CI/CD Pipeline\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+\n+jobs:\n+  build-and-deploy:\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+    - name: Checkout code\n+      uses: actions/checkout@v2\n+\n+    - name: Set up Python\n+      uses: actions/setup-python@v2\n+      with:\n+        python-version: 3.10.12\n+\n+    - name: Upgrade pip and install setuptools\n+      run: |\n+        python -m pip install --upgrade pip==21.2.4\n+        pip install --upgrade setuptools\n+        # pip install autobahn\n+        # pip install autobahn==23.6.1\n+\n+    - name: Install dependencies\n+      run: |\n+        # python -m pip install --upgrade pip\n+        pip install -r requirements.txt --use-deprecated=legacy-resolver\n+\n+    # - name: Run tests\n+    #   run: |\n+    #     python manage.py test\n+\n+    - name: Deploy to VPS Server\n+      env:\n+        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n+        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n+        AWS_DEFAULT_REGION: ap-southeast-2\n+        BACKEND_USER: backend\n+        BACKEND_PASSWORD: backend\n+        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n+        SERVER_IP: \"142.171.168.136\"\n+        PORT: \"8007\"\n+        SCREEN_NAME: \"collegeinfo\"\n+        PROJECT_FOLDER: \"/home/collegeinfo\"\n+\n+      run: |\n+        mkdir -p ~/.ssh\n+        echo \"${{ secrets.SSH_PRIVATE_KEY }}\" > ~/.ssh/id_rsa\n+        chmod 600 ~/.ssh/id_rsa\n+\n+        # Install rsync\n+        #sudo apt-get install -y rsync\n+\n+        # Create necessary directories on the server\n+        echo \"Create necessary directories on the server\"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"sudo apt-get install -y python3-venv\"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"mkdir -p $PROJECT_FOLDER\"\n+\n+        # Use rsync to copy only changed files\n+        echo \"Use rsync to copy only changed files\"\n+        rsync -avz --delete --exclude='__pycache__/' --exclude='venv/' --exclude='db.sqlite3' --exclude='env/' --exclude='staticfiles/' --exclude='media/' --exclude='.git/' -e \"ssh -o StrictHostKeyChecking=no\" ./ root@$SERVER_IP:$PROJECT_FOLDER/\n+\n+        #copy and replace all files to cicd folder\n+        #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n+\n+        # Run deployment commands on the server\n+        echo \"Running deployment commands on the server\"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        \n+\n+        #echo \"Running deployment commands on the server\" && \n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+\n+\n+\n+\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"\n+        #     cd $PROJECT_FOLDER &&\n+        #     virtualenv venv &&\n+        #     source venv/bin/activate &&\n+        #     pip install -r requirements.txt &&\n+        #     python manage.py migrate &&\n+        #     python manage.py collectstatic --noinput &&\n+        #     python manage.py populate_blog &&\n+        #     python manage.py populate_book &&\n+        #     python manage.py populate_branch &&\n+        #     python manage.py populate_inquiry &&\n+        #     python manage.py populate_quot &&\n+        #     python manage.py populate_cat &&\n+        #     python manage.py populate_ser\n+        # \"\n+\n+#AmazonEC2FullAccess\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739687486211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,110 +29,12 @@\n       run: |\n         # python -m pip install --upgrade pip\n         pip install -r requirements.txt --use-deprecated=legacy-resolver\n \n-    # - name: Run tests\n-    #   run: |\n-    #     python manage.py test\n-\n-    - name: Deploy to VPS Server\n-      env:\n-        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n-        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n-        AWS_DEFAULT_REGION: ap-southeast-2\n-        BACKEND_USER: backend\n-        BACKEND_PASSWORD: backend\n-        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n-        SERVER_IP: \"142.171.168.136\"\n-        PORT: \"8007\"\n-        SCREEN_NAME: \"collegeinfo\"\n-        PROJECT_FOLDER: \"/home/collegeinfo\"\n-\n+    - name: Run tests\n       run: |\n-        mkdir -p ~/.ssh\n-        echo \"${{ secrets.SSH_PRIVATE_KEY }}\" > ~/.ssh/id_rsa\n-        chmod 600 ~/.ssh/id_rsa\n+        python manage.py test\n \n-        # Install rsync\n-        #sudo apt-get install -y rsync\n-\n-        # Create necessary directories on the server\n-        echo \"Create necessary directories on the server\"\n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"sudo apt-get install -y python3-venv\"\n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"mkdir -p $PROJECT_FOLDER\"\n-\n-        # Use rsync to copy only changed files\n-        echo \"Use rsync to copy only changed files\"\n-        rsync -avz --delete --exclude='__pycache__/' --exclude='venv/' --exclude='db.sqlite3' --exclude='env/' --exclude='staticfiles/' --exclude='media/' --exclude='.git/' -e \"ssh -o StrictHostKeyChecking=no\" ./ root@$SERVER_IP:$PROJECT_FOLDER/\n-\n-        #copy and replace all files to cicd folder\n-        #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n-\n-        # Run deployment commands on the server\n-        echo \"Running deployment commands on the server\"\n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n-        \n-\n-        #echo \"Running deployment commands on the server\" && \n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n-\n-\n-\n-\n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"\n-        #     cd $PROJECT_FOLDER &&\n-        #     virtualenv venv &&\n-        #     source venv/bin/activate &&\n-        #     pip install -r requirements.txt &&\n-        #     python manage.py migrate &&\n-        #     python manage.py collectstatic --noinput &&\n-        #     python manage.py populate_blog &&\n-        #     python manage.py populate_book &&\n-        #     python manage.py populate_branch &&\n-        #     python manage.py populate_inquiry &&\n-        #     python manage.py populate_quot &&\n-        #     python manage.py populate_cat &&\n-        #     python manage.py populate_ser\n-        # \"\n-\n-#AmazonEC2FullAccess\n-name: CI/CD Pipeline\n-\n-on:\n-  push:\n-    branches:\n-      - main\n-\n-jobs:\n-  build-and-deploy:\n-    runs-on: ubuntu-latest\n-\n-    steps:\n-    - name: Checkout code\n-      uses: actions/checkout@v2\n-\n-    - name: Set up Python\n-      uses: actions/setup-python@v2\n-      with:\n-        python-version: 3.10.12\n-\n-    - name: Upgrade pip and install setuptools\n-      run: |\n-        python -m pip install --upgrade pip==21.2.4\n-        pip install --upgrade setuptools\n-\n-        # pip install autobahn\n-        # pip install autobahn==23.6.1\n-\n-    - name: Install dependencies\n-      run: |\n-        # python -m pip install --upgrade pip\n-        pip install -r requirements.txt --use-deprecated=legacy-resolver\n-\n-    # - name: Run tests\n-    #   run: |\n-    #     python manage.py test\n-\n     - name: Deploy to VPS Server\n       env:\n         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n@@ -191,102 +93,5 @@\n         #     python manage.py populate_cat &&\n         #     python manage.py populate_ser\n         # \"\n \n-#AmazonEC2FullAccess\n-name: CI/CD Pipeline\n-\n-on:\n-  push:\n-    branches:\n-      - main\n-\n-jobs:\n-  build-and-deploy:\n-    runs-on: ubuntu-latest\n-\n-    steps:\n-    - name: Checkout code\n-      uses: actions/checkout@v2\n-\n-    - name: Set up Python\n-      uses: actions/setup-python@v2\n-      with:\n-        python-version: 3.10.12\n-\n-    - name: Upgrade pip and install setuptools\n-      run: |\n-        python -m pip install --upgrade pip==21.2.4\n-        # pip install setuptools<72.0.0\n-        # pip install autobahn\n-        # pip install autobahn==23.6.1\n-\n-    - name: Install dependencies\n-      run: |\n-        # python -m pip install --upgrade pip\n-        pip install -r requirements.txt --use-deprecated=legacy-resolver\n-\n-    # - name: Run tests\n-    #   run: |\n-    #     python manage.py test\n-\n-    - name: Deploy to VPS Server\n-      env:\n-        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n-        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n-        AWS_DEFAULT_REGION: ap-southeast-2\n-        BACKEND_USER: backend\n-        BACKEND_PASSWORD: backend\n-        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n-        SERVER_IP: \"142.171.168.136\"\n-        PORT: \"8007\"\n-        SCREEN_NAME: \"collegeinfo\"\n-        PROJECT_FOLDER: \"/home/collegeinfo\"\n-\n-      run: |\n-        mkdir -p ~/.ssh\n-        echo \"${{ secrets.SSH_PRIVATE_KEY }}\" > ~/.ssh/id_rsa\n-        chmod 600 ~/.ssh/id_rsa\n-\n-        # Install rsync\n-        #sudo apt-get install -y rsync\n-\n-        # Create necessary directories on the server\n-        echo \"Create necessary directories on the server\"\n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"sudo apt-get install -y python3-venv\"\n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"mkdir -p $PROJECT_FOLDER\"\n-\n-        # Use rsync to copy only changed files\n-        echo \"Use rsync to copy only changed files\"\n-        rsync -avz --delete --exclude='__pycache__/' --exclude='venv/' --exclude='db.sqlite3' --exclude='env/' --exclude='staticfiles/' --exclude='media/' --exclude='.git/' -e \"ssh -o StrictHostKeyChecking=no\" ./ root@$SERVER_IP:$PROJECT_FOLDER/\n-\n-        #copy and replace all files to cicd folder\n-        #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n-\n-        # Run deployment commands on the server\n-        echo \"Running deployment commands on the server\"\n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n-        \n-\n-        #echo \"Running deployment commands on the server\" && \n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n-\n-\n-\n-\n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"\n-        #     cd $PROJECT_FOLDER &&\n-        #     virtualenv venv &&\n-        #     source venv/bin/activate &&\n-        #     pip install -r requirements.txt &&\n-        #     python manage.py migrate &&\n-        #     python manage.py collectstatic --noinput &&\n-        #     python manage.py populate_blog &&\n-        #     python manage.py populate_book &&\n-        #     python manage.py populate_branch &&\n-        #     python manage.py populate_inquiry &&\n-        #     python manage.py populate_quot &&\n-        #     python manage.py populate_cat &&\n-        #     python manage.py populate_ser\n-        # \"\n-\n #AmazonEC2FullAccess\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739703734100,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,97 @@\n+name: CI/CD Pipeline\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+\n+jobs:\n+  build-and-deploy:\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+    - name: Checkout code\n+      uses: actions/checkout@v2\n+\n+    - name: Set up Python\n+      uses: actions/setup-python@v2\n+      with:\n+        python-version: 3.10.12\n+\n+    - name: Upgrade pip and install setuptools\n+      run: |\n+        python -m pip install --upgrade pip==21.2.4\n+        pip install --upgrade setuptools\n+        # pip install autobahn\n+        # pip install autobahn==23.6.1\n+\n+    - name: Install dependencies\n+      run: |\n+        # python -m pip install --upgrade pip\n+        pip install -r requirements.txt --use-deprecated=legacy-resolver\n+\n+    - name: Run tests\n+      run: |\n+        python manage.py test\n+\n+    - name: Deploy to VPS Server\n+      env:\n+        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n+        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n+        AWS_DEFAULT_REGION: ap-southeast-2\n+        BACKEND_USER: backend\n+        BACKEND_PASSWORD: backend\n+        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n+        SERVER_IP: \"142.171.168.136\"\n+        PORT: \"8007\"\n+        SCREEN_NAME: \"collegeinfo\"\n+        PROJECT_FOLDER: \"/home/collegeinfo\"\n+\n+      run: |\n+        mkdir -p ~/.ssh\n+        echo \"${{ secrets.SSH_PRIVATE_KEY }}\" > ~/.ssh/id_rsa\n+        chmod 600 ~/.ssh/id_rsa\n+\n+        # Install rsync\n+        #sudo apt-get install -y rsync\n+\n+        # Create necessary directories on the server\n+        echo \"Create necessary directories on the server\"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"sudo apt-get install -y python3-venv\"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"mkdir -p $PROJECT_FOLDER\"\n+\n+        # Use rsync to copy only changed files\n+        echo \"Use rsync to copy only changed files\"\n+        rsync -avz --delete --exclude='__pycache__/' --exclude='venv/' --exclude='db.sqlite3' --exclude='env/' --exclude='staticfiles/' --exclude='media/' --exclude='.git/' -e \"ssh -o StrictHostKeyChecking=no\" ./ root@$SERVER_IP:$PROJECT_FOLDER/\n+\n+        #copy and replace all files to cicd folder\n+        #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n+\n+        # Run deployment commands on the server\n+        echo \"Running deployment commands on the server\"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        \n+\n+        #echo \"Running deployment commands on the server\" && \n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+\n+\n+\n+\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"\n+        #     cd $PROJECT_FOLDER &&\n+        #     virtualenv venv &&\n+        #     source venv/bin/activate &&\n+        #     pip install -r requirements.txt &&\n+        #     python manage.py migrate &&\n+        #     python manage.py collectstatic --noinput &&\n+        #     python manage.py populate_blog &&\n+        #     python manage.py populate_book &&\n+        #     python manage.py populate_branch &&\n+        #     python manage.py populate_inquiry &&\n+        #     python manage.py populate_quot &&\n+        #     python manage.py populate_cat &&\n+        #     python manage.py populate_ser\n+        # \"\n+\n+#AmazonEC2FullAccess\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740132340412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,102 +93,5 @@\n         #     python manage.py populate_cat &&\n         #     python manage.py populate_ser\n         # \"\n \n-#AmazonEC2FullAccess\n-name: CI/CD Pipeline\n-\n-on:\n-  push:\n-    branches:\n-      - main\n-\n-jobs:\n-  build-and-deploy:\n-    runs-on: ubuntu-latest\n-\n-    steps:\n-    - name: Checkout code\n-      uses: actions/checkout@v2\n-\n-    - name: Set up Python\n-      uses: actions/setup-python@v2\n-      with:\n-        python-version: 3.10.12\n-\n-    - name: Upgrade pip and install setuptools\n-      run: |\n-        python -m pip install --upgrade pip==21.2.4\n-        pip install --upgrade setuptools\n-        # pip install autobahn\n-        # pip install autobahn==23.6.1\n-\n-    - name: Install dependencies\n-      run: |\n-        # python -m pip install --upgrade pip\n-        pip install -r requirements.txt --use-deprecated=legacy-resolver\n-\n-    - name: Run tests\n-      run: |\n-        python manage.py test\n-\n-    - name: Deploy to VPS Server\n-      env:\n-        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n-        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n-        AWS_DEFAULT_REGION: ap-southeast-2\n-        BACKEND_USER: backend\n-        BACKEND_PASSWORD: backend\n-        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n-        SERVER_IP: \"142.171.168.136\"\n-        PORT: \"8007\"\n-        SCREEN_NAME: \"collegeinfo\"\n-        PROJECT_FOLDER: \"/home/collegeinfo\"\n-\n-      run: |\n-        mkdir -p ~/.ssh\n-        echo \"${{ secrets.SSH_PRIVATE_KEY }}\" > ~/.ssh/id_rsa\n-        chmod 600 ~/.ssh/id_rsa\n-\n-        # Install rsync\n-        #sudo apt-get install -y rsync\n-\n-        # Create necessary directories on the server\n-        echo \"Create necessary directories on the server\"\n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"sudo apt-get install -y python3-venv\"\n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"mkdir -p $PROJECT_FOLDER\"\n-\n-        # Use rsync to copy only changed files\n-        echo \"Use rsync to copy only changed files\"\n-        rsync -avz --delete --exclude='__pycache__/' --exclude='venv/' --exclude='db.sqlite3' --exclude='env/' --exclude='staticfiles/' --exclude='media/' --exclude='.git/' -e \"ssh -o StrictHostKeyChecking=no\" ./ root@$SERVER_IP:$PROJECT_FOLDER/\n-\n-        #copy and replace all files to cicd folder\n-        #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n-\n-        # Run deployment commands on the server\n-        echo \"Running deployment commands on the server\"\n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n-        \n-\n-        #echo \"Running deployment commands on the server\" && \n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n-\n-\n-\n-\n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"\n-        #     cd $PROJECT_FOLDER &&\n-        #     virtualenv venv &&\n-        #     source venv/bin/activate &&\n-        #     pip install -r requirements.txt &&\n-        #     python manage.py migrate &&\n-        #     python manage.py collectstatic --noinput &&\n-        #     python manage.py populate_blog &&\n-        #     python manage.py populate_book &&\n-        #     python manage.py populate_branch &&\n-        #     python manage.py populate_inquiry &&\n-        #     python manage.py populate_quot &&\n-        #     python manage.py populate_cat &&\n-        #     python manage.py populate_ser\n-        # \"\n-\n #AmazonEC2FullAccess\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740132882982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,13 +68,13 @@\n         #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n \n         #echo \"Running deployment commands on the server\" && \n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n"
                },
                {
                    "date": 1741520868289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,10 @@\n         AWS_DEFAULT_REGION: ap-southeast-2\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n-        SERVER_IP: \"142.171.168.136\"\n+        # SERVER_IP: \"142.171.168.136\"\n+        \n         PORT: \"8007\"\n         SCREEN_NAME: \"collegeinfo\"\n         PROJECT_FOLDER: \"/home/collegeinfo\"\n \n@@ -68,9 +69,9 @@\n         #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n \n         #echo \"Running deployment commands on the server\" && \n         # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n"
                },
                {
                    "date": 1741520875623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n         # SERVER_IP: \"142.171.168.136\"\n-        \n+        # SERVER_IP: \"\"\n         PORT: \"8007\"\n         SCREEN_NAME: \"collegeinfo\"\n         PROJECT_FOLDER: \"/home/collegeinfo\"\n \n"
                },
                {
                    "date": 1741520883318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n         # SERVER_IP: \"142.171.168.136\"\n-        # SERVER_IP: \"\"\n+        # SERVER_IP: \"@82.29.167.247\"\n         PORT: \"8007\"\n         SCREEN_NAME: \"collegeinfo\"\n         PROJECT_FOLDER: \"/home/collegeinfo\"\n \n"
                },
                {
                    "date": 1741520889033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,10 +42,10 @@\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n         # SERVER_IP: \"142.171.168.136\"\n-        # SERVER_IP: \"@82.29.167.247\"\n-        PORT: \"8007\"\n+        SERVER_IP: \"82.29.167.247\"\n+        PORT: \"8001\"\n         SCREEN_NAME: \"collegeinfo\"\n         PROJECT_FOLDER: \"/home/collegeinfo\"\n \n       run: |\n"
                },
                {
                    "date": 1741520897953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n \n     - name: Deploy to VPS Server\n       env:\n         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n-        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n+        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_ }}\n         AWS_DEFAULT_REGION: ap-southeast-2\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n"
                },
                {
                    "date": 1741520910381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n \n     - name: Deploy to VPS Server\n       env:\n         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n-        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_ }}\n+        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n         AWS_DEFAULT_REGION: ap-southeast-2\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n"
                },
                {
                    "date": 1741520916329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n         AWS_DEFAULT_REGION: ap-southeast-2\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n-        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n+        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_PROD }}\n         # SERVER_IP: \"142.171.168.136\"\n         SERVER_IP: \"82.29.167.247\"\n         PORT: \"8001\"\n         SCREEN_NAME: \"collegeinfo\"\n"
                },
                {
                    "date": 1741520921456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n         PROJECT_FOLDER: \"/home/collegeinfo\"\n \n       run: |\n         mkdir -p ~/.ssh\n-        echo \"${{ secrets.SSH_PRIVATE_KEY }}\" > ~/.ssh/id_rsa\n+        echo \"${{ secrets.SSH_PRIVATE_KEY_PROD }}\" > ~/.ssh/id_rsa\n         chmod 600 ~/.ssh/id_rsa\n \n         # Install rsync\n         #sudo apt-get install -y rsync\n"
                },
                {
                    "date": 1741521830467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,21 +78,21 @@\n \n \n \n \n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"\n-        #     cd $PROJECT_FOLDER &&\n-        #     virtualenv venv &&\n-        #     source venv/bin/activate &&\n-        #     pip install -r requirements.txt &&\n-        #     python manage.py migrate &&\n-        #     python manage.py collectstatic --noinput &&\n-        #     python manage.py populate_blog &&\n-        #     python manage.py populate_book &&\n-        #     python manage.py populate_branch &&\n-        #     python manage.py populate_inquiry &&\n-        #     python manage.py populate_quot &&\n-        #     python manage.py populate_cat &&\n-        #     python manage.py populate_ser\n-        # \"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"\n+            cd $PROJECT_FOLDER &&\n+            virtualenv venv &&\n+            source venv/bin/activate &&\n+            pip install -r requirements.txt &&\n+            python manage.py migrate &&\n+            python manage.py collectstatic --noinput &&\n+            python manage.py populate_blog &&\n+            python manage.py populate_book &&\n+            python manage.py populate_branch &&\n+            python manage.py populate_inquiry &&\n+            python manage.py populate_quot &&\n+            python manage.py populate_cat &&\n+            python manage.py populate_ser\n+        \"\n \n #AmazonEC2FullAccess\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741521837177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,26 +73,26 @@\n         ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n \n         #echo \"Running deployment commands on the server\" && \n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"\n-            cd $PROJECT_FOLDER &&\n-            virtualenv venv &&\n-            source venv/bin/activate &&\n-            pip install -r requirements.txt &&\n-            python manage.py migrate &&\n-            python manage.py collectstatic --noinput &&\n-            python manage.py populate_blog &&\n-            python manage.py populate_book &&\n-            python manage.py populate_branch &&\n-            python manage.py populate_inquiry &&\n-            python manage.py populate_quot &&\n-            python manage.py populate_cat &&\n-            python manage.py populate_ser\n-        \"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"\n+        #     cd $PROJECT_FOLDER &&\n+        #     virtualenv venv &&\n+        #     source venv/bin/activate &&\n+        #     pip install -r requirements.txt &&\n+        #     python manage.py migrate &&\n+        #     python manage.py collectstatic --noinput &&\n+        #     python manage.py populate_blog &&\n+        #     python manage.py populate_book &&\n+        #     python manage.py populate_branch &&\n+        #     python manage.py populate_inquiry &&\n+        #     python manage.py populate_quot &&\n+        #     python manage.py populate_cat &&\n+        #     python manage.py populate_ser\n+        # \"\n \n #AmazonEC2FullAccess\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741522246278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,13 +69,13 @@\n         #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n \n         #echo \"Running deployment commands on the server\" && \n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n"
                },
                {
                    "date": 1741600571342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n         AWS_DEFAULT_REGION: ap-southeast-2\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n-        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_PROD }}\n+        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n         # SERVER_IP: \"142.171.168.136\"\n         SERVER_IP: \"82.29.167.247\"\n         PORT: \"8001\"\n         SCREEN_NAME: \"collegeinfo\"\n@@ -69,9 +69,9 @@\n         #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n \n         #echo \"Running deployment commands on the server\" && \n         # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n"
                },
                {
                    "date": 1741600576411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n         # SERVER_IP: \"142.171.168.136\"\n-        SERVER_IP: \"82.29.167.247\"\n+        # SERVER_IP: \"82.29.167.247\"\n         PORT: \"8001\"\n         SCREEN_NAME: \"collegeinfo\"\n         PROJECT_FOLDER: \"/home/collegeinfo\"\n \n"
                },
                {
                    "date": 1741600584687,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,17 +41,17 @@\n         AWS_DEFAULT_REGION: ap-southeast-2\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n-        # SERVER_IP: \"142.171.168.136\"\n+        SERVER_IP: \"142.171.168.136\"\n         # SERVER_IP: \"82.29.167.247\"\n         PORT: \"8001\"\n         SCREEN_NAME: \"collegeinfo\"\n         PROJECT_FOLDER: \"/home/collegeinfo\"\n \n       run: |\n         mkdir -p ~/.ssh\n-        echo \"${{ secrets.SSH_PRIVATE_KEY_PROD }}\" > ~/.ssh/id_rsa\n+        echo \"${{ secrets.SSH_PRIVATE_KEY }}\" > ~/.ssh/id_rsa\n         chmod 600 ~/.ssh/id_rsa\n \n         # Install rsync\n         #sudo apt-get install -y rsync\n"
                },
                {
                    "date": 1741600595790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,17 +41,17 @@\n         AWS_DEFAULT_REGION: ap-southeast-2\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n-        SERVER_IP: \"142.171.168.136\"\n+        # SERVER_IP: \"142.171.168.136\"\n         # SERVER_IP: \"82.29.167.247\"\n         PORT: \"8001\"\n         SCREEN_NAME: \"collegeinfo\"\n         PROJECT_FOLDER: \"/home/collegeinfo\"\n \n       run: |\n         mkdir -p ~/.ssh\n-        echo \"${{ secrets.SSH_PRIVATE_KEY }}\" > ~/.ssh/id_rsa\n+        echo \"${{ secrets.SSH_PRIVATE_KEY_PROD }}\" > ~/.ssh/id_rsa\n         chmod 600 ~/.ssh/id_rsa\n \n         # Install rsync\n         #sudo apt-get install -y rsync\n"
                },
                {
                    "date": 1741667802856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,11 +40,11 @@\n         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n         AWS_DEFAULT_REGION: ap-southeast-2\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n-        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n+        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_PROD }}\n         # SERVER_IP: \"142.171.168.136\"\n-        # SERVER_IP: \"82.29.167.247\"\n+        SERVER_IP: \"82.29.167.247\"\n         PORT: \"8001\"\n         SCREEN_NAME: \"collegeinfo\"\n         PROJECT_FOLDER: \"/home/collegeinfo\"\n \n"
                },
                {
                    "date": 1741674663430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,5 +94,5 @@\n         #     python manage.py populate_cat &&\n         #     python manage.py populate_ser\n         # \"\n \n-#AmazonEC2FullAccess\n\\ No newline at end of file\n+#AmazonEC2FullAccess\n"
                },
                {
                    "date": 1741675609215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n         ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n \n         #echo \"Running deployment commands on the server\" && \n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n"
                },
                {
                    "date": 1741676782420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,13 +69,13 @@\n         #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n \n         #echo \"Running deployment commands on the server\" && \n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n"
                },
                {
                    "date": 1741770751249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_PROD }}\n         # SERVER_IP: \"142.171.168.136\"\n-        SERVER_IP: \"82.29.167.247\"\n+        # SERVER_IP: \"82.29.167.247\"\n         PORT: \"8001\"\n         SCREEN_NAME: \"collegeinfo\"\n         PROJECT_FOLDER: \"/home/collegeinfo\"\n \n@@ -69,9 +69,9 @@\n         #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n \n         #echo \"Running deployment commands on the server\" && \n         # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n"
                },
                {
                    "date": 1741770756570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n         AWS_DEFAULT_REGION: ap-southeast-2\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_PROD }}\n-        # SERVER_IP: \"142.171.168.136\"\n+        SERVER_IP: \"142.171.168.136\"\n         # SERVER_IP: \"82.29.167.247\"\n         PORT: \"8001\"\n         SCREEN_NAME: \"collegeinfo\"\n         PROJECT_FOLDER: \"/home/collegeinfo\"\n"
                },
                {
                    "date": 1741770763523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,18 +40,18 @@\n         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n         AWS_DEFAULT_REGION: ap-southeast-2\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n-        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_PROD }}\n+        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n         SERVER_IP: \"142.171.168.136\"\n         # SERVER_IP: \"82.29.167.247\"\n         PORT: \"8001\"\n         SCREEN_NAME: \"collegeinfo\"\n         PROJECT_FOLDER: \"/home/collegeinfo\"\n \n       run: |\n         mkdir -p ~/.ssh\n-        echo \"${{ secrets.SSH_PRIVATE_KEY_PROD }}\" > ~/.ssh/id_rsa\n+        echo \"${{ secrets.SSH_PRIVATE_KEY }}\" > ~/.ssh/id_rsa\n         chmod 600 ~/.ssh/id_rsa\n \n         # Install rsync\n         #sudo apt-get install -y rsync\n"
                },
                {
                    "date": 1741770944303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n         ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n \n         #echo \"Running deployment commands on the server\" && \n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n"
                },
                {
                    "date": 1741771685677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n         python-version: 3.10.12\n \n     - name: Upgrade pip and install setuptools\n       run: |\n-        python -m pip install --upgrade pip==21.2.4\n+        python -m pip install --upgrade pip\n         pip install --upgrade setuptools\n         # pip install autobahn\n         # pip install autobahn==23.6.1\n \n@@ -69,9 +69,9 @@\n         #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n \n         #echo \"Running deployment commands on the server\" && \n         ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n"
                },
                {
                    "date": 1741936692428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n         # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n \n         #echo \"Running deployment commands on the server\" && \n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n"
                },
                {
                    "date": 1742196121374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,10 +69,11 @@\n         #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n+        \n \n         #echo \"Running deployment commands on the server\" && \n         # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n"
                },
                {
                    "date": 1742280976359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n         AWS_DEFAULT_REGION: ap-southeast-2\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n-        SERVER_IP: \"142.171.168.136\"\n+        SERVER_IP: \"\"\n         # SERVER_IP: \"82.29.167.247\"\n         PORT: \"8001\"\n         SCREEN_NAME: \"collegeinfo\"\n         PROJECT_FOLDER: \"/home/collegeinfo\"\n"
                },
                {
                    "date": 1742280983776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,14 +36,14 @@\n \n     - name: Deploy to VPS Server\n       env:\n         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n-        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n+        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_ }}\n         AWS_DEFAULT_REGION: ap-southeast-2\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n-        SERVER_IP: \"\"\n+        SERVER_IP: \"107.174.60.23\"\n         # SERVER_IP: \"82.29.167.247\"\n         PORT: \"8001\"\n         SCREEN_NAME: \"collegeinfo\"\n         PROJECT_FOLDER: \"/home/collegeinfo\"\n"
                },
                {
                    "date": 1742280994628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n \n     - name: Deploy to VPS Server\n       env:\n         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n-        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_ }}\n+        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n         AWS_DEFAULT_REGION: ap-southeast-2\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n"
                },
                {
                    "date": 1742281003226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,18 +40,18 @@\n         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n         AWS_DEFAULT_REGION: ap-southeast-2\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n-        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n+        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_PROD }}\n         SERVER_IP: \"107.174.60.23\"\n         # SERVER_IP: \"82.29.167.247\"\n         PORT: \"8001\"\n         SCREEN_NAME: \"collegeinfo\"\n         PROJECT_FOLDER: \"/home/collegeinfo\"\n \n       run: |\n         mkdir -p ~/.ssh\n-        echo \"${{ secrets.SSH_PRIVATE_KEY }}\" > ~/.ssh/id_rsa\n+        echo \"${{ secrets.SSH_PRIVATE_KEY_PROD }}\" > ~/.ssh/id_rsa\n         chmod 600 ~/.ssh/id_rsa\n \n         # Install rsync\n         #sudo apt-get install -y rsync\n"
                },
                {
                    "date": 1742281010291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n         \n         \n \n         #echo \"Running deployment commands on the server\" && \n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n"
                },
                {
                    "date": 1742292337964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,14 +69,14 @@\n         #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n         \n \n         #echo \"Running deployment commands on the server\" && \n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n"
                },
                {
                    "date": 1743689446914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,14 +69,14 @@\n         #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n         \n \n         #echo \"Running deployment commands on the server\" && \n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n"
                },
                {
                    "date": 1743689878966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,14 +69,14 @@\n         #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n         \n \n         #echo \"Running deployment commands on the server\" && \n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n"
                },
                {
                    "date": 1745231496769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,14 +69,14 @@\n         #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n         \n \n         #echo \"Running deployment commands on the server\" && \n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n"
                },
                {
                    "date": 1745849557331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,9 @@\n     - name: Upgrade pip and install setuptools\n       run: |\n         python -m pip install --upgrade pip\n         pip install --upgrade setuptools\n+        \n         # pip install autobahn\n         # pip install autobahn==23.6.1\n \n     - name: Install dependencies\n@@ -74,9 +75,9 @@\n         \n         \n \n         #echo \"Running deployment commands on the server\" && \n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n"
                },
                {
                    "date": 1745849565227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,10 +20,10 @@\n \n     - name: Upgrade pip and install setuptools\n       run: |\n         python -m pip install --upgrade pip\n+        \n         pip install --upgrade setuptools\n-        \n         # pip install autobahn\n         # pip install autobahn==23.6.1\n \n     - name: Install dependencies\n"
                },
                {
                    "date": 1745849581094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,12 +20,12 @@\n \n     - name: Upgrade pip and install setuptools\n       run: |\n         python -m pip install --upgrade pip\n-        \n+        pip cache purge\n         pip install --upgrade setuptools\n         # pip install autobahn\n-        # pip install autobahn==23.6.1\n+        pip install autobahn==23.6.1\n \n     - name: Install dependencies\n       run: |\n         # python -m pip install --upgrade pip\n"
                },
                {
                    "date": 1745849730843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,10 +22,10 @@\n       run: |\n         python -m pip install --upgrade pip\n         pip cache purge\n         pip install --upgrade setuptools\n-        # pip install autobahn\n-        pip install autobahn==23.6.1\n+        pip install autobahn\n+        # pip install autobahn==23.6.1\n \n     - name: Install dependencies\n       run: |\n         # python -m pip install --upgrade pip\n"
                },
                {
                    "date": 1745902214832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,8 @@\n \n     - name: Upgrade pip and install setuptools\n       run: |\n         python -m pip install --upgrade pip\n-        pip cache purge\n         pip install --upgrade setuptools\n         pip install autobahn\n         # pip install autobahn==23.6.1\n \n"
                },
                {
                    "date": 1745917941281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n \n     - name: Install dependencies\n       run: |\n         # python -m pip install --upgrade pip\n-        pip install -r requirements.txt --use-deprecated=legacy-resolver\n+        pip install -r requirements.txt\n \n     - name: Run tests\n       run: |\n         python manage.py test\n"
                },
                {
                    "date": 1745917974013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,13 +24,18 @@\n         pip install --upgrade setuptools\n         pip install autobahn\n         # pip install autobahn==23.6.1\n \n+        - name: Install system dependencies\n+      run: |\n+        sudo apt-get update\n+        sudo apt-get install -y build-essential libpq-dev python3-dev\n+\n     - name: Install dependencies\n       run: |\n-        # python -m pip install --upgrade pip\n         pip install -r requirements.txt\n \n+\n     - name: Run tests\n       run: |\n         python manage.py test\n \n"
                },
                {
                    "date": 1745917979305,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n         pip install --upgrade setuptools\n         pip install autobahn\n         # pip install autobahn==23.6.1\n \n-        - name: Install system dependencies\n+    - name: Install system dependencies\n       run: |\n         sudo apt-get update\n         sudo apt-get install -y build-essential libpq-dev python3-dev\n \n"
                },
                {
                    "date": 1746430587140,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,104 +1,104 @@\n-name: CI/CD Pipeline\n+# name: CI/CD Pipeline\n \n-on:\n-  push:\n-    branches:\n-      - main\n+# on:\n+#   push:\n+#     branches:\n+#       - main\n \n-jobs:\n-  build-and-deploy:\n-    runs-on: ubuntu-latest\n+# jobs:\n+#   build-and-deploy:\n+#     runs-on: ubuntu-latest\n \n-    steps:\n-    - name: Checkout code\n-      uses: actions/checkout@v2\n+#     steps:\n+#     - name: Checkout code\n+#       uses: actions/checkout@v2\n \n-    - name: Set up Python\n-      uses: actions/setup-python@v2\n-      with:\n-        python-version: 3.10.12\n+#     - name: Set up Python\n+#       uses: actions/setup-python@v2\n+#       with:\n+#         python-version: 3.10.12\n \n-    - name: Upgrade pip and install setuptools\n-      run: |\n-        python -m pip install --upgrade pip\n-        pip install --upgrade setuptools\n-        pip install autobahn\n-        # pip install autobahn==23.6.1\n+#     - name: Upgrade pip and install setuptools\n+#       run: |\n+#         python -m pip install --upgrade pip\n+#         pip install --upgrade setuptools\n+#         pip install autobahn\n+#         # pip install autobahn==23.6.1\n \n-    - name: Install system dependencies\n-      run: |\n-        sudo apt-get update\n-        sudo apt-get install -y build-essential libpq-dev python3-dev\n+#     - name: Install system dependencies\n+#       run: |\n+#         sudo apt-get update\n+#         sudo apt-get install -y build-essential libpq-dev python3-dev\n \n-    - name: Install dependencies\n-      run: |\n-        pip install -r requirements.txt\n+#     - name: Install dependencies\n+#       run: |\n+#         pip install -r requirements.txt\n \n \n-    - name: Run tests\n-      run: |\n-        python manage.py test\n+#     - name: Run tests\n+#       run: |\n+#         python manage.py test\n \n-    - name: Deploy to VPS Server\n-      env:\n-        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n-        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n-        AWS_DEFAULT_REGION: ap-southeast-2\n-        BACKEND_USER: backend\n-        BACKEND_PASSWORD: backend\n-        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_PROD }}\n-        SERVER_IP: \"107.174.60.23\"\n-        # SERVER_IP: \"82.29.167.247\"\n-        PORT: \"8001\"\n-        SCREEN_NAME: \"collegeinfo\"\n-        PROJECT_FOLDER: \"/home/collegeinfo\"\n+#     - name: Deploy to VPS Server\n+#       env:\n+#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n+#         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n+#         AWS_DEFAULT_REGION: ap-southeast-2\n+#         BACKEND_USER: backend\n+#         BACKEND_PASSWORD: backend\n+#         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_PROD }}\n+#         SERVER_IP: \"107.174.60.23\"\n+#         # SERVER_IP: \"82.29.167.247\"\n+#         PORT: \"8001\"\n+#         SCREEN_NAME: \"collegeinfo\"\n+#         PROJECT_FOLDER: \"/home/collegeinfo\"\n \n-      run: |\n-        mkdir -p ~/.ssh\n-        echo \"${{ secrets.SSH_PRIVATE_KEY_PROD }}\" > ~/.ssh/id_rsa\n-        chmod 600 ~/.ssh/id_rsa\n+#       run: |\n+#         mkdir -p ~/.ssh\n+#         echo \"${{ secrets.SSH_PRIVATE_KEY_PROD }}\" > ~/.ssh/id_rsa\n+#         chmod 600 ~/.ssh/id_rsa\n \n-        # Install rsync\n-        #sudo apt-get install -y rsync\n+#         # Install rsync\n+#         #sudo apt-get install -y rsync\n \n-        # Create necessary directories on the server\n-        echo \"Create necessary directories on the server\"\n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"sudo apt-get install -y python3-venv\"\n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"mkdir -p $PROJECT_FOLDER\"\n+#         # Create necessary directories on the server\n+#         echo \"Create necessary directories on the server\"\n+#         # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"sudo apt-get install -y python3-venv\"\n+#         ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"mkdir -p $PROJECT_FOLDER\"\n \n-        # Use rsync to copy only changed files\n-        echo \"Use rsync to copy only changed files\"\n-        rsync -avz --delete --exclude='__pycache__/' --exclude='venv/' --exclude='db.sqlite3' --exclude='env/' --exclude='staticfiles/' --exclude='media/' --exclude='.git/' -e \"ssh -o StrictHostKeyChecking=no\" ./ root@$SERVER_IP:$PROJECT_FOLDER/\n+#         # Use rsync to copy only changed files\n+#         echo \"Use rsync to copy only changed files\"\n+#         rsync -avz --delete --exclude='__pycache__/' --exclude='venv/' --exclude='db.sqlite3' --exclude='env/' --exclude='staticfiles/' --exclude='media/' --exclude='.git/' -e \"ssh -o StrictHostKeyChecking=no\" ./ root@$SERVER_IP:$PROJECT_FOLDER/\n \n-        #copy and replace all files to cicd folder\n-        #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n+#         #copy and replace all files to cicd folder\n+#         #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n \n-        # Run deployment commands on the server\n-        echo \"Running deployment commands on the server\"\n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+#         # Run deployment commands on the server\n+#         echo \"Running deployment commands on the server\"\n+#         ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n         \n \n-        #echo \"Running deployment commands on the server\" && \n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+#         #echo \"Running deployment commands on the server\" && \n+#         # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"\n-        #     cd $PROJECT_FOLDER &&\n-        #     virtualenv venv &&\n-        #     source venv/bin/activate &&\n-        #     pip install -r requirements.txt &&\n-        #     python manage.py migrate &&\n-        #     python manage.py collectstatic --noinput &&\n-        #     python manage.py populate_blog &&\n-        #     python manage.py populate_book &&\n-        #     python manage.py populate_branch &&\n-        #     python manage.py populate_inquiry &&\n-        #     python manage.py populate_quot &&\n-        #     python manage.py populate_cat &&\n-        #     python manage.py populate_ser\n-        # \"\n+#         # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"\n+#         #     cd $PROJECT_FOLDER &&\n+#         #     virtualenv venv &&\n+#         #     source venv/bin/activate &&\n+#         #     pip install -r requirements.txt &&\n+#         #     python manage.py migrate &&\n+#         #     python manage.py collectstatic --noinput &&\n+#         #     python manage.py populate_blog &&\n+#         #     python manage.py populate_book &&\n+#         #     python manage.py populate_branch &&\n+#         #     python manage.py populate_inquiry &&\n+#         #     python manage.py populate_quot &&\n+#         #     python manage.py populate_cat &&\n+#         #     python manage.py populate_ser\n+#         # \"\n \n-#AmazonEC2FullAccess\n+# #AmazonEC2FullAccess\n"
                },
                {
                    "date": 1746437266840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,104 +1,104 @@\n-# name: CI/CD Pipeline\n+name: CI/CD Pipeline\n \n-# on:\n-#   push:\n-#     branches:\n-#       - main\n+on:\n+  push:\n+    branches:\n+      - main\n \n-# jobs:\n-#   build-and-deploy:\n-#     runs-on: ubuntu-latest\n+jobs:\n+  build-and-deploy:\n+    runs-on: ubuntu-latest\n \n-#     steps:\n-#     - name: Checkout code\n-#       uses: actions/checkout@v2\n+    steps:\n+    - name: Checkout code\n+      uses: actions/checkout@v2\n \n-#     - name: Set up Python\n-#       uses: actions/setup-python@v2\n-#       with:\n-#         python-version: 3.10.12\n+    - name: Set up Python\n+      uses: actions/setup-python@v2\n+      with:\n+        python-version: 3.10.12\n \n-#     - name: Upgrade pip and install setuptools\n-#       run: |\n-#         python -m pip install --upgrade pip\n-#         pip install --upgrade setuptools\n-#         pip install autobahn\n-#         # pip install autobahn==23.6.1\n+    - name: Upgrade pip and install setuptools\n+      run: |\n+        python -m pip install --upgrade pip\n+        pip install --upgrade setuptools\n+        pip install autobahn\n+        # pip install autobahn==23.6.1\n \n-#     - name: Install system dependencies\n-#       run: |\n-#         sudo apt-get update\n-#         sudo apt-get install -y build-essential libpq-dev python3-dev\n+    - name: Install system dependencies\n+      run: |\n+        sudo apt-get update\n+        sudo apt-get install -y build-essential libpq-dev python3-dev\n \n-#     - name: Install dependencies\n-#       run: |\n-#         pip install -r requirements.txt\n+    - name: Install dependencies\n+      run: |\n+        pip install -r requirements.txt\n \n \n-#     - name: Run tests\n-#       run: |\n-#         python manage.py test\n+    - name: Run tests\n+      run: |\n+        python manage.py test\n \n-#     - name: Deploy to VPS Server\n-#       env:\n-#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n-#         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n-#         AWS_DEFAULT_REGION: ap-southeast-2\n-#         BACKEND_USER: backend\n-#         BACKEND_PASSWORD: backend\n-#         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_PROD }}\n-#         SERVER_IP: \"107.174.60.23\"\n-#         # SERVER_IP: \"82.29.167.247\"\n-#         PORT: \"8001\"\n-#         SCREEN_NAME: \"collegeinfo\"\n-#         PROJECT_FOLDER: \"/home/collegeinfo\"\n+    - name: Deploy to VPS Server\n+      env:\n+        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n+        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n+        AWS_DEFAULT_REGION: ap-southeast-2\n+        BACKEND_USER: backend\n+        BACKEND_PASSWORD: backend\n+        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_PROD }}\n+        SERVER_IP: \"107.174.60.23\"\n+        # SERVER_IP: \"82.29.167.247\"\n+        PORT: \"8001\"\n+        SCREEN_NAME: \"collegeinfo\"\n+        PROJECT_FOLDER: \"/home/collegeinfo\"\n \n-#       run: |\n-#         mkdir -p ~/.ssh\n-#         echo \"${{ secrets.SSH_PRIVATE_KEY_PROD }}\" > ~/.ssh/id_rsa\n-#         chmod 600 ~/.ssh/id_rsa\n+      run: |\n+        mkdir -p ~/.ssh\n+        echo \"${{ secrets.SSH_PRIVATE_KEY_PROD }}\" > ~/.ssh/id_rsa\n+        chmod 600 ~/.ssh/id_rsa\n \n-#         # Install rsync\n-#         #sudo apt-get install -y rsync\n+        # Install rsync\n+        #sudo apt-get install -y rsync\n \n-#         # Create necessary directories on the server\n-#         echo \"Create necessary directories on the server\"\n-#         # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"sudo apt-get install -y python3-venv\"\n-#         ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"mkdir -p $PROJECT_FOLDER\"\n+        # Create necessary directories on the server\n+        echo \"Create necessary directories on the server\"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"sudo apt-get install -y python3-venv\"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"mkdir -p $PROJECT_FOLDER\"\n \n-#         # Use rsync to copy only changed files\n-#         echo \"Use rsync to copy only changed files\"\n-#         rsync -avz --delete --exclude='__pycache__/' --exclude='venv/' --exclude='db.sqlite3' --exclude='env/' --exclude='staticfiles/' --exclude='media/' --exclude='.git/' -e \"ssh -o StrictHostKeyChecking=no\" ./ root@$SERVER_IP:$PROJECT_FOLDER/\n+        # Use rsync to copy only changed files\n+        echo \"Use rsync to copy only changed files\"\n+        rsync -avz --delete --exclude='__pycache__/' --exclude='venv/' --exclude='db.sqlite3' --exclude='env/' --exclude='staticfiles/' --exclude='media/' --exclude='.git/' -e \"ssh -o StrictHostKeyChecking=no\" ./ root@$SERVER_IP:$PROJECT_FOLDER/\n \n-#         #copy and replace all files to cicd folder\n-#         #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n+        #copy and replace all files to cicd folder\n+        #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n \n-#         # Run deployment commands on the server\n-#         echo \"Running deployment commands on the server\"\n-#         ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        # Run deployment commands on the server\n+        echo \"Running deployment commands on the server\"\n+        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n         \n \n-#         #echo \"Running deployment commands on the server\" && \n-#         # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        #echo \"Running deployment commands on the server\" && \n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n-#         # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"\n-#         #     cd $PROJECT_FOLDER &&\n-#         #     virtualenv venv &&\n-#         #     source venv/bin/activate &&\n-#         #     pip install -r requirements.txt &&\n-#         #     python manage.py migrate &&\n-#         #     python manage.py collectstatic --noinput &&\n-#         #     python manage.py populate_blog &&\n-#         #     python manage.py populate_book &&\n-#         #     python manage.py populate_branch &&\n-#         #     python manage.py populate_inquiry &&\n-#         #     python manage.py populate_quot &&\n-#         #     python manage.py populate_cat &&\n-#         #     python manage.py populate_ser\n-#         # \"\n+        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"\n+        #     cd $PROJECT_FOLDER &&\n+        #     virtualenv venv &&\n+        #     source venv/bin/activate &&\n+        #     pip install -r requirements.txt &&\n+        #     python manage.py migrate &&\n+        #     python manage.py collectstatic --noinput &&\n+        #     python manage.py populate_blog &&\n+        #     python manage.py populate_book &&\n+        #     python manage.py populate_branch &&\n+        #     python manage.py populate_inquiry &&\n+        #     python manage.py populate_quot &&\n+        #     python manage.py populate_cat &&\n+        #     python manage.py populate_ser\n+        # \"\n \n-# #AmazonEC2FullAccess\n+#AmazonEC2FullAccess\n"
                },
                {
                    "date": 1751028513222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n         AWS_DEFAULT_REGION: ap-southeast-2\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n-        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_PROD }}\n+        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_RESULT }}\n         SERVER_IP: \"107.174.60.23\"\n         # SERVER_IP: \"82.29.167.247\"\n         PORT: \"8001\"\n         SCREEN_NAME: \"collegeinfo\"\n"
                },
                {
                    "date": 1751028523080,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,18 +45,18 @@\n         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n         AWS_DEFAULT_REGION: ap-southeast-2\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n-        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_RESULT }}\n+        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_RESULT}}\n         SERVER_IP: \"107.174.60.23\"\n         # SERVER_IP: \"82.29.167.247\"\n         PORT: \"8001\"\n         SCREEN_NAME: \"collegeinfo\"\n         PROJECT_FOLDER: \"/home/collegeinfo\"\n \n       run: |\n         mkdir -p ~/.ssh\n-        echo \"${{ secrets.SSH_PRIVATE_KEY_PROD }}\" > ~/.ssh/id_rsa\n+        echo \"${{ secrets.SSH_PRIVATE_KEY_RESULT }}\" > ~/.ssh/id_rsa\n         chmod 600 ~/.ssh/id_rsa\n \n         # Install rsync\n         #sudo apt-get install -y rsync\n"
                },
                {
                    "date": 1751028602300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,17 +46,17 @@\n         AWS_DEFAULT_REGION: ap-southeast-2\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_RESULT}}\n-        SERVER_IP: \"107.174.60.23\"\n+        SERVER_IP: \"54.253.102.115\"\n         # SERVER_IP: \"82.29.167.247\"\n         PORT: \"8001\"\n         SCREEN_NAME: \"collegeinfo\"\n         PROJECT_FOLDER: \"/home/collegeinfo\"\n \n       run: |\n         mkdir -p ~/.ssh\n-        echo \"${{ secrets.SSH_PRIVATE_KEY_RESULT }}\" > ~/.ssh/id_rsa\n+        echo \"${{ secrets.SSH_PRIVATE_KEY_RESULT}}\" > ~/.ssh/id_rsa\n         chmod 600 ~/.ssh/id_rsa\n \n         # Install rsync\n         #sudo apt-get install -y rsync\n"
                },
                {
                    "date": 1751028735198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,31 +62,31 @@\n         #sudo apt-get install -y rsync\n \n         # Create necessary directories on the server\n         echo \"Create necessary directories on the server\"\n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"sudo apt-get install -y python3-venv\"\n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"mkdir -p $PROJECT_FOLDER\"\n+        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"sudo apt-get install -y python3-venv\"\n+        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"mkdir -p $PROJECT_FOLDER\"\n \n         # Use rsync to copy only changed files\n         echo \"Use rsync to copy only changed files\"\n-        rsync -avz --delete --exclude='__pycache__/' --exclude='venv/' --exclude='db.sqlite3' --exclude='env/' --exclude='staticfiles/' --exclude='media/' --exclude='.git/' -e \"ssh -o StrictHostKeyChecking=no\" ./ root@$SERVER_IP:$PROJECT_FOLDER/\n+        rsync -avz --delete --exclude='__pycache__/' --exclude='venv/' --exclude='db.sqlite3' --exclude='env/' --exclude='staticfiles/' --exclude='media/' --exclude='.git/' -e \"ssh -o StrictHostKeyChecking=no\" ./ ubuntu@$SERVER_IP:$PROJECT_FOLDER/\n \n         #copy and replace all files to cicd folder\n-        #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n+        #scp -r -o StrictHostKeyChecking=no ./* ubuntu@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n+        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n         \n         \n \n         #echo \"Running deployment commands on the server\" && \n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n \n \n \n-        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"\n+        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"\n         #     cd $PROJECT_FOLDER &&\n         #     virtualenv venv &&\n         #     source venv/bin/activate &&\n         #     pip install -r requirements.txt &&\n"
                },
                {
                    "date": 1751028951007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n         SERVER_IP: \"54.253.102.115\"\n         # SERVER_IP: \"82.29.167.247\"\n         PORT: \"8001\"\n         SCREEN_NAME: \"collegeinfo\"\n-        PROJECT_FOLDER: \"/home/collegeinfo\"\n+        PROJECT_FOLDER: \"/home/ubun/collegeinfo\"\n \n       run: |\n         mkdir -p ~/.ssh\n         echo \"${{ secrets.SSH_PRIVATE_KEY_RESULT}}\" > ~/.ssh/id_rsa\n"
                },
                {
                    "date": 1751036540843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,13 +46,13 @@\n         AWS_DEFAULT_REGION: ap-southeast-2\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_RESULT}}\n-        SERVER_IP: \"54.253.102.115\"\n+        SERVER_IP: \"1\"\n         # SERVER_IP: \"82.29.167.247\"\n         PORT: \"8001\"\n         SCREEN_NAME: \"collegeinfo\"\n-        PROJECT_FOLDER: \"/home/ubun/collegeinfo\"\n+        PROJECT_FOLDER: \"/home/ubuntu/collegeinfo\"\n \n       run: |\n         mkdir -p ~/.ssh\n         echo \"${{ secrets.SSH_PRIVATE_KEY_RESULT}}\" > ~/.ssh/id_rsa\n"
                },
                {
                    "date": 1751036580690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n         AWS_DEFAULT_REGION: ap-southeast-2\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_RESULT}}\n-        SERVER_IP: \"1\"\n+        SERVER_IP: \"13.237.94.113\"\n         # SERVER_IP: \"82.29.167.247\"\n         PORT: \"8001\"\n         SCREEN_NAME: \"collegeinfo\"\n         PROJECT_FOLDER: \"/home/ubuntu/collegeinfo\"\n"
                },
                {
                    "date": 1751037072539,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n         AWS_DEFAULT_REGION: ap-southeast-2\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_RESULT}}\n-        SERVER_IP: \"13.237.94.113\"\n+        SERVER_IP: \"\"\n         # SERVER_IP: \"82.29.167.247\"\n         PORT: \"8001\"\n         SCREEN_NAME: \"collegeinfo\"\n         PROJECT_FOLDER: \"/home/ubuntu/collegeinfo\"\n"
                },
                {
                    "date": 1751037168101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n         AWS_DEFAULT_REGION: ap-southeast-2\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_RESULT}}\n-        SERVER_IP: \"\"\n+        SERVER_IP: \"3.107.90.36\"\n         # SERVER_IP: \"82.29.167.247\"\n         PORT: \"8001\"\n         SCREEN_NAME: \"collegeinfo\"\n         PROJECT_FOLDER: \"/home/ubuntu/collegeinfo\"\n"
                }
            ],
            "date": 1733397109290,
            "name": "Commit-0",
            "content": "name: CI/CD Pipeline\n\non:\n  push:\n    branches:\n      - main\n\njobs:\n  build-and-deploy:\n    runs-on: ubuntu-latest\n\n    steps:\n    - name: Checkout code\n      uses: actions/checkout@v2\n\n    - name: Set up Python\n      uses: actions/setup-python@v2\n      with:\n        python-version: 3.10.12\n\n    - name: Upgrade pip and install setuptools\n      run: |\n        python -m pip install --upgrade pip==21.2.4\n        # pip install setuptools<72.0.0\n        # pip install autobahn\n        # pip install autobahn==23.6.1\n\n    - name: Install dependencies\n      run: |\n        # python -m pip install --upgrade pip\n        pip install -r requirements.txt --use-deprecated=legacy-resolver\n\n    - name: Run tests\n      run: |\n        python manage.py test\n\n    - name: Deploy to VPS Server\n      env:\n        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n        AWS_DEFAULT_REGION: ap-southeast-2\n        BACKEND_USER: backend\n        BACKEND_PASSWORD: backend\n        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n        SERVER_IP: \"142.171.168.136\"\n        PORT: \"8007\"\n        SCREEN_NAME: \"nepalcity\"\n        PROJECT_FOLDER: \"/home/nepalcity\"\n\n      run: |\n        mkdir -p ~/.ssh\n        echo \"${{ secrets.SSH_PRIVATE_KEY }}\" > ~/.ssh/id_rsa\n        chmod 600 ~/.ssh/id_rsa\n\n        # Install rsync\n        #sudo apt-get install -y rsync\n\n        # Create necessary directories on the server\n        echo \"Create necessary directories on the server\"\n        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"sudo apt-get install -y python3-venv\"\n        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"mkdir -p $PROJECT_FOLDER\"\n\n        # Use rsync to copy only changed files\n        echo \"Use rsync to copy only changed files\"\n        rsync -avz --delete --exclude='__pycache__/' --exclude='venv/' --exclude='db.sqlite3' --exclude='env/' --exclude='staticfiles/' --exclude='media/' --exclude='.git/' -e \"ssh -o StrictHostKeyChecking=no\" ./ root@$SERVER_IP:$PROJECT_FOLDER/\n\n        #copy and replace all files to cicd folder\n        #scp -r -o StrictHostKeyChecking=no ./* root@$SERVER_IP:$PROJECT_FOLDER/\n\n        # Run deployment commands on the server\n        echo \"Running deployment commands on the server\"\n        ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput \"\n        \n        #echo \"Running deployment commands on the server\" && \n        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"cd $PROJECT_FOLDER && virtualenv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n\n\n\n\n        # ssh -o StrictHostKeyChecking=no root@$SERVER_IP \"\n        #     cd $PROJECT_FOLDER &&\n        #     virtualenv venv &&\n        #     source venv/bin/activate &&\n        #     pip install -r requirements.txt &&\n        #     python manage.py migrate &&\n        #     python manage.py collectstatic --noinput &&\n        #     python manage.py populate_blog &&\n        #     python manage.py populate_book &&\n        #     python manage.py populate_branch &&\n        #     python manage.py populate_inquiry &&\n        #     python manage.py populate_quot &&\n        #     python manage.py populate_cat &&\n        #     python manage.py populate_ser\n        # \"\n\n#AmazonEC2FullAccess"
        }
    ]
}