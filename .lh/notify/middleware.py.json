{
    "sourceFile": "notify/middleware.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1739871159447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1739871159447,
            "name": "Commit-0",
            "content": "import threading\n\n_request_local = threading.local()\n\nclass CaptureUserMiddleware:\n    \"\"\"\n    Middleware to store the current request user.\n    This allows signals to detect who performed the action.\n    \"\"\"\n    def __init__(self, get_response):\n        self.get_response = get_response\n\n    def __call__(self, request):\n        _request_local.user = request.user if request.user.is_authenticated else None\n        response = self.get_response(request)\n        return response\n\ndef get_current_user():\n    \"\"\"\n    Retrieve the user performing the request.\n    Returns None if there's no user context.\n    \"\"\"\n    return getattr(_request_local, \"user\", None)\n"
        }
    ]
}