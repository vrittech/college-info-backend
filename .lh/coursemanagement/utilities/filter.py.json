{
    "sourceFile": "coursemanagement/utilities/filter.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1739267387711,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739267392856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import django_filters\n from django_filters import rest_framework as filters\n-from .models import Course\n+from ..models import Course\n \n class CharInFilter(django_filters.BaseInFilter, django_filters.CharFilter):\n     pass\n \n"
                }
            ],
            "date": 1739267387711,
            "name": "Commit-0",
            "content": "import django_filters\nfrom django_filters import rest_framework as filters\nfrom .models import Course\n\nclass CharInFilter(django_filters.BaseInFilter, django_filters.CharFilter):\n    pass\n\nclass NumberInFilter(django_filters.BaseInFilter, django_filters.NumberFilter):\n    pass\n\nclass CourseFilter(filters.FilterSet):\n    id = NumberInFilter(field_name='id', lookup_expr='in')\n    name = CharInFilter(field_name='name', lookup_expr='in')\n    abbreviation = CharInFilter(field_name='abbreviation', lookup_expr='in')\n    duration = NumberInFilter(field_name='duration__id', lookup_expr='in')\n    faculty = NumberInFilter(field_name='faculty__id', lookup_expr='in')\n    level = NumberInFilter(field_name='level__id', lookup_expr='in')\n    affiliation = NumberInFilter(field_name='affiliation__id', lookup_expr='in')\n    description = CharInFilter(field_name='description', lookup_expr='in')\n    course_shortdescription = CharInFilter(field_name='course_shortdescription', lookup_expr='in')\n    course_outcome = CharInFilter(field_name='course_outcome', lookup_expr='in')\n    eligibility_criteria = CharInFilter(field_name='eligibility_criteria', lookup_expr='in')\n    created_date = filters.DateFromToRangeFilter(field_name='created_date')\n    updated_date = filters.DateTimeFromToRangeFilter(field_name='updated_date')\n\n    class Meta:\n        model = Course\n        fields = [\n            'id', 'name', 'abbreviation', 'duration', 'faculty', 'level',\n            'affiliation', 'description', 'course_shortdescription', \n            'course_outcome', 'eligibility_criteria', 'created_date', 'updated_date'\n        ]\n"
        }
    ]
}