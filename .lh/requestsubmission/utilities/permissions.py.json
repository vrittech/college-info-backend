{
    "sourceFile": "requestsubmission/utilities/permissions.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1739258482809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739264094872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,35 @@\n+from rest_framework.permissions import BasePermission\n+\n+REQUEST_SUBMISSION_PERMISSIONS = {\n+    \"add\": \"add_requestsubmission\",\n+    \"change\": \"change_requestsubmission\",\n+    \"delete\": \"delete_requestsubmission\",\n+    \"view\": \"view_requestsubmission\",\n+}\n+\n+def HasPermission(request, codename):\n+    \"\"\"Check if the user has a specific Django permission\"\"\"\n+    return request.user.has_perm(f\"app_name.{codename}\")\n+\n+class RequestSubmissionPermission(BasePermission):\n+    \"\"\"\n+    Permission class for managing request submissions based strictly on Django permissions.\n+    \"\"\"\n+\n+    def has_permission(self, request, view):\n+        if view.action in [\"list\"]:\n+            return True\n+\n+        elif view.action in [\"retrieve\"]:\n+            return HasPermission(request, REQUEST_SUBMISSION_PERMISSIONS[\"view\"])\n+\n+        elif view.action in [\"create\"]:\n+            return HasPermission(request, REQUEST_SUBMISSION_PERMISSIONS[\"add\"])\n+\n+        elif view.action in [\"update\", \"partial_update\"]:\n+            return HasPermission(request, REQUEST_SUBMISSION_PERMISSIONS[\"change\"])\n+\n+        elif view.action == \"destroy\":\n+            return HasPermission(request, REQUEST_SUBMISSION_PERMISSIONS[\"delete\"])\n+\n+        return False  # Default deny access\n"
                },
                {
                    "date": 1739264908669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n def HasPermission(request, codename):\n     \"\"\"Check if the user has a specific Django permission\"\"\"\n     return request.user.has_perm(f\"app_name.{codename}\")\n \n-class RequestSubmissionPermission(BasePermission):\n+class requestSubmissionPermission(BasePermission):\n     \"\"\"\n     Permission class for managing request submissions based strictly on Django permissions.\n     \"\"\"\n \n@@ -32,39 +32,4 @@\n         elif view.action == \"destroy\":\n             return HasPermission(request, REQUEST_SUBMISSION_PERMISSIONS[\"delete\"])\n \n         return False  # Default deny access\n-from rest_framework.permissions import BasePermission\n-\n-REQUEST_SUBMISSION_PERMISSIONS = {\n-    \"add\": \"add_requestsubmission\",\n-    \"change\": \"change_requestsubmission\",\n-    \"delete\": \"delete_requestsubmission\",\n-    \"view\": \"view_requestsubmission\",\n-}\n-\n-def HasPermission(request, codename):\n-    \"\"\"Check if the user has a specific Django permission\"\"\"\n-    return request.user.has_perm(f\"app_name.{codename}\")\n-\n-class RequestSubmissionPermission(BasePermission):\n-    \"\"\"\n-    Permission class for managing request submissions based strictly on Django permissions.\n-    \"\"\"\n-\n-    def has_permission(self, request, view):\n-        if view.action in [\"list\"]:\n-            return HasPermission(request, REQUEST_SUBMISSION_PERMISSIONS[\"view\"])\n-\n-        elif view.action in [\"retrieve\"]:\n-            return HasPermission(request, REQUEST_SUBMISSION_PERMISSIONS[\"view\"])\n-\n-        elif view.action in [\"create\"]:\n-            return HasPermission(request, REQUEST_SUBMISSION_PERMISSIONS[\"add\"])\n-\n-        elif view.action in [\"update\", \"partial_update\"]:\n-            return HasPermission(request, REQUEST_SUBMISSION_PERMISSIONS[\"change\"])\n-\n-        elif view.action == \"destroy\":\n-            return HasPermission(request, REQUEST_SUBMISSION_PERMISSIONS[\"delete\"])\n-\n-        return False  # Default deny access\n"
                },
                {
                    "date": 1739264922617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n def HasPermission(request, codename):\n     \"\"\"Check if the user has a specific Django permission\"\"\"\n     return request.user.has_perm(f\"app_name.{codename}\")\n \n-class requestSubmissionPermission(BasePermission):\n+class requestsubmissionPermission(BasePermission):\n     \"\"\"\n     Permission class for managing request submissions based strictly on Django permissions.\n     \"\"\"\n \n"
                }
            ],
            "date": 1739258482809,
            "name": "Commit-0",
            "content": "from rest_framework.permissions import BasePermission\n\nREQUEST_SUBMISSION_PERMISSIONS = {\n    \"add\": \"add_requestsubmission\",\n    \"change\": \"change_requestsubmission\",\n    \"delete\": \"delete_requestsubmission\",\n    \"view\": \"view_requestsubmission\",\n}\n\ndef HasPermission(request, codename):\n    \"\"\"Check if the user has a specific Django permission\"\"\"\n    return request.user.has_perm(f\"app_name.{codename}\")\n\nclass RequestSubmissionPermission(BasePermission):\n    \"\"\"\n    Permission class for managing request submissions based strictly on Django permissions.\n    \"\"\"\n\n    def has_permission(self, request, view):\n        if view.action in [\"list\"]:\n            return HasPermission(request, REQUEST_SUBMISSION_PERMISSIONS[\"view\"])\n\n        elif view.action in [\"retrieve\"]:\n            return HasPermission(request, REQUEST_SUBMISSION_PERMISSIONS[\"view\"])\n\n        elif view.action in [\"create\"]:\n            return HasPermission(request, REQUEST_SUBMISSION_PERMISSIONS[\"add\"])\n\n        elif view.action in [\"update\", \"partial_update\"]:\n            return HasPermission(request, REQUEST_SUBMISSION_PERMISSIONS[\"change\"])\n\n        elif view.action == \"destroy\":\n            return HasPermission(request, REQUEST_SUBMISSION_PERMISSIONS[\"delete\"])\n\n        return False  # Default deny access\n"
        }
    ]
}