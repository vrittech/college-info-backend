{
    "sourceFile": "accounts/signals.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1739425665260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739428521822,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +0,0 @@\n-# signals.py\n-\n-from django.db.models.signals import post_save\n-from django.dispatch import receiver\n-from .models import CustomUser,GroupExtension\n-\n-@receiver(post_save, sender=CustomUser)\n-def set_position_same_as_id(sender, instance, created, **kwargs):\n-    if created and instance.position != instance.id:\n-        instance.position = instance.id\n-        instance.save()\n-\n-        \n-# @receiver(post_save, sender=ProjectService)\n-# def set_position_same_as_id(sender, instance, created, **kwargs):\n-#     if created and instance.position != instance.id:\n-#         instance.position = instance.id\n-#         instance.save()\n-\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739943889475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,63 @@\n+from django.db.models.signals import m2m_changed\n+from django.dispatch import receiver\n+from django.contrib.auth.models import Group, Permission\n+from your_app.models import College, CustomUser  # Update with actual models\n \n+@receiver(m2m_changed, sender=College.users.through)  # Ensure the related field is correct\n+def assign_college_admin_group(sender, instance, action, pk_set, **kwargs):\n+    \"\"\"\n+    When a user is assigned to a college, assign them to the 'College Admin' group.\n+    Only applicable if the user is assigned to at least one college.\n+    \"\"\"\n+    if action == \"post_add\":  # Ensure it's triggered only after assignment\n+\n+        # Ensure 'College Admin' group exists\n+        college_admin_group, created = Group.objects.get_or_create(name=\"College Admin\")\n+\n+        if created:\n+            # Define required permissions\n+            permissions_to_assign = [\n+                # Request Submission - CRU\n+                \"add_request_submission\", \"change_request_submission\", \"view_request_submission\",\n+\n+                # College Management - CRU\n+                \"add_college\", \"change_college\", \"view_college\",\n+\n+                # Courses and Fees - CRUD\n+                \"add_courses_and_fees\", \"change_courses_and_fees\", \"delete_courses_and_fees\", \"view_courses_and_fees\",\n+\n+                # Facilities - CRUD\n+                \"add_facility\", \"change_facility\", \"delete_facility\", \"view_facility\",\n+\n+                # College Gallery - CRUD\n+                \"add_college_gallery\", \"change_college_gallery\", \"delete_college_gallery\", \"view_college_gallery\",\n+\n+                # FAQ about College - CRUD\n+                \"add_college_faqs\", \"change_college_faqs\", \"delete_college_faqs\", \"view_college_faqs\",\n+\n+                # Inquiry - View Only\n+                \"view_inquiry\",\n+\n+                # Contact Us - CRU\n+                \"add_contact\", \"change_contact\", \"view_contact\",\n+\n+                # Own Profile - CRU\n+                \"add_custom_user\", \"change_custom_user\", \"view_custom_user\",\n+            ]\n+\n+            # Assign permissions to the group\n+            for perm_name in permissions_to_assign:\n+                try:\n+                    permission = Permission.objects.get(codename=perm_name)\n+                    college_admin_group.permissions.add(permission)\n+                except Permission.DoesNotExist:\n+                    print(f\"Permission '{perm_name}' not found.\")\n+\n+        # Assign users to the 'College Admin' group only if they are assigned to a college\n+        for user_id in pk_set:\n+            user = CustomUser.objects.get(pk=user_id)\n+\n+            # Ensure the user has at least one college\n+            if user.colleges.exists():  # Assuming 'colleges' is the related_name\n+                user.groups.add(college_admin_group)  # Add to group\n+                user.save()\n"
                },
                {
                    "date": 1739943897380,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n from django.db.models.signals import m2m_changed\n from django.dispatch import receiver\n from django.contrib.auth.models import Group, Permission\n-from your_app.models import College, CustomUser  # Update with actual models\n+from acc.models import College, CustomUser  # Update with actual models\n \n @receiver(m2m_changed, sender=College.users.through)  # Ensure the related field is correct\n def assign_college_admin_group(sender, instance, action, pk_set, **kwargs):\n     \"\"\"\n"
                }
            ],
            "date": 1739425665260,
            "name": "Commit-0",
            "content": "# signals.py\n\nfrom django.db.models.signals import post_save\nfrom django.dispatch import receiver\nfrom .models import CustomUser,GroupExtension\n\n@receiver(post_save, sender=CustomUser)\ndef set_position_same_as_id(sender, instance, created, **kwargs):\n    if created and instance.position != instance.id:\n        instance.position = instance.id\n        instance.save()\n\n        \n# @receiver(post_save, sender=ProjectService)\n# def set_position_same_as_id(sender, instance, created, **kwargs):\n#     if created and instance.position != instance.id:\n#         instance.position = instance.id\n#         instance.save()\n\n"
        }
    ]
}