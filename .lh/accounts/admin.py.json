{
    "sourceFile": "accounts/admin.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1733643783199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1733643900692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n         ('Permissions', {'fields': ('is_active', 'is_staff', 'is_superuser','groups')}),\n     )\n     \n     list_display = ['username', 'email', 'position','phone', 'is_active', 'is_staff', 'professional_image', 'avatar']\n-    search_fields = ['username', 'email', 'full_name','roles',]\n+    search_fields = ['username', 'email', 'full_name']\n \n admin.site.register(CustomUser, CustomUserAdmin)\n \n \n"
                },
                {
                    "date": 1733643906712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n     \n     # Only include fields that are present in the model\n     fieldsets = (\n         (None, {'fields': ('username', 'password')}),\n-        ('Personal info', {'fields': ('first_name', 'last_name', 'email','roles','phone', 'avatar', 'professional_image', 'position',)}),\n+        ('Personal info', {'fields': ('first_name', 'last_name', 'email','phone', 'avatar', 'professional_image', 'position',)}),\n         ('Permissions', {'fields': ('is_active', 'is_staff', 'is_superuser','groups')}),\n     )\n     \n     list_display = ['username', 'email', 'position','phone', 'is_active', 'is_staff', 'professional_image', 'avatar']\n"
                },
                {
                    "date": 1739423287391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,25 +1,33 @@\n+from django.core.exceptions import PermissionDenied\n from django.contrib import admin\n from django.contrib.auth.admin import UserAdmin as BaseUserAdmin\n-from django.contrib.auth.models import Group\n from .models import CustomUser, GroupExtension\n \n class CustomUserAdmin(BaseUserAdmin):\n     exclude = ('user_permissions',)\n-    \n+\n     # Only include fields that are present in the model\n     fieldsets = (\n         (None, {'fields': ('username', 'password')}),\n-        ('Personal info', {'fields': ('first_name', 'last_name', 'email','phone', 'avatar', 'professional_image', 'position',)}),\n-        ('Permissions', {'fields': ('is_active', 'is_staff', 'is_superuser','groups')}),\n+        ('Personal info', {'fields': ('first_name', 'last_name', 'email', 'phone', 'avatar', 'professional_image', 'position')}),\n+        ('Permissions', {'fields': ('is_active', 'is_staff', 'is_superuser', 'groups')}),\n     )\n     \n-    list_display = ['username', 'email', 'position','phone', 'is_active', 'is_staff', 'professional_image', 'avatar']\n+    list_display = ['username', 'email', 'position', 'phone', 'is_active', 'is_staff', 'professional_image', 'avatar']\n     search_fields = ['username', 'email', 'full_name']\n \n+    def delete_model(self, request, obj):\n+        # Prevent deleting superusers (including the logged-in admin)\n+        if obj.is_superuser and obj != request.user:\n+            raise PermissionDenied(\"Superusers cannot be deleted.\")\n+        \n+        # Call the parent delete method to actually delete the user\n+        super().delete_model(request, obj)\n+\n admin.site.register(CustomUser, CustomUserAdmin)\n \n-\n+# Register GroupExtension model\n @admin.register(GroupExtension)\n class GroupExtensionAdmin(admin.ModelAdmin):\n     list_display = ['group', 'position']\n     search_fields = ['group__name']\n"
                },
                {
                    "date": 1739423296275,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n from django.core.exceptions import PermissionDenied\n from django.contrib import admin\n from django.contrib.auth.admin import UserAdmin as BaseUserAdmin\n-from .models import CustomUser, GroupExtension\n+from .models import CustomUser, GroupExtension, Group\n \n class CustomUserAdmin(BaseUserAdmin):\n     exclude = ('user_permissions',)\n \n"
                },
                {
                    "date": 1739425648614,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,18 +26,18 @@\n \n admin.site.register(CustomUser, CustomUserAdmin)\n \n # Register GroupExtension model\n-@admin.register(GroupExtension)\n-class GroupExtensionAdmin(admin.ModelAdmin):\n-    list_display = ['group', 'position']\n-    search_fields = ['group__name']\n-    list_filter = ['position']\n-    ordering = ['position']\n+# @admin.register(GroupExtension)\n+# class GroupExtensionAdmin(admin.ModelAdmin):\n+#     list_display = ['group', 'position']\n+#     search_fields = ['group__name']\n+#     list_filter = ['position']\n+#     ordering = ['position']\n \n-    def save_model(self, request, obj, form, change):\n-        # Override save_model to handle custom position saving logic if needed\n-        super().save_model(request, obj, form, change)\n+#     def save_model(self, request, obj, form, change):\n+#         # Override save_model to handle custom position saving logic if needed\n+#         super().save_model(request, obj, form, change)\n \n # Unregister and register Group to customize admin panel if necessary\n admin.site.unregister(Group)\n admin.site.register(Group)\n"
                },
                {
                    "date": 1739425720920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n from django.core.exceptions import PermissionDenied\n from django.contrib import admin\n from django.contrib.auth.admin import UserAdmin as BaseUserAdmin\n-from .models import CustomUser, GroupExtension, Group\n+from .models import CustomUser, Group\n \n class CustomUserAdmin(BaseUserAdmin):\n     exclude = ('user_permissions',)\n \n"
                },
                {
                    "date": 1739703538323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n \n     # Only include fields that are present in the model\n     fieldsets = (\n         (None, {'fields': ('username', 'password')}),\n-        ('Personal info', {'fields': ('first_name', 'last_name', 'email', 'phone', 'avatar', 'professional_image', 'position')}),\n+        ('Personal info', {'fields': ('first_name', 'last_name', 'email', 'phone', 'avatar', 'professional_image', 'college')}),\n         ('Permissions', {'fields': ('is_active', 'is_staff', 'is_superuser', 'groups')}),\n     )\n     \n     list_display = ['username', 'email', 'position', 'phone', 'is_active', 'is_staff', 'professional_image', 'avatar']\n"
                },
                {
                    "date": 1741332026997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     # Only include fields that are present in the model\n     fieldsets = (\n         (None, {'fields': ('username', 'password')}),\n         ('Personal info', {'fields': ('first_name', 'last_name', 'email', 'phone', 'avatar', 'professional_image', 'college')}),\n-        ('Permissions', {'fields': ('is_active', 'is_staff', 'is_superuser', 'groups')}),\n+        ('Permissions', {'fields': ('is_active', 'is_staff', 'is_superuser', 'groups','i')}),\n     )\n     \n     list_display = ['username', 'email', 'position', 'phone', 'is_active', 'is_staff', 'professional_image', 'avatar']\n     search_fields = ['username', 'email', 'full_name']\n"
                }
            ],
            "date": 1733643783199,
            "name": "Commit-0",
            "content": "from django.contrib import admin\nfrom django.contrib.auth.admin import UserAdmin as BaseUserAdmin\nfrom django.contrib.auth.models import Group\nfrom .models import CustomUser, GroupExtension\n\nclass CustomUserAdmin(BaseUserAdmin):\n    exclude = ('user_permissions',)\n    \n    # Only include fields that are present in the model\n    fieldsets = (\n        (None, {'fields': ('username', 'password')}),\n        ('Personal info', {'fields': ('first_name', 'last_name', 'email','roles','phone', 'avatar', 'professional_image', 'position',)}),\n        ('Permissions', {'fields': ('is_active', 'is_staff', 'is_superuser','groups')}),\n    )\n    \n    list_display = ['username', 'email', 'position','phone', 'is_active', 'is_staff', 'professional_image', 'avatar']\n    search_fields = ['username', 'email', 'full_name','roles',]\n\nadmin.site.register(CustomUser, CustomUserAdmin)\n\n\n@admin.register(GroupExtension)\nclass GroupExtensionAdmin(admin.ModelAdmin):\n    list_display = ['group', 'position']\n    search_fields = ['group__name']\n    list_filter = ['position']\n    ordering = ['position']\n\n    def save_model(self, request, obj, form, change):\n        # Override save_model to handle custom position saving logic if needed\n        super().save_model(request, obj, form, change)\n\n# Unregister and register Group to customize admin panel if necessary\nadmin.site.unregister(Group)\nadmin.site.register(Group)\n"
        }
    ]
}