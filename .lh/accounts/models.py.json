{
    "sourceFile": "accounts/models.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1728378543650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1728378596360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,76 +1,32 @@\n from django.db import models\n-from django.db import models\n-from .utilities.model_utils import LowercaseEmailField\n from django.contrib.auth.models import AbstractUser\n-from ..accountsmanagement.roles import roles_data,roles_data_dict\n-from ..accountsmanagementimport roles\n-import uuid\n-from django.db.models import Sum\n-from .utilities.validators import validate_emails, validate_mobile_number\n-from django.utils.translation import gettext_lazy as _\n+# from department.models import Department\n \n+# Create your models here.\n class CustomUser(AbstractUser):\n-    public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n-    phone = models.CharField(max_length=15,null=True , default = '')\n-    email = LowercaseEmailField(\n-            _(\"email address\"),\n-            unique=True,\n-            validators=[validate_emails],\n-            error_messages={\"unique\": \"Given Email has already been registered.\"},\n-            null=True,\n-            blank=True,\n-        )\n-    username = models.CharField(max_length=255,unique=True)  \n+    avatar = models.ImageField(upload_to='profile',null=True,blank=True)\n+    professional_image = models.ImageField(upload_to='profile',null=True,blank=True)\n \n-    last_name = models.CharField(max_length=255,null = True,default = '')  \n-    dob = models.DateField(null= True,blank= True ) \n+    full_name = models.CharField(max_length = 250)\n+    position = models.CharField(max_length = 250,null = True)\n+    department = models.ForeignKey(Department,null = True,on_delete = models.SET_NULL)\n+    position = models.CharField(max_length = 250)\n+    email = models.EmailField(max_length = 250,unique = True)\n \n-    is_active = models.BooleanField(default=True)\n-    remarks = models.CharField(max_length=200,null=True,default = '')\n \n-    is_verified = models.BooleanField(default=False)\n+    USERNAME_FIELD = 'email'\n+    REQUIRED_FIELDS = ['username']\n \n-    created_date = models.DateTimeField(auto_now_add=True)\n-    updated_date = models.DateTimeField(auto_now=True)\n- \n-    image = models.ImageField(upload_to=\"profiles/images\",default=None,null=True,blank=True)\n-    role = models.PositiveSmallIntegerField(choices=roles_data, blank=True, null=True,default = 5)\n+    created_at = models.DateTimeField(auto_now_add=True)\n+    updated_at = models.DateTimeField(auto_now=True)\n \n-    system_provider = 1\n-    google_provider = 2\n-    facebook_provider = 3\n \n-    old_password_change_case = models.BooleanField(default=True) \n+    def __str__(self):\n+        return self.username\n+    \n+    class Meta:\n+        permissions = [\n+            ('can_verify_user', 'Can verify user'),\n+        ]\n \n-    provider_CHOICES = (\n-        (system_provider, 'system'),\n-        (google_provider, 'google'),\n-        (facebook_provider, 'facebook'), \n-        (4, 'apple'), \n \n-    )\n-    provider = models.PositiveSmallIntegerField(choices=provider_CHOICES,default = system_provider)\n-\n-    USERNAME_FIELD = 'email'\n-    REQUIRED_FIELDS = ['username']\n-\n\\ No newline at end of file\n-    def getRoleName(self):\n-        if self.role==roles.SUPER_ADMIN:\n-            return roles_data_dict[roles.SUPER_ADMIN]\n-        elif self.role == roles.ADMIN:\n-            return roles_data_dict[roles.ADMIN]\n-        elif self.role == roles.USER:\n-            return roles_data_dict[roles.USER]\n-        else:\n-            return None\n-        \n-    def __str__(self):\n-        return self.username + \" \"+ str(self.getRoleName())\n-    \n-    @property\n-    def full_name(self):\n-        try:\n-            return self.first_name + \" \" + self.last_name\n-        except:\n-            return self.username\n-    \n"
                },
                {
                    "date": 1733380853221,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,33 @@\n from django.db import models\n from django.contrib.auth.models import AbstractUser\n-# from department.models import Department\n+frpm # from socialmedia.models import SocialMedia\n+from django.contrib.auth.models import Group, Permission\n \n # Create your models here.\n class CustomUser(AbstractUser):\n+    roles = models.CharField(max_length = 250,null = True)\n+    # department = models.ForeignKey(Department,null = True,on_delete = models.SET_NULL)\n+    email = models.EmailField(max_length = 250,unique = True)\n+    full_name = models.CharField(max_length = 250,null = True)\n+    # social_links = models.ManyToManyField(SocialMedia,blank=True)\n+    position = models.PositiveIntegerField(default=0)\n+    phone = models.CharField(max_length=15,null=True , default = '')\n+    \n+    groups = models.ManyToManyField(\n+        Group,\n+        related_name=\"customuser_groups\",  # Custom related name\n+        blank=True\n+    )\n+    user_permissions = models.ManyToManyField(\n+        Permission,\n+        related_name=\"customuser_permissions\",  # Custom related name\n+        blank=True\n+    )\n+\n     avatar = models.ImageField(upload_to='profile',null=True,blank=True)\n     professional_image = models.ImageField(upload_to='profile',null=True,blank=True)\n \n-    full_name = models.CharField(max_length = 250)\n-    position = models.CharField(max_length = 250,null = True)\n-    department = models.ForeignKey(Department,null = True,on_delete = models.SET_NULL)\n-    position = models.CharField(max_length = 250)\n-    email = models.EmailField(max_length = 250,unique = True)\n-\n-\n     USERNAME_FIELD = 'email'\n     REQUIRED_FIELDS = ['username']\n \n     created_at = models.DateTimeField(auto_now_add=True)\n@@ -27,6 +40,28 @@\n     class Meta:\n         permissions = [\n             ('can_verify_user', 'Can verify user'),\n         ]\n+    \n+    @property\n+    def full_name(self):\n+        try:\n+            return self.first_name + \" \" + self.last_name\n+        except:\n+            return self.username\n \n \n+class GroupExtension(models.Model):\n+    group = models.OneToOneField(Group, on_delete=models.CASCADE, related_name='extension')\n+    position = models.PositiveIntegerField(default=0)\n+    \n+    def __int__(self):\n+        return self.position\n+\n+    # def save(self, *args, **kwargs):\n+    #     # Set position to the Group ID if position is 0 (or could be None)\n+    #     if self.position == 0:\n+    #         super().save(*args, **kwargs)  # Save initially to get the group ID\n+    #         self.position = self.group.id\n+    #         super().save(*args, **kwargs)  # Save again to update position with group ID\n+    #     else:\n+    #         super().save(*args, **kwargs)\n"
                },
                {
                    "date": 1733380859082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n from django.db import models\n from django.contrib.auth.models import AbstractUser\n-frpm # from socialmedia.models import SocialMedia\n+frpm colle\n from django.contrib.auth.models import Group, Permission\n \n # Create your models here.\n class CustomUser(AbstractUser):\n"
                },
                {
                    "date": 1733380864599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n from django.db import models\n from django.contrib.auth.models import AbstractUser\n-frpm colle\n+frpm collegemanagement.models import \n from django.contrib.auth.models import Group, Permission\n \n # Create your models here.\n class CustomUser(AbstractUser):\n"
                },
                {
                    "date": 1733380871739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n from django.db import models\n from django.contrib.auth.models import AbstractUser\n-frpm collegemanagement.models import \n+fr0m collegemanagement.models import College\n from django.contrib.auth.models import Group, Permission\n \n # Create your models here.\n class CustomUser(AbstractUser):\n"
                },
                {
                    "date": 1733380885030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,13 @@\n from django.db import models\n from django.contrib.auth.models import AbstractUser\n-fr0m collegemanagement.models import College\n+from collegemanagement.models import College\n from django.contrib.auth.models import Group, Permission\n \n # Create your models here.\n class CustomUser(AbstractUser):\n     roles = models.CharField(max_length = 250,null = True)\n-    # department = models.ForeignKey(Department,null = True,on_delete = models.SET_NULL)\n+    # deparcolleghetment = models.ForeignKey(Department,null = True,on_delete = models.SET_NULL)\n     email = models.EmailField(max_length = 250,unique = True)\n     full_name = models.CharField(max_length = 250,null = True)\n     # social_links = models.ManyToManyField(SocialMedia,blank=True)\n     position = models.PositiveIntegerField(default=0)\n"
                },
                {
                    "date": 1733380891989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \n # Create your models here.\n class CustomUser(AbstractUser):\n     roles = models.CharField(max_length = 250,null = True)\n-    # deparcolleghetment = models.ForeignKey(Department,null = True,on_delete = models.SET_NULL)\n+    college = models.ForeignKey(Department,null = True,on_delete = models.SET_NULL)\n     email = models.EmailField(max_length = 250,unique = True)\n     full_name = models.CharField(max_length = 250,null = True)\n     # social_links = models.ManyToManyField(SocialMedia,blank=True)\n     position = models.PositiveIntegerField(default=0)\n"
                },
                {
                    "date": 1733381435362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,13 @@\n from django.db import models\n from django.contrib.auth.models import AbstractUser\n-from collegemanagement.models import College\n+# from collegemanagement.models import College\n from django.contrib.auth.models import Group, Permission\n \n # Create your models here.\n class CustomUser(AbstractUser):\n     roles = models.CharField(max_length = 250,null = True)\n-    college = models.ForeignKey(Department,null = True,on_delete = models.SET_NULL)\n+    college = models.ForeignKey(College,null = True,on_delete = models.SET_NULL)\n     email = models.EmailField(max_length = 250,unique = True)\n     full_name = models.CharField(max_length = 250,null = True)\n     # social_links = models.ManyToManyField(SocialMedia,blank=True)\n     position = models.PositiveIntegerField(default=0)\n"
                },
                {
                    "date": 1733381840506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,13 @@\n from django.db import models\n from django.contrib.auth.models import AbstractUser\n-# from collegemanagement.models import College\n+from collegemanagement.models import College\n from django.contrib.auth.models import Group, Permission\n \n # Create your models here.\n class CustomUser(AbstractUser):\n     roles = models.CharField(max_length = 250,null = True)\n-    college = models.ForeignKey(College,null = True,on_delete = models.SET_NULL)\n+    # college = models.ForeignKey(College,null = True,on_delete = models.SET_NULL)\n     email = models.EmailField(max_length = 250,unique = True)\n     full_name = models.CharField(max_length = 250,null = True)\n     # social_links = models.ManyToManyField(SocialMedia,blank=True)\n     position = models.PositiveIntegerField(default=0)\n"
                },
                {
                    "date": 1733381846921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \n # Create your models here.\n class CustomUser(AbstractUser):\n     roles = models.CharField(max_length = 250,null = True)\n-    # college = models.ForeignKey(College,null = True,on_delete = models.SET_NULL)\n+    college = models.ForeignKey(College,null = True,on_delete = models.SET_NULL)\n     email = models.EmailField(max_length = 250,unique = True)\n     full_name = models.CharField(max_length = 250,null = True)\n     # social_links = models.ManyToManyField(SocialMedia,blank=True)\n     position = models.PositiveIntegerField(default=0)\n"
                },
                {
                    "date": 1733382989004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n from django.db import models\n from django.contrib.auth.models import AbstractUser\n from collegemanagement.models import College\n from django.contrib.auth.models import Group, Permission\n+from socialmedia\n \n # Create your models here.\n class CustomUser(AbstractUser):\n     roles = models.CharField(max_length = 250,null = True)\n"
                },
                {
                    "date": 1733382996549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n from django.db import models\n from django.contrib.auth.models import AbstractUser\n from collegemanagement.models import College\n from django.contrib.auth.models import Group, Permission\n-from socialmedia.models\n+from socialmedia.models import SocialMedia\n \n # Create your models here.\n class CustomUser(AbstractUser):\n     roles = models.CharField(max_length = 250,null = True)\n"
                }
            ],
            "date": 1728378543650,
            "name": "Commit-0",
            "content": "from django.db import models\nfrom django.db import models\nfrom .utilities.model_utils import LowercaseEmailField\nfrom django.contrib.auth.models import AbstractUser\nfrom ..accountsmanagement.roles import roles_data,roles_data_dict\nfrom ..accountsmanagementimport roles\nimport uuid\nfrom django.db.models import Sum\nfrom .utilities.validators import validate_emails, validate_mobile_number\nfrom django.utils.translation import gettext_lazy as _\n\nclass CustomUser(AbstractUser):\n    public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n    phone = models.CharField(max_length=15,null=True , default = '')\n    email = LowercaseEmailField(\n            _(\"email address\"),\n            unique=True,\n            validators=[validate_emails],\n            error_messages={\"unique\": \"Given Email has already been registered.\"},\n            null=True,\n            blank=True,\n        )\n    username = models.CharField(max_length=255,unique=True)  \n\n    last_name = models.CharField(max_length=255,null = True,default = '')  \n    dob = models.DateField(null= True,blank= True ) \n\n    is_active = models.BooleanField(default=True)\n    remarks = models.CharField(max_length=200,null=True,default = '')\n\n    is_verified = models.BooleanField(default=False)\n\n    created_date = models.DateTimeField(auto_now_add=True)\n    updated_date = models.DateTimeField(auto_now=True)\n \n    image = models.ImageField(upload_to=\"profiles/images\",default=None,null=True,blank=True)\n    role = models.PositiveSmallIntegerField(choices=roles_data, blank=True, null=True,default = 5)\n\n    system_provider = 1\n    google_provider = 2\n    facebook_provider = 3\n\n    old_password_change_case = models.BooleanField(default=True) \n\n    provider_CHOICES = (\n        (system_provider, 'system'),\n        (google_provider, 'google'),\n        (facebook_provider, 'facebook'), \n        (4, 'apple'), \n\n    )\n    provider = models.PositiveSmallIntegerField(choices=provider_CHOICES,default = system_provider)\n\n    USERNAME_FIELD = 'email'\n    REQUIRED_FIELDS = ['username']\n\n    def getRoleName(self):\n        if self.role==roles.SUPER_ADMIN:\n            return roles_data_dict[roles.SUPER_ADMIN]\n        elif self.role == roles.ADMIN:\n            return roles_data_dict[roles.ADMIN]\n        elif self.role == roles.USER:\n            return roles_data_dict[roles.USER]\n        else:\n            return None\n        \n    def __str__(self):\n        return self.username + \" \"+ str(self.getRoleName())\n    \n    @property\n    def full_name(self):\n        try:\n            return self.first_name + \" \" + self.last_name\n        except:\n            return self.username\n    "
        }
    ]
}