{
    "sourceFile": "mainproj/utilities/import_excel.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 28,
            "patches": [
                {
                    "date": 1733814224286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1733814379693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,124 +1,124 @@\n-# from django.shortcuts import render\n-# from django.http import HttpResponse\n-# from rest_framework.response import Response\n-# from rest_framework.views import APIView\n-# from rest_framework import status\n-# import pandas as pd\n-# import csv\n+from django.shortcuts import render\n+from django.http import HttpResponse\n+from rest_framework.response import Response\n+from rest_framework.views import APIView\n+from rest_framework import status\n+import pandas as pd\n+import csv\n \n-# from drf_yasg import openapi\n-# from drf_yasg.utils import swagger_auto_schema\n+from drf_yasg import openapi\n+from drf_yasg.utils import swagger_auto_schema\n \n-# from job.models import JobCategory,Skills\n-# from professions.models import  Profession\n-# from company.models import CompanyType\n+from job.models import JobCategory,Skills\n+from professions.models import  Profession\n+from company.models import CompanyType\n \n-# from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n-# from job.serializers.skills_serializers import SkillsWriteSerializers\n-# from professions.serializers.profession_serializers import ProfessionWriteSerializers\n-# from company.serializers.company_type_serializers import CompanyTypeWriteSerializers\n+from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n+from job.serializers.skills_serializers import SkillsWriteSerializers\n+from professions.serializers.profession_serializers import ProfessionWriteSerializers\n+from company.serializers.company_type_serializers import CompanyTypeWriteSerializers\n \n \n-# # Create your views here.\n+# Create your views here.\n \n-# class ImportExel(APIView):\n-#     @swagger_auto_schema(\n-#         request_body=openapi.Schema(\n-#             type=openapi.TYPE_OBJECT,\n-#             properties={\n-#                 'excel_file': openapi.Schema(type=openapi.TYPE_FILE),\n-#             },\n-#             required=['excel_file']\n-#         ),\n-#         # responses={200: MyResponseSerializer},\n-#         operation_summary=\"upload excel file\",\n-#         operation_description=\"upload excel file\",\n-#     )\n-#     def post(self, request, type, format=None):\n+class ImportExel(APIView):\n+    @swagger_auto_schema(\n+        request_body=openapi.Schema(\n+            type=openapi.TYPE_OBJECT,\n+            properties={\n+                'excel_file': openapi.Schema(type=openapi.TYPE_FILE),\n+            },\n+            required=['excel_file']\n+        ),\n+        # responses={200: MyResponseSerializer},\n+        operation_summary=\"upload excel file\",\n+        operation_description=\"upload excel file\",\n+    )\n+    def post(self, request, type, format=None):\n        \n-#         file = request.FILES.get('excel_file')\n-#         if not file:\n-#             return Response({\"error\": \"No file provided\"}, status=status.HTTP_400_BAD_REQUEST)\n+        file = request.FILES.get('excel_file')\n+        if not file:\n+            return Response({\"error\": \"No file provided\"}, status=status.HTTP_400_BAD_REQUEST)\n         \n         \n-#         # Use pandas to read the Excel file\n-#         df = pd.read_csv(file)\n+        # Use pandas to read the Excel file\n+        df = pd.read_csv(file)\n \n-#         # Convert the DataFrame to a list of dictionaries\n-#         datas = df.to_dict(orient='records')\n-#         # Process the DataFrame based on the 'type' parameter\n+        # Convert the DataFrame to a list of dictionaries\n+        datas = df.to_dict(orient='records')\n+        # Process the DataFrame based on the 'type' parameter\n \n-#         if type == \"job-category\":\n-#             create_update(JobCategory,JobCategoryWriteSerializers,datas,'name')\n-#         elif type == \"profession\":\n-#             create_update(Profession,ProfessionWriteSerializers,datas,'name')\n-#         elif type == \"skills\":\n-#             create_update_skills(Skills,SkillsWriteSerializers,datas,'name')\n-#         elif type == \"company-type\":\n-#             create_update(CompanyType,CompanyTypeWriteSerializers,datas,'type')\n-#         else:\n-#             return Response({\"message\": 'Unknown file type'}, status=status.HTTP_400_BAD_REQUEST)\n+        if type == \"job-category\":\n+            create_update(JobCategory,JobCategoryWriteSerializers,datas,'name')\n+        elif type == \"profession\":\n+            create_update(Profession,ProfessionWriteSerializers,datas,'name')\n+        elif type == \"skills\":\n+            create_update_skills(Skills,SkillsWriteSerializers,datas,'name')\n+        elif type == \"company-type\":\n+            create_update(CompanyType,CompanyTypeWriteSerializers,datas,'type')\n+        else:\n+            return Response({\"message\": 'Unknown file type'}, status=status.HTTP_400_BAD_REQUEST)\n         \n \n-#         return Response({\"message\": \"File processed successfully\"}, status=status.HTTP_201_CREATED)\n-#         # except Exception as e:\n-#         #      return Response({\"error\": str(e)}, status=status.HTTP_400_BAD_REQUEST)\n+        return Response({\"message\": \"File processed successfully\"}, status=status.HTTP_201_CREATED)\n+        # except Exception as e:\n+        #      return Response({\"error\": str(e)}, status=status.HTTP_400_BAD_REQUEST)\n         \n \n-# def create_update(my_model,my_serializer,datas,unique_field_name):\n+def create_update(my_model,my_serializer,datas,unique_field_name):\n     \n-#     for record in datas:\n-#         existing_data = my_model.objects.filter(**{unique_field_name: record[unique_field_name]})\n-#         if existing_data.exists():\n-#             existing_data = existing_data.first()  # Use a unique field here\n-#             serializer = my_serializer(existing_data, data=record)\n-#             if serializer.is_valid():\n-#                 serializer.save()\n-#             else:\n-#                 print(serializer.errors)\n-#                 # Handle validation errors\n-#                 pass\n-#         else:\n-#             # Create a new record\n-#             serializer = my_serializer(data=record)\n-#             if serializer.is_valid():\n-#                 serializer.save()\n-#             else:\n-#                 print(serializer.errors)\n-#                 # Handle validation errors\n-#                 pass\n+    for record in datas:\n+        existing_data = my_model.objects.filter(**{unique_field_name: record[unique_field_name]})\n+        if existing_data.exists():\n+            existing_data = existing_data.first()  # Use a unique field here\n+            serializer = my_serializer(existing_data, data=record)\n+            if serializer.is_valid():\n+                serializer.save()\n+            else:\n+                print(serializer.errors)\n+                # Handle validation errors\n+                pass\n+        else:\n+            # Create a new record\n+            serializer = my_serializer(data=record)\n+            if serializer.is_valid():\n+                serializer.save()\n+            else:\n+                print(serializer.errors)\n+                # Handle validation errors\n+                pass\n \n \n-# def create_update_skills(my_model,my_serializer,datas,unique_field_name):\n+def create_update_skills(my_model,my_serializer,datas,unique_field_name):\n     \n-#     for record in datas:\n-#         existing_data = my_model.objects.filter(name=record[unique_field_name])\n+    for record in datas:\n+        existing_data = my_model.objects.filter(name=record[unique_field_name])\n         \n-#         if record.get('category'):\n-#             category_obj = JobCategory.objects.filter(name = record.get('category'))\n-#             if category_obj.exists():\n-#                 category_obj = category_obj.first()\n-#                 record['category'] = category_obj.id\n-#             else:\n-#                 pass\n-#         else:\n-#                 pass\n-#         if existing_data.exists():\n-#             existing_data = existing_data.first()  # Use a unique field here\n+        if record.get('category'):\n+            category_obj = JobCategory.objects.filter(name = record.get('category'))\n+            if category_obj.exists():\n+                category_obj = category_obj.first()\n+                record['category'] = category_obj.id\n+            else:\n+                pass\n+        else:\n+                pass\n+        if existing_data.exists():\n+            existing_data = existing_data.first()  # Use a unique field here\n             \n-#             serializer = my_serializer(existing_data, data=record)\n-#             if serializer.is_valid():\n-#                 serializer.save()\n-#             else:\n-#                 # print(serializer.errors)\n-#                 # Handle validation errors\n-#                 pass\n-#         else:\n-#             # Create a new record\n-#             serializer = my_serializer(data=record)\n-#             if serializer.is_valid():\n-#                 serializer.save()\n-#             else:\n-#                 # print(serializer.errors)\n-#                 # Handle validation errors\n-#                 pass\n+            serializer = my_serializer(existing_data, data=record)\n+            if serializer.is_valid():\n+                serializer.save()\n+            else:\n+                # print(serializer.errors)\n+                # Handle validation errors\n+                pass\n+        else:\n+            # Create a new record\n+            serializer = my_serializer(data=record)\n+            if serializer.is_valid():\n+                serializer.save()\n+            else:\n+                # print(serializer.errors)\n+                # Handle validation errors\n+                pass\n"
                },
                {
                    "date": 1733814396063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,12 +12,12 @@\n from job.models import JobCategory,Skills\n from professions.models import  Profession\n from company.models import CompanyType\n \n-from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n-from job.serializers.skills_serializers import SkillsWriteSerializers\n-from professions.serializers.profession_serializers import ProfessionWriteSerializers\n-from company.serializers.company_type_serializers import CompanyTypeWriteSerializers\n+# from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n+# from job.serializers.skills_serializers import SkillsWriteSerializers\n+# from professions.serializers.profession_serializers import ProfessionWriteSerializers\n+# from company.serializers.company_type_serializers import CompanyTypeWriteSerializers\n \n \n # Create your views here.\n \n"
                },
                {
                    "date": 1733814404509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,12 +8,14 @@\n \n from drf_yasg import openapi\n from drf_yasg.utils import swagger_auto_schema\n \n-from job.models import JobCategory,Skills\n-from professions.models import  Profession\n-from company.models import CompanyType\n+# from job.models import JobCategory,Skills\n+# from professions.models import  Profession\n+# from company.models import CompanyType\n \n+\n+\n # from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n # from job.serializers.skills_serializers import SkillsWriteSerializers\n # from professions.serializers.profession_serializers import ProfessionWriteSerializers\n # from company.serializers.company_type_serializers import CompanyTypeWriteSerializers\n"
                },
                {
                    "date": 1733814410616,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,10 +12,10 @@\n # from job.models import JobCategory,Skills\n # from professions.models import  Profession\n # from company.models import CompanyType\n \n+from discipline\n \n-\n # from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n # from job.serializers.skills_serializers import SkillsWriteSerializers\n # from professions.serializers.profession_serializers import ProfessionWriteSerializers\n # from company.serializers.company_type_serializers import CompanyTypeWriteSerializers\n"
                },
                {
                    "date": 1733814416654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,10 @@\n # from job.models import JobCategory,Skills\n # from professions.models import  Profession\n # from company.models import CompanyType\n \n-from discipline\n+from discipline.models import Discipline\n+from faculty\n \n # from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n # from job.serializers.skills_serializers import SkillsWriteSerializers\n # from professions.serializers.profession_serializers import ProfessionWriteSerializers\n"
                },
                {
                    "date": 1733814422886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,10 @@\n # from professions.models import  Profession\n # from company.models import CompanyType\n \n from discipline.models import Discipline\n-from faculty\n+from faculty.models import Faculty\n+from college\n \n # from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n # from job.serializers.skills_serializers import SkillsWriteSerializers\n # from professions.serializers.profession_serializers import ProfessionWriteSerializers\n"
                },
                {
                    "date": 1733814429479,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,10 +14,11 @@\n # from company.models import CompanyType\n \n from discipline.models import Discipline\n from faculty.models import Faculty\n-from college\n+from college_type.models import CollegeType\n \n+\n # from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n # from job.serializers.skills_serializers import SkillsWriteSerializers\n # from professions.serializers.profession_serializers import ProfessionWriteSerializers\n # from company.serializers.company_type_serializers import CompanyTypeWriteSerializers\n"
                },
                {
                    "date": 1733814436882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,11 +14,12 @@\n # from company.models import CompanyType\n \n from discipline.models import Discipline\n from faculty.models import Faculty\n-from college_type.models import CollegeType\n+from collegetype.models import CollegeType\n \n \n+\n # from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n # from job.serializers.skills_serializers import SkillsWriteSerializers\n # from professions.serializers.profession_serializers import ProfessionWriteSerializers\n # from company.serializers.company_type_serializers import CompanyTypeWriteSerializers\n"
                },
                {
                    "date": 1733814442213,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,11 +15,11 @@\n \n from discipline.models import Discipline\n from faculty.models import Faculty\n from collegetype.models import CollegeType\n+from collegelevel\n \n \n-\n # from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n # from job.serializers.skills_serializers import SkillsWriteSerializers\n # from professions.serializers.profession_serializers import ProfessionWriteSerializers\n # from company.serializers.company_type_serializers import CompanyTypeWriteSerializers\n"
                },
                {
                    "date": 1733814453301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \n from discipline.models import Discipline\n from faculty.models import Faculty\n from collegetype.models import CollegeType\n-from collegelevel\n+from level.models import CollegeLevel\n \n \n # from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n # from job.serializers.skills_serializers import SkillsWriteSerializers\n"
                },
                {
                    "date": 1733814480968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \n from discipline.models import Discipline\n from faculty.models import Faculty\n from collegetype.models import CollegeType\n-from level.models import CollegeLevel\n+from l.models import CollegeLevel\n \n \n # from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n # from job.serializers.skills_serializers import SkillsWriteSerializers\n"
                },
                {
                    "date": 1733814494625,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \n from discipline.models import Discipline\n from faculty.models import Faculty\n from collegetype.models import CollegeType\n-from l.models import CollegeLevel\n+from collegemanagement.models import CollegeLevel\n \n \n # from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n # from job.serializers.skills_serializers import SkillsWriteSerializers\n"
                },
                {
                    "date": 1733814501147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \n from discipline.models import Discipline\n from faculty.models import Faculty\n from collegetype.models import CollegeType\n-from collegemanagement.models import CollegeLevel\n+from collegemanagement.models import Co\n \n \n # from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n # from job.serializers.skills_serializers import SkillsWriteSerializers\n"
                },
                {
                    "date": 1733814506861,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \n from discipline.models import Discipline\n from faculty.models import Faculty\n from collegetype.models import CollegeType\n-from collegemanagement.models import Co\n+from collegemanagement.models import Level\n \n \n # from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n # from job.serializers.skills_serializers import SkillsWriteSerializers\n"
                },
                {
                    "date": 1733814565740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \n from discipline.models import Discipline\n from faculty.models import Faculty\n from collegetype.models import CollegeType\n-from collegemanagement.models import Level\n+# from le.models import Level\n \n \n # from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n # from job.serializers.skills_serializers import SkillsWriteSerializers\n"
                },
                {
                    "date": 1733814571177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \n from discipline.models import Discipline\n from faculty.models import Faculty\n from collegetype.models import CollegeType\n-# from le.models import Level\n+from level.models import Level\n \n \n # from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n # from job.serializers.skills_serializers import SkillsWriteSerializers\n"
                },
                {
                    "date": 1733814578792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,9 @@\n from discipline.models import Discipline\n from faculty.models import Faculty\n from collegetype.models import CollegeType\n from level.models import Level\n+from district\n \n \n # from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n # from job.serializers.skills_serializers import SkillsWriteSerializers\n"
                },
                {
                    "date": 1733814588317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,10 @@\n from discipline.models import Discipline\n from faculty.models import Faculty\n from collegetype.models import CollegeType\n from level.models import Level\n-from district\n+from district.models import District\n+from duration\n \n \n # from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n # from job.serializers.skills_serializers import SkillsWriteSerializers\n"
                },
                {
                    "date": 1733814601861,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,11 +17,13 @@\n from faculty.models import Faculty\n from collegetype.models import CollegeType\n from level.models import Level\n from district.models import District\n-from duration\n+from duration.models import Duration\n \n \n+\n+\n # from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n # from job.serializers.skills_serializers import SkillsWriteSerializers\n # from professions.serializers.profession_serializers import ProfessionWriteSerializers\n # from company.serializers.company_type_serializers import CompanyTypeWriteSerializers\n"
                },
                {
                    "date": 1733814608996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,11 +19,11 @@\n from level.models import Level\n from district.models import District\n from duration.models import Duration\n \n+from discipline.serializers import DisciplineWriteSerializers\n \n \n-\n # from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n # from job.serializers.skills_serializers import SkillsWriteSerializers\n # from professions.serializers.profession_serializers import ProfessionWriteSerializers\n # from company.serializers.company_type_serializers import CompanyTypeWriteSerializers\n"
                },
                {
                    "date": 1733814785581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,11 +19,13 @@\n from level.models import Level\n from district.models import District\n from duration.models import Duration\n \n-from discipline.serializers import DisciplineWriteSerializers\n+from discipline.serializers. import DisciplineWriteSerializers\n+from faculty.serializers import FacultyWriteSerializers\n \n \n+\n # from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n # from job.serializers.skills_serializers import SkillsWriteSerializers\n # from professions.serializers.profession_serializers import ProfessionWriteSerializers\n # from company.serializers.company_type_serializers import CompanyTypeWriteSerializers\n"
                },
                {
                    "date": 1733814792159,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,10 +19,10 @@\n from level.models import Level\n from district.models import District\n from duration.models import Duration\n \n-from discipline.serializers. import DisciplineWriteSerializers\n-from faculty.serializers import FacultyWriteSerializers\n+from discipline.serializers.discipline_serializers import DisciplineWriteSerializers\n+from faculty.serializers. import FacultyWriteSerializers\n \n \n \n # from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n"
                },
                {
                    "date": 1733814798003,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,10 @@\n from district.models import District\n from duration.models import Duration\n \n from discipline.serializers.discipline_serializers import DisciplineWriteSerializers\n-from faculty.serializers. import FacultyWriteSerializers\n+from faculty.serializers.faculty_serializers import FacultyWriteSerializers\n+from colle\n \n \n \n # from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n"
                },
                {
                    "date": 1733814805160,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,10 @@\n from duration.models import Duration\n \n from discipline.serializers.discipline_serializers import DisciplineWriteSerializers\n from faculty.serializers.faculty_serializers import FacultyWriteSerializers\n-from colle\n+from collegetype.serializers.collegetype_serializers import CollegeTypeWriteSerializers\n+from \n \n \n \n # from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n"
                },
                {
                    "date": 1733814810330,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,12 +22,13 @@\n \n from discipline.serializers.discipline_serializers import DisciplineWriteSerializers\n from faculty.serializers.faculty_serializers import FacultyWriteSerializers\n from collegetype.serializers.collegetype_serializers import CollegeTypeWriteSerializers\n-from \n+from level.serializers.level_serializers import LevelWriteSerializers\n \n \n \n+\n # from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n # from job.serializers.skills_serializers import SkillsWriteSerializers\n # from professions.serializers.profession_serializers import ProfessionWriteSerializers\n # from company.serializers.company_type_serializers import CompanyTypeWriteSerializers\n"
                },
                {
                    "date": 1733814815523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,12 +23,13 @@\n from discipline.serializers.discipline_serializers import DisciplineWriteSerializers\n from faculty.serializers.faculty_serializers import FacultyWriteSerializers\n from collegetype.serializers.collegetype_serializers import CollegeTypeWriteSerializers\n from level.serializers.level_serializers import LevelWriteSerializers\n+from district.serializers.district_serializers import DistrictWriteSerializers\n+from duration.serializers.duration_serializers import DurationWriteSerializers\n \n \n \n-\n # from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n # from job.serializers.skills_serializers import SkillsWriteSerializers\n # from professions.serializers.profession_serializers import ProfessionWriteSerializers\n # from company.serializers.company_type_serializers import CompanyTypeWriteSerializers\n"
                },
                {
                    "date": 1733814948670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,17 +3,12 @@\n from rest_framework.response import Response\n from rest_framework.views import APIView\n from rest_framework import status\n import pandas as pd\n-import csv\n \n from drf_yasg import openapi\n from drf_yasg.utils import swagger_auto_schema\n \n-# from job.models import JobCategory,Skills\n-# from professions.models import  Profession\n-# from company.models import CompanyType\n-\n from discipline.models import Discipline\n from faculty.models import Faculty\n from collegetype.models import CollegeType\n from level.models import Level\n@@ -27,17 +22,8 @@\n from district.serializers.district_serializers import DistrictWriteSerializers\n from duration.serializers.duration_serializers import DurationWriteSerializers\n \n \n-\n-# from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n-# from job.serializers.skills_serializers import SkillsWriteSerializers\n-# from professions.serializers.profession_serializers import ProfessionWriteSerializers\n-# from company.serializers.company_type_serializers import CompanyTypeWriteSerializers\n-\n-\n-# Create your views here.\n-\n class ImportExel(APIView):\n     @swagger_auto_schema(\n         request_body=openapi.Schema(\n             type=openapi.TYPE_OBJECT,\n@@ -45,96 +31,55 @@\n                 'excel_file': openapi.Schema(type=openapi.TYPE_FILE),\n             },\n             required=['excel_file']\n         ),\n-        # responses={200: MyResponseSerializer},\n-        operation_summary=\"upload excel file\",\n-        operation_description=\"upload excel file\",\n+        operation_summary=\"Upload Excel or CSV file\",\n+        operation_description=\"Upload an Excel or CSV file for data import\",\n     )\n     def post(self, request, type, format=None):\n-       \n         file = request.FILES.get('excel_file')\n         if not file:\n             return Response({\"error\": \"No file provided\"}, status=status.HTTP_400_BAD_REQUEST)\n         \n-        \n-        # Use pandas to read the Excel file\n-        df = pd.read_csv(file)\n+        # Determine the file type based on extension\n+        file_name = file.name.lower()\n+        if file_name.endswith('.csv'):\n+            df = pd.read_csv(file)\n+        elif file_name.endswith(('.xls', '.xlsx')):\n+            df = pd.read_excel(file)\n+        else:\n+            return Response({\"error\": \"Unsupported file format. Please upload a CSV or Excel file.\"}, status=status.HTTP_400_BAD_REQUEST)\n \n         # Convert the DataFrame to a list of dictionaries\n         datas = df.to_dict(orient='records')\n+\n         # Process the DataFrame based on the 'type' parameter\n-\n-        if type == \"job-category\":\n-            create_update(JobCategory,JobCategoryWriteSerializers,datas,'name')\n-        elif type == \"profession\":\n-            create_update(Profession,ProfessionWriteSerializers,datas,'name')\n-        elif type == \"skills\":\n-            create_update_skills(Skills,SkillsWriteSerializers,datas,'name')\n-        elif type == \"company-type\":\n-            create_update(CompanyType,CompanyTypeWriteSerializers,datas,'type')\n+        if type == \"discipline\":\n+            create_update(Discipline, DisciplineWriteSerializers, datas, 'name')\n+        elif type == \"faculty\":\n+            create_update(Faculty, FacultyWriteSerializers, datas, 'name')\n+        elif type == \"college-type\":\n+            create_update(CollegeType, CollegeTypeWriteSerializers, datas, 'type')\n+        elif type == \"level\":\n+            create_update(Level, LevelWriteSerializers, datas, 'level')\n+        elif type == \"district\":\n+            create_update(District, DistrictWriteSerializers, datas, 'name')\n+        elif type == \"duration\":\n+            create_update(Duration, DurationWriteSerializers, datas, 'duration')\n         else:\n             return Response({\"message\": 'Unknown file type'}, status=status.HTTP_400_BAD_REQUEST)\n         \n-\n         return Response({\"message\": \"File processed successfully\"}, status=status.HTTP_201_CREATED)\n-        # except Exception as e:\n-        #      return Response({\"error\": str(e)}, status=status.HTTP_400_BAD_REQUEST)\n-        \n \n-def create_update(my_model,my_serializer,datas,unique_field_name):\n-    \n+\n+def create_update(my_model, my_serializer, datas, unique_field_name):\n     for record in datas:\n         existing_data = my_model.objects.filter(**{unique_field_name: record[unique_field_name]})\n         if existing_data.exists():\n-            existing_data = existing_data.first()  # Use a unique field here\n+            existing_data = existing_data.first()\n             serializer = my_serializer(existing_data, data=record)\n             if serializer.is_valid():\n                 serializer.save()\n-            else:\n-                print(serializer.errors)\n-                # Handle validation errors\n-                pass\n         else:\n-            # Create a new record\n             serializer = my_serializer(data=record)\n             if serializer.is_valid():\n                 serializer.save()\n-            else:\n-                print(serializer.errors)\n-                # Handle validation errors\n-                pass\n-\n-\n-def create_update_skills(my_model,my_serializer,datas,unique_field_name):\n-    \n-    for record in datas:\n-        existing_data = my_model.objects.filter(name=record[unique_field_name])\n-        \n-        if record.get('category'):\n-            category_obj = JobCategory.objects.filter(name = record.get('category'))\n-            if category_obj.exists():\n-                category_obj = category_obj.first()\n-                record['category'] = category_obj.id\n-            else:\n-                pass\n-        else:\n-                pass\n-        if existing_data.exists():\n-            existing_data = existing_data.first()  # Use a unique field here\n-            \n-            serializer = my_serializer(existing_data, data=record)\n-            if serializer.is_valid():\n-                serializer.save()\n-            else:\n-                # print(serializer.errors)\n-                # Handle validation errors\n-                pass\n-        else:\n-            # Create a new record\n-            serializer = my_serializer(data=record)\n-            if serializer.is_valid():\n-                serializer.save()\n-            else:\n-                # print(serializer.errors)\n-                # Handle validation errors\n-                pass\n"
                },
                {
                    "date": 1733815052392,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n from district.serializers.district_serializers import DistrictWriteSerializers\n from duration.serializers.duration_serializers import DurationWriteSerializers\n \n \n-class ImportExel(APIView):\n+class ImportExcel(APIView):\n     @swagger_auto_schema(\n         request_body=openapi.Schema(\n             type=openapi.TYPE_OBJECT,\n             properties={\n"
                }
            ],
            "date": 1733814224286,
            "name": "Commit-0",
            "content": "# from django.shortcuts import render\n# from django.http import HttpResponse\n# from rest_framework.response import Response\n# from rest_framework.views import APIView\n# from rest_framework import status\n# import pandas as pd\n# import csv\n\n# from drf_yasg import openapi\n# from drf_yasg.utils import swagger_auto_schema\n\n# from job.models import JobCategory,Skills\n# from professions.models import  Profession\n# from company.models import CompanyType\n\n# from job.serializers.job_category_serializers import JobCategoryWriteSerializers\n# from job.serializers.skills_serializers import SkillsWriteSerializers\n# from professions.serializers.profession_serializers import ProfessionWriteSerializers\n# from company.serializers.company_type_serializers import CompanyTypeWriteSerializers\n\n\n# # Create your views here.\n\n# class ImportExel(APIView):\n#     @swagger_auto_schema(\n#         request_body=openapi.Schema(\n#             type=openapi.TYPE_OBJECT,\n#             properties={\n#                 'excel_file': openapi.Schema(type=openapi.TYPE_FILE),\n#             },\n#             required=['excel_file']\n#         ),\n#         # responses={200: MyResponseSerializer},\n#         operation_summary=\"upload excel file\",\n#         operation_description=\"upload excel file\",\n#     )\n#     def post(self, request, type, format=None):\n       \n#         file = request.FILES.get('excel_file')\n#         if not file:\n#             return Response({\"error\": \"No file provided\"}, status=status.HTTP_400_BAD_REQUEST)\n        \n        \n#         # Use pandas to read the Excel file\n#         df = pd.read_csv(file)\n\n#         # Convert the DataFrame to a list of dictionaries\n#         datas = df.to_dict(orient='records')\n#         # Process the DataFrame based on the 'type' parameter\n\n#         if type == \"job-category\":\n#             create_update(JobCategory,JobCategoryWriteSerializers,datas,'name')\n#         elif type == \"profession\":\n#             create_update(Profession,ProfessionWriteSerializers,datas,'name')\n#         elif type == \"skills\":\n#             create_update_skills(Skills,SkillsWriteSerializers,datas,'name')\n#         elif type == \"company-type\":\n#             create_update(CompanyType,CompanyTypeWriteSerializers,datas,'type')\n#         else:\n#             return Response({\"message\": 'Unknown file type'}, status=status.HTTP_400_BAD_REQUEST)\n        \n\n#         return Response({\"message\": \"File processed successfully\"}, status=status.HTTP_201_CREATED)\n#         # except Exception as e:\n#         #      return Response({\"error\": str(e)}, status=status.HTTP_400_BAD_REQUEST)\n        \n\n# def create_update(my_model,my_serializer,datas,unique_field_name):\n    \n#     for record in datas:\n#         existing_data = my_model.objects.filter(**{unique_field_name: record[unique_field_name]})\n#         if existing_data.exists():\n#             existing_data = existing_data.first()  # Use a unique field here\n#             serializer = my_serializer(existing_data, data=record)\n#             if serializer.is_valid():\n#                 serializer.save()\n#             else:\n#                 print(serializer.errors)\n#                 # Handle validation errors\n#                 pass\n#         else:\n#             # Create a new record\n#             serializer = my_serializer(data=record)\n#             if serializer.is_valid():\n#                 serializer.save()\n#             else:\n#                 print(serializer.errors)\n#                 # Handle validation errors\n#                 pass\n\n\n# def create_update_skills(my_model,my_serializer,datas,unique_field_name):\n    \n#     for record in datas:\n#         existing_data = my_model.objects.filter(name=record[unique_field_name])\n        \n#         if record.get('category'):\n#             category_obj = JobCategory.objects.filter(name = record.get('category'))\n#             if category_obj.exists():\n#                 category_obj = category_obj.first()\n#                 record['category'] = category_obj.id\n#             else:\n#                 pass\n#         else:\n#                 pass\n#         if existing_data.exists():\n#             existing_data = existing_data.first()  # Use a unique field here\n            \n#             serializer = my_serializer(existing_data, data=record)\n#             if serializer.is_valid():\n#                 serializer.save()\n#             else:\n#                 # print(serializer.errors)\n#                 # Handle validation errors\n#                 pass\n#         else:\n#             # Create a new record\n#             serializer = my_serializer(data=record)\n#             if serializer.is_valid():\n#                 serializer.save()\n#             else:\n#                 # print(serializer.errors)\n#                 # Handle validation errors\n#                 pass\n"
        }
    ]
}