{
    "sourceFile": "mainproj/utilities/bulk_delete.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 29,
            "patches": [
                {
                    "date": 1733737051062,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1733737061277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,21 +15,21 @@\n # from quotationmanagement.models import Quotation\n # from service_category_management.models import Category\n # from servicemanagement.models import Service\n \n-VALID_TYPES = {\n-    \"blog\": Blog,\n-    \"booking-service\": BookingService,\n-    \"branch\": Branch,\n-    \"customer-inquiries\": CustomerInquiries,\n-    \"gallery-group\": GalleryGroup,\n-    \"gallery\": Gallery,\n-    \"quotation\": Quotation,\n-    \"service-category\": Category,\n-    \"service\": Service,\n-    \"meetteam\": MeetTeam,\n-    \"faqs\": Faqs,\n-}\n+# VALID_TYPES = {\n+#     \"blog\": Blog,\n+#     \"booking-service\": BookingService,\n+#     \"branch\": Branch,\n+#     \"customer-inquiries\": CustomerInquiries,\n+#     \"gallery-group\": GalleryGroup,\n+#     \"gallery\": Gallery,\n+#     \"quotation\": Quotation,\n+#     \"service-category\": Category,\n+#     \"service\": Service,\n+#     \"meetteam\": MeetTeam,\n+#     \"faqs\": Faqs,\n+# }\n \n class BulkDelete(APIView):\n     @swagger_auto_schema(\n         request_body=openapi.Schema(\n"
                },
                {
                    "date": 1733737120957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n # from quotationmanagement.models import Quotation\n # from service_category_management.models import Category\n # from servicemanagement.models import Service\n \n-# VALID_TYPES = {\n+VALID_TYPES = {\n #     \"blog\": Blog,\n #     \"booking-service\": BookingService,\n #     \"branch\": Branch,\n #     \"customer-inquiries\": CustomerInquiries,\n"
                },
                {
                    "date": 1733737131029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,9 @@\n # from service_category_management.models import Category\n # from servicemanagement.models import Service\n \n VALID_TYPES = {\n+    pass\n #     \"blog\": Blog,\n #     \"booking-service\": BookingService,\n #     \"branch\": Branch,\n #     \"customer-inquiries\": CustomerInquiries,\n@@ -27,9 +28,9 @@\n #     \"service-category\": Category,\n #     \"service\": Service,\n #     \"meetteam\": MeetTeam,\n #     \"faqs\": Faqs,\n-# }\n+}\n \n class BulkDelete(APIView):\n     @swagger_auto_schema(\n         request_body=openapi.Schema(\n"
                },
                {
                    "date": 1733737556305,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,20 +5,12 @@\n \n from drf_yasg import openapi\n from drf_yasg.utils import swagger_auto_schema\n \n-# from blog.models import Blog\n-# from bookingmanagement.models import BookingService\n-# from branchdetails.models import Branch\n-# from components.models import *\n-# from customerinquiries.models import CustomerInquiries\n-# from gallery.models import GalleryGroup,Gallery\n-# from quotationmanagement.models import Quotation\n-# from service_category_management.models import Category\n-# from servicemanagement.models import Service\n \n+\n VALID_TYPES = {\n-    pass\n+    \n #     \"blog\": Blog,\n #     \"booking-service\": BookingService,\n #     \"branch\": Branch,\n #     \"customer-inquiries\": CustomerInquiries,\n"
                },
                {
                    "date": 1733737561953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,10 @@\n \n from drf_yasg import openapi\n from drf_yasg.utils import swagger_auto_schema\n \n+from advertisement\n \n-\n VALID_TYPES = {\n     \n #     \"blog\": Blog,\n #     \"booking-service\": BookingService,\n"
                },
                {
                    "date": 1733737569515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,10 @@\n \n from drf_yasg import openapi\n from drf_yasg.utils import swagger_auto_schema\n \n-from advertisement\n+from advertisement.models import Advertisement\n+from affiliation\n \n VALID_TYPES = {\n     \n #     \"blog\": Blog,\n"
                },
                {
                    "date": 1733737575504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,10 @@\n from drf_yasg import openapi\n from drf_yasg.utils import swagger_auto_schema\n \n from advertisement.models import Advertisement\n-from affiliation\n+from affiliation.models import Affiliation\n+from certifi\n \n VALID_TYPES = {\n     \n #     \"blog\": Blog,\n"
                },
                {
                    "date": 1733737583532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,12 @@\n from drf_yasg.utils import swagger_auto_schema\n \n from advertisement.models import Advertisement\n from affiliation.models import Affiliation\n-from certifi\n+from certification.models import Certification\n+from informationmanagement.models import Information\n \n+\n VALID_TYPES = {\n     \n #     \"blog\": Blog,\n #     \"booking-service\": BookingService,\n"
                },
                {
                    "date": 1733737588820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,10 @@\n from advertisement.models import Advertisement\n from affiliation.models import Affiliation\n from certification.models import Certification\n from informationmanagement.models import Information\n+from \n \n-\n VALID_TYPES = {\n     \n #     \"blog\": Blog,\n #     \"booking-service\": BookingService,\n"
                },
                {
                    "date": 1733737763786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n from advertisement.models import Advertisement\n from affiliation.models import Affiliation\n from certification.models import Certification\n from informationmanagement.models import Information\n-from \n+from         \n \n VALID_TYPES = {\n     \n #     \"blog\": Blog,\n"
                },
                {
                    "date": 1733739771616,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n from advertisement.models import Advertisement\n from affiliation.models import Affiliation\n from certification.models import Certification\n from informationmanagement.models import Information\n-from         \n+from          \n \n VALID_TYPES = {\n     \n #     \"blog\": Blog,\n"
                },
                {
                    "date": 1733739778207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n from advertisement.models import Advertisement\n from affiliation.models import Affiliation\n from certification.models import Certification\n from informationmanagement.models import Information\n-from          \n+from colle         \n \n VALID_TYPES = {\n     \n #     \"blog\": Blog,\n"
                },
                {
                    "date": 1733739786231,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n from advertisement.models import Advertisement\n from affiliation.models import Affiliation\n from certification.models import Certification\n from informationmanagement.models import Information\n-from colle         \n+from collegemanagement.models import College, CollegeGallery, CollegeFaqs         \n \n VALID_TYPES = {\n     \n #     \"blog\": Blog,\n"
                },
                {
                    "date": 1733739795854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n from advertisement.models import Advertisement\n from affiliation.models import Affiliation\n from certification.models import Certification\n from informationmanagement.models import Information\n-from collegemanagement.models import College, CollegeGallery, CollegeFaqs         \n+from collegemanagement.models import College, CollegeGallery, CollegeFaqs, CollegeType         \n \n VALID_TYPES = {\n     \n #     \"blog\": Blog,\n"
                },
                {
                    "date": 1733739808893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,10 @@\n from advertisement.models import Advertisement\n from affiliation.models import Affiliation\n from certification.models import Certification\n from informationmanagement.models import Information\n-from collegemanagement.models import College, CollegeGallery, CollegeFaqs, CollegeType         \n+from collegemanagement.models import College, CollegeGallery, CollegeFaqs, CollegeType\n+from college         \n \n VALID_TYPES = {\n     \n #     \"blog\": Blog,\n"
                },
                {
                    "date": 1733739816464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n from affiliation.models import Affiliation\n from certification.models import Certification\n from informationmanagement.models import Information\n from collegemanagement.models import College, CollegeGallery, CollegeFaqs, CollegeType\n-from college         \n+from collegetype.models import CollegeType         \n \n VALID_TYPES = {\n     \n #     \"blog\": Blog,\n"
                },
                {
                    "date": 1733739822053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,10 @@\n from affiliation.models import Affiliation\n from certification.models import Certification\n from informationmanagement.models import Information\n from collegemanagement.models import College, CollegeGallery, CollegeFaqs, CollegeType\n-from collegetype.models import CollegeType         \n+from collegetype.models import CollegeType\n+from cont         \n \n VALID_TYPES = {\n     \n #     \"blog\": Blog,\n"
                },
                {
                    "date": 1733739827175,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,10 @@\n from certification.models import Certification\n from informationmanagement.models import Information\n from collegemanagement.models import College, CollegeGallery, CollegeFaqs, CollegeType\n from collegetype.models import CollegeType\n-from cont         \n+from contact.models import Contact\n+         \n \n VALID_TYPES = {\n     \n #     \"blog\": Blog,\n"
                },
                {
                    "date": 1733739833490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n from informationmanagement.models import Information\n from collegemanagement.models import College, CollegeGallery, CollegeFaqs, CollegeType\n from collegetype.models import CollegeType\n from contact.models import Contact\n-         \n+from coursemanagement.models import Course,         \n \n VALID_TYPES = {\n     \n #     \"blog\": Blog,\n"
                },
                {
                    "date": 1733739839307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n from informationmanagement.models import Information\n from collegemanagement.models import College, CollegeGallery, CollegeFaqs, CollegeType\n from collegetype.models import CollegeType\n from contact.models import Contact\n-from coursemanagement.models import Course,         \n+from coursemanagement.models import Course, CourseGallery, CourseFaqs, CourseType         \n \n VALID_TYPES = {\n     \n #     \"blog\": Blog,\n"
                },
                {
                    "date": 1733739845081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,97 @@\n+from django.shortcuts import render\n+from rest_framework.views import APIView\n+from rest_framework.response import Response\n+from rest_framework import status\n+\n+from drf_yasg import openapi\n+from drf_yasg.utils import swagger_auto_schema\n+\n+from advertisement.models import Advertisement\n+from affiliation.models import Affiliation\n+from certification.models import Certification\n+from informationmanagement.models import Information\n+from collegemanagement.models import College, CollegeGallery, CollegeFaqs, CollegeType\n+from collegetype.models import CollegeType\n+from contact.models import Contact\n+from coursemanagement.models import Course, CourseGallery, CourseFaqs, CourseType, CourseCategory,         \n+\n+VALID_TYPES = {\n+    \n+#     \"blog\": Blog,\n+#     \"booking-service\": BookingService,\n+#     \"branch\": Branch,\n+#     \"customer-inquiries\": CustomerInquiries,\n+#     \"gallery-group\": GalleryGroup,\n+#     \"gallery\": Gallery,\n+#     \"quotation\": Quotation,\n+#     \"service-category\": Category,\n+#     \"service\": Service,\n+#     \"meetteam\": MeetTeam,\n+#     \"faqs\": Faqs,\n+}\n+\n+class BulkDelete(APIView):\n+    @swagger_auto_schema(\n+        request_body=openapi.Schema(\n+            type=openapi.TYPE_OBJECT,\n+            properties={\n+                'delete_ids': openapi.Schema(\n+                    type=openapi.TYPE_ARRAY,\n+                    items=openapi.Items(type=openapi.TYPE_INTEGER),\n+                    description='List of IDs to be deleted'\n+                ),\n+                'type': openapi.Schema(\n+                    type=openapi.TYPE_STRING,\n+                    description='Type of model to delete from. Options: blog, project, project_service, career, clients, faqs, testimonial, case_study.'\n+                ),\n+            },\n+            required=['delete_ids', 'type'],\n+        ),\n+        operation_summary=\"Bulk Delete Records\",\n+        operation_description=\"Deletes records in bulk based on the provided IDs and type.\",\n+        responses={\n+            200: openapi.Response(description=\"Data successfully deleted in bulk\"),\n+            400: openapi.Response(description=\"Invalid request parameters or unknown data type\"),\n+        }\n+    )\n+    def post(self, request, *args, **kwargs):\n+        # Extract 'delete_ids' and 'type' from request data\n+        delete_ids = request.data.get('delete_ids')\n+        delete_type = request.data.get('type')\n+\n+        # Validate input: Check for missing or invalid input\n+        if not delete_ids or not isinstance(delete_ids, list) or not all(isinstance(id, int) for id in delete_ids):\n+            return Response(\n+                {\"error\": \"Invalid 'delete_ids'. Provide a list of integers.\"},\n+                status=status.HTTP_400_BAD_REQUEST\n+            )\n+\n+        if not delete_type or delete_type not in VALID_TYPES:\n+            return Response(\n+                {\"error\": \"Invalid or missing 'type'. Provide a valid type.\"},\n+                status=status.HTTP_400_BAD_REQUEST\n+            )\n+\n+        # Get the model based on delete_type\n+        model = VALID_TYPES[delete_type]\n+        \n+        # Fetch the queryset based on the provided IDs\n+        queryset = model.objects.filter(id__in=delete_ids)\n+\n+        # Check if any of the delete_ids do not exist\n+        existing_ids = list(queryset.values_list('id', flat=True))\n+        missing_ids = set(delete_ids) - set(existing_ids)\n+\n+        if missing_ids:\n+            return Response(\n+                {\"error\": f\"IDs not found: {list(missing_ids)}\"},\n+                status=status.HTTP_400_BAD_REQUEST\n+            )\n+\n+        # Perform the bulk deletion\n+        deleted_count, _ = queryset.delete()\n+\n+        return Response(\n+            {\"message\": f\"Successfully deleted {deleted_count} items of type '{delete_type}'.\"},\n+            status=status.HTTP_200_OK\n+        )\n"
                },
                {
                    "date": 1733739859786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,10 @@\n from informationmanagement.models import Information\n from collegemanagement.models import College, CollegeGallery, CollegeFaqs, CollegeType\n from collegetype.models import CollegeType\n from contact.models import Contact\n-from coursemanagement.models import Course, CourseGallery, CourseFaqs, CourseType, CourseCategory,         \n+from coursemanagement.models import Course\n+         \n \n VALID_TYPES = {\n     \n #     \"blog\": Blog,\n@@ -94,101 +95,4 @@\n         return Response(\n             {\"message\": f\"Successfully deleted {deleted_count} items of type '{delete_type}'.\"},\n             status=status.HTTP_200_OK\n         )\n-from django.shortcuts import render\n-from rest_framework.views import APIView\n-from rest_framework.response import Response\n-from rest_framework import status\n-\n-from drf_yasg import openapi\n-from drf_yasg.utils import swagger_auto_schema\n-\n-from advertisement.models import Advertisement\n-from affiliation.models import Affiliation\n-from certification.models import Certification\n-from informationmanagement.models import Information\n-from collegemanagement.models import College, CollegeGallery, CollegeFaqs, CollegeType\n-from collegetype.models import CollegeType\n-from contact.models import Contact\n-from coursemanagement.models import Course, CourseGallery, CourseFaqs, CourseType         \n-\n-VALID_TYPES = {\n-    \n-#     \"blog\": Blog,\n-#     \"booking-service\": BookingService,\n-#     \"branch\": Branch,\n-#     \"customer-inquiries\": CustomerInquiries,\n-#     \"gallery-group\": GalleryGroup,\n-#     \"gallery\": Gallery,\n-#     \"quotation\": Quotation,\n-#     \"service-category\": Category,\n-#     \"service\": Service,\n-#     \"meetteam\": MeetTeam,\n-#     \"faqs\": Faqs,\n-}\n-\n-class BulkDelete(APIView):\n-    @swagger_auto_schema(\n-        request_body=openapi.Schema(\n-            type=openapi.TYPE_OBJECT,\n-            properties={\n-                'delete_ids': openapi.Schema(\n-                    type=openapi.TYPE_ARRAY,\n-                    items=openapi.Items(type=openapi.TYPE_INTEGER),\n-                    description='List of IDs to be deleted'\n-                ),\n-                'type': openapi.Schema(\n-                    type=openapi.TYPE_STRING,\n-                    description='Type of model to delete from. Options: blog, project, project_service, career, clients, faqs, testimonial, case_study.'\n-                ),\n-            },\n-            required=['delete_ids', 'type'],\n-        ),\n-        operation_summary=\"Bulk Delete Records\",\n-        operation_description=\"Deletes records in bulk based on the provided IDs and type.\",\n-        responses={\n-            200: openapi.Response(description=\"Data successfully deleted in bulk\"),\n-            400: openapi.Response(description=\"Invalid request parameters or unknown data type\"),\n-        }\n-    )\n-    def post(self, request, *args, **kwargs):\n-        # Extract 'delete_ids' and 'type' from request data\n-        delete_ids = request.data.get('delete_ids')\n-        delete_type = request.data.get('type')\n-\n-        # Validate input: Check for missing or invalid input\n-        if not delete_ids or not isinstance(delete_ids, list) or not all(isinstance(id, int) for id in delete_ids):\n-            return Response(\n-                {\"error\": \"Invalid 'delete_ids'. Provide a list of integers.\"},\n-                status=status.HTTP_400_BAD_REQUEST\n-            )\n-\n-        if not delete_type or delete_type not in VALID_TYPES:\n-            return Response(\n-                {\"error\": \"Invalid or missing 'type'. Provide a valid type.\"},\n-                status=status.HTTP_400_BAD_REQUEST\n-            )\n-\n-        # Get the model based on delete_type\n-        model = VALID_TYPES[delete_type]\n-        \n-        # Fetch the queryset based on the provided IDs\n-        queryset = model.objects.filter(id__in=delete_ids)\n-\n-        # Check if any of the delete_ids do not exist\n-        existing_ids = list(queryset.values_list('id', flat=True))\n-        missing_ids = set(delete_ids) - set(existing_ids)\n-\n-        if missing_ids:\n-            return Response(\n-                {\"error\": f\"IDs not found: {list(missing_ids)}\"},\n-                status=status.HTTP_400_BAD_REQUEST\n-            )\n-\n-        # Perform the bulk deletion\n-        deleted_count, _ = queryset.delete()\n-\n-        return Response(\n-            {\"message\": f\"Successfully deleted {deleted_count} items of type '{delete_type}'.\"},\n-            status=status.HTTP_200_OK\n-        )\n"
                },
                {
                    "date": 1733739866014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n from collegemanagement.models import College, CollegeGallery, CollegeFaqs, CollegeType\n from collegetype.models import CollegeType\n from contact.models import Contact\n from coursemanagement.models import Course\n-         \n+from district.models import District         \n \n VALID_TYPES = {\n     \n #     \"blog\": Blog,\n"
                },
                {
                    "date": 1733739884705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,10 @@\n from collegemanagement.models import College, CollegeGallery, CollegeFaqs, CollegeType\n from collegetype.models import CollegeType\n from contact.models import Contact\n from coursemanagement.models import Course\n-from district.models import District         \n+from district.models import District\n+from facilities         \n \n VALID_TYPES = {\n     \n #     \"blog\": Blog,\n"
                },
                {
                    "date": 1733739893509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,10 @@\n from collegetype.models import CollegeType\n from contact.models import Contact\n from coursemanagement.models import Course\n from district.models import District\n-from facilities         \n+from facilities.models import Facility\n+from facu         \n \n VALID_TYPES = {\n     \n #     \"blog\": Blog,\n"
                },
                {
                    "date": 1733739900300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,11 @@\n from contact.models import Contact\n from coursemanagement.models import Course\n from district.models import District\n from facilities.models import Facility\n-from facu         \n+from faculty.models import Faculty\n+from level.models import Level\n+         \n \n VALID_TYPES = {\n     \n #     \"blog\": Blog,\n"
                },
                {
                    "date": 1733739907977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n from district.models import District\n from facilities.models import Facility\n from faculty.models import Faculty\n from level.models import Level\n-         \n+from soc         \n \n VALID_TYPES = {\n     \n #     \"blog\": Blog,\n"
                },
                {
                    "date": 1733739922856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,10 @@\n from district.models import District\n from facilities.models import Facility\n from faculty.models import Faculty\n from level.models import Level\n-from soc         \n+from socialmedia.models import SocialMedia\n+from superadmindetails         \n \n VALID_TYPES = {\n     \n #     \"blog\": Blog,\n"
                },
                {
                    "date": 1733739983225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,23 +18,27 @@\n from facilities.models import Facility\n from faculty.models import Faculty\n from level.models import Level\n from socialmedia.models import SocialMedia\n-from superadmindetails         \n+from superadmindetails.models import SuperAdminDetails         \n \n VALID_TYPES = {\n-    \n-#     \"blog\": Blog,\n-#     \"booking-service\": BookingService,\n-#     \"branch\": Branch,\n-#     \"customer-inquiries\": CustomerInquiries,\n-#     \"gallery-group\": GalleryGroup,\n-#     \"gallery\": Gallery,\n-#     \"quotation\": Quotation,\n-#     \"service-category\": Category,\n-#     \"service\": Service,\n-#     \"meetteam\": MeetTeam,\n-#     \"faqs\": Faqs,\n+    \"advertisement\": Advertisement,\n+    \"affiliation\": Affiliation,\n+    \"certification\": Certification,\n+    \"information\": Information,\n+    \"college\": College,\n+    \"college-gallery\": CollegeGallery,\n+    \"college-faqs\": CollegeFaqs,\n+    \"college-type\": CollegeType,\n+    \"contact\": Contact,\n+    \"course\": Course,\n+    \"district\": District,\n+    \"facility\": Facility,\n+    \"faculty\": Faculty,\n+    \"level\": Level,\n+    \"social-media\": SocialMedia,\n+    \"super-admin-details\": SuperAdminDetails,\n }\n \n class BulkDelete(APIView):\n     @swagger_auto_schema(\n"
                }
            ],
            "date": 1733737051062,
            "name": "Commit-0",
            "content": "from django.shortcuts import render\nfrom rest_framework.views import APIView\nfrom rest_framework.response import Response\nfrom rest_framework import status\n\nfrom drf_yasg import openapi\nfrom drf_yasg.utils import swagger_auto_schema\n\n# from blog.models import Blog\n# from bookingmanagement.models import BookingService\n# from branchdetails.models import Branch\n# from components.models import *\n# from customerinquiries.models import CustomerInquiries\n# from gallery.models import GalleryGroup,Gallery\n# from quotationmanagement.models import Quotation\n# from service_category_management.models import Category\n# from servicemanagement.models import Service\n\nVALID_TYPES = {\n    \"blog\": Blog,\n    \"booking-service\": BookingService,\n    \"branch\": Branch,\n    \"customer-inquiries\": CustomerInquiries,\n    \"gallery-group\": GalleryGroup,\n    \"gallery\": Gallery,\n    \"quotation\": Quotation,\n    \"service-category\": Category,\n    \"service\": Service,\n    \"meetteam\": MeetTeam,\n    \"faqs\": Faqs,\n}\n\nclass BulkDelete(APIView):\n    @swagger_auto_schema(\n        request_body=openapi.Schema(\n            type=openapi.TYPE_OBJECT,\n            properties={\n                'delete_ids': openapi.Schema(\n                    type=openapi.TYPE_ARRAY,\n                    items=openapi.Items(type=openapi.TYPE_INTEGER),\n                    description='List of IDs to be deleted'\n                ),\n                'type': openapi.Schema(\n                    type=openapi.TYPE_STRING,\n                    description='Type of model to delete from. Options: blog, project, project_service, career, clients, faqs, testimonial, case_study.'\n                ),\n            },\n            required=['delete_ids', 'type'],\n        ),\n        operation_summary=\"Bulk Delete Records\",\n        operation_description=\"Deletes records in bulk based on the provided IDs and type.\",\n        responses={\n            200: openapi.Response(description=\"Data successfully deleted in bulk\"),\n            400: openapi.Response(description=\"Invalid request parameters or unknown data type\"),\n        }\n    )\n    def post(self, request, *args, **kwargs):\n        # Extract 'delete_ids' and 'type' from request data\n        delete_ids = request.data.get('delete_ids')\n        delete_type = request.data.get('type')\n\n        # Validate input: Check for missing or invalid input\n        if not delete_ids or not isinstance(delete_ids, list) or not all(isinstance(id, int) for id in delete_ids):\n            return Response(\n                {\"error\": \"Invalid 'delete_ids'. Provide a list of integers.\"},\n                status=status.HTTP_400_BAD_REQUEST\n            )\n\n        if not delete_type or delete_type not in VALID_TYPES:\n            return Response(\n                {\"error\": \"Invalid or missing 'type'. Provide a valid type.\"},\n                status=status.HTTP_400_BAD_REQUEST\n            )\n\n        # Get the model based on delete_type\n        model = VALID_TYPES[delete_type]\n        \n        # Fetch the queryset based on the provided IDs\n        queryset = model.objects.filter(id__in=delete_ids)\n\n        # Check if any of the delete_ids do not exist\n        existing_ids = list(queryset.values_list('id', flat=True))\n        missing_ids = set(delete_ids) - set(existing_ids)\n\n        if missing_ids:\n            return Response(\n                {\"error\": f\"IDs not found: {list(missing_ids)}\"},\n                status=status.HTTP_400_BAD_REQUEST\n            )\n\n        # Perform the bulk deletion\n        deleted_count, _ = queryset.delete()\n\n        return Response(\n            {\"message\": f\"Successfully deleted {deleted_count} items of type '{delete_type}'.\"},\n            status=status.HTTP_200_OK\n        )\n"
        }
    ]
}