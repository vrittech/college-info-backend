{
    "sourceFile": "level/viewsets/sublevel_viewsets.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1733481935884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1733481942704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     serializer_class = SubLevelListSerializers\n     # permission_classes = [levelPermission]\n     # authentication_classes = [JWTAuthentication]\n     #pagination_class = MyPageNumberPagination\n-    queryset = SubLevel.objects.all().order_by\n+    queryset = SubLevel.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n     ordering_fields = ['id']\n@@ -21,9 +21,9 @@\n     # }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n-        #return queryset.filter(user_id=self.request.user.id)\n+        #return queryset\n \n     def get_serializer_class(self):\n         if self.action in ['create', 'update', 'partial_update']:\n             return SubLevelWriteSerializers\n"
                },
                {
                    "date": 1737963625110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n class sublevelViewsets(viewsets.ModelViewSet):\n     serializer_class = SubLevelListSerializers\n     # permission_classes = [levelPermission]\n     # authentication_classes = [JWTAuthentication]\n-    #pagination_class = MyPageNumberPagination\n+    pagination_class = MyPageNumberPagination\n     queryset = SubLevel.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n@@ -21,9 +21,9 @@\n     # }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n-        #return queryset\n+        return queryset\n \n     def get_serializer_class(self):\n         if self.action in ['create', 'update', 'partial_update']:\n             return SubLevelWriteSerializers\n"
                },
                {
                    "date": 1738748585824,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n \n class sublevelViewsets(viewsets.ModelViewSet):\n     serializer_class = SubLevelListSerializers\n     # permission_classes = [levelPermission]\n-    # authentication_classes = [JWTAuthentication]\n+    authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = SubLevel.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n"
                },
                {
                    "date": 1739509658814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,11 @@\n from django_filters.rest_framework import DjangoFilterBackend\n from ..models import SubLevel\n from ..serializers.sublevel_serializers import SubLevelListSerializers, SubLevelRetrieveSerializers, SubLevelWriteSerializers\n from ..utilities.importbase import *\n+from mainproj.permissions import DynamicModelPermission\n \n+\n class sublevelViewsets(viewsets.ModelViewSet):\n     serializer_class = SubLevelListSerializers\n     # permission_classes = [levelPermission]\n     authentication_classes = [JWTAuthentication]\n"
                },
                {
                    "date": 1742482580370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,20 +8,23 @@\n \n \n class sublevelViewsets(viewsets.ModelViewSet):\n     serializer_class = SubLevelListSerializers\n-    # permission_classes = [levelPermission]\n+    permission_classes = [DynamicModelPermission]\n     authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = SubLevel.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n     ordering_fields = ['id']\n \n-    # filterset_fields = {\n-    #     'id': ['exact'],\n-    # }\n+   filterset_fields = {\n+        'id': ['exact'],\n+        'sublevel': ['exact'],\n+        'name': ['exact'],\n+        'created_date': ['exact', 'lte', 'gte'],\n+    }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n         return queryset\n"
                },
                {
                    "date": 1742482589077,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,17 +14,17 @@\n     pagination_class = MyPageNumberPagination\n     queryset = SubLevel.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = ['id']\n+    search_fields = ['id','']\n     ordering_fields = ['id']\n \n-   filterset_fields = {\n-        'id': ['exact'],\n-        'sublevel': ['exact'],\n-        'name': ['exact'],\n-        'created_date': ['exact', 'lte', 'gte'],\n-    }\n+    filterset_fields = {\n+            'id': ['exact'],\n+            'sublevel': ['exact'],\n+            'name': ['exact'],\n+            'created_date': ['exact', 'lte', 'gte'],\n+        }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n         return queryset\n"
                },
                {
                    "date": 1742482596273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n     pagination_class = MyPageNumberPagination\n     queryset = SubLevel.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = ['id','']\n+    search_fields = ['id','name']\n     ordering_fields = ['id']\n \n     filterset_fields = {\n             'id': ['exact'],\n"
                },
                {
                    "date": 1742482602739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n     pagination_class = MyPageNumberPagination\n     queryset = SubLevel.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = ['id','name']\n+    search_fields = ['id','name', 'created_date',]\n     ordering_fields = ['id']\n \n     filterset_fields = {\n             'id': ['exact'],\n"
                }
            ],
            "date": 1733481935884,
            "name": "Commit-0",
            "content": "from rest_framework import viewsets\nfrom rest_framework.filters import SearchFilter, OrderingFilter\nfrom django_filters.rest_framework import DjangoFilterBackend\nfrom ..models import SubLevel\nfrom ..serializers.sublevel_serializers import SubLevelListSerializers, SubLevelRetrieveSerializers, SubLevelWriteSerializers\nfrom ..utilities.importbase import *\n\nclass sublevelViewsets(viewsets.ModelViewSet):\n    serializer_class = SubLevelListSerializers\n    # permission_classes = [levelPermission]\n    # authentication_classes = [JWTAuthentication]\n    #pagination_class = MyPageNumberPagination\n    queryset = SubLevel.objects.all().order_by\n\n    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n    search_fields = ['id']\n    ordering_fields = ['id']\n\n    # filterset_fields = {\n    #     'id': ['exact'],\n    # }\n\n    def get_queryset(self):\n        queryset = super().get_queryset()\n        #return queryset.filter(user_id=self.request.user.id)\n\n    def get_serializer_class(self):\n        if self.action in ['create', 'update', 'partial_update']:\n            return SubLevelWriteSerializers\n        elif self.action == 'retrieve':\n            return SubLevelRetrieveSerializers\n        return super().get_serializer_class()\n\n    # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n    # def action_name(self, request, *args, **kwargs):\n    #     return super().list(request, *args, **kwargs)\n\n"
        }
    ]
}