{
    "sourceFile": "facilities/viewsets/facility_viewsets.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1733481416906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1733481422894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     serializer_class = FacilityListSerializers\n     # permission_classes = [facilitiesPermission]\n     # authentication_classes = [JWTAuthentication]\n     #pagination_class = MyPageNumberPagination\n-    queryset = Facility.objects.all().order_by\n+    queryset = Facility.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n     ordering_fields = ['id']\n@@ -21,9 +21,9 @@\n     # }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n-        #return queryset.filter(user_id=self.request.user.id)\n+        return queryset\n \n     def get_serializer_class(self):\n         if self.action in ['create', 'update', 'partial_update']:\n             return FacilityWriteSerializers\n"
                },
                {
                    "date": 1737963544496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n class facilityViewsets(viewsets.ModelViewSet):\n     serializer_class = FacilityListSerializers\n     # permission_classes = [facilitiesPermission]\n     # authentication_classes = [JWTAuthentication]\n-    #pagination_class = MyPageNumberPagination\n+    pagination_class = MyPageNumberPagination\n     queryset = Facility.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n"
                },
                {
                    "date": 1738131685560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,11 +15,11 @@\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n     ordering_fields = ['id']\n \n-    # filterset_fields = {\n-    #     'id': ['exact'],\n-    # }\n+    filterset_fields = {\n+        'id': ['exact'],\n+    }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n         return queryset\n"
                },
                {
                    "date": 1738131697597,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n     ordering_fields = ['id']\n \n     filterset_fields = {\n         'id': ['exact'],\n+        \n     }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1738131705986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n     ordering_fields = ['id']\n \n     filterset_fields = {\n         'id': ['exact'],\n+        'name': ['exact'],\n         \n     }\n \n     def get_queryset(self):\n"
                },
                {
                    "date": 1738131719244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n     pagination_class = MyPageNumberPagination\n     queryset = Facility.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = ['id']\n+    search_fields = ['id',]\n     ordering_fields = ['id']\n \n     filterset_fields = {\n         'id': ['exact'],\n"
                },
                {
                    "date": 1738131727020,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,15 +12,15 @@\n     pagination_class = MyPageNumberPagination\n     queryset = Facility.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = ['id',]\n-    ordering_fields = ['id']\n+    search_fields = ['id','name']\n+    ordering_fields = ['id','']\n \n     filterset_fields = {\n         'id': ['exact'],\n         'name': ['exact'],\n-        \n+        'is_show': ['exact'],\n     }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1738748516951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,15 +7,15 @@\n \n class facilityViewsets(viewsets.ModelViewSet):\n     serializer_class = FacilityListSerializers\n     # permission_classes = [facilitiesPermission]\n-    # authentication_classes = [JWTAuthentication]\n+    authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = Facility.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id','name']\n-    ordering_fields = ['id','']\n+    ordering_fields = ['id','name']\n \n     filterset_fields = {\n         'id': ['exact'],\n         'name': ['exact'],\n"
                },
                {
                    "date": 1739264607783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n from ..utilities.importbase import *\n \n class facilityViewsets(viewsets.ModelViewSet):\n     serializer_class = FacilityListSerializers\n-    # permission_classes = [facilitiesPermission]\n+    permission_classes = [facilitiesPermission]\n     authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = Facility.objects.all().order_by('-id')\n \n"
                },
                {
                    "date": 1739509486269,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n from django_filters.rest_framework import DjangoFilterBackend\n from ..models import Facility\n from ..serializers.facility_serializers import FacilityListSerializers, FacilityRetrieveSerializers, FacilityWriteSerializers\n from ..utilities.importbase import *\n-\n+from mainproj\n class facilityViewsets(viewsets.ModelViewSet):\n     serializer_class = FacilityListSerializers\n     permission_classes = [facilitiesPermission]\n     authentication_classes = [JWTAuthentication]\n"
                }
            ],
            "date": 1733481416906,
            "name": "Commit-0",
            "content": "from rest_framework import viewsets\nfrom rest_framework.filters import SearchFilter, OrderingFilter\nfrom django_filters.rest_framework import DjangoFilterBackend\nfrom ..models import Facility\nfrom ..serializers.facility_serializers import FacilityListSerializers, FacilityRetrieveSerializers, FacilityWriteSerializers\nfrom ..utilities.importbase import *\n\nclass facilityViewsets(viewsets.ModelViewSet):\n    serializer_class = FacilityListSerializers\n    # permission_classes = [facilitiesPermission]\n    # authentication_classes = [JWTAuthentication]\n    #pagination_class = MyPageNumberPagination\n    queryset = Facility.objects.all().order_by\n\n    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n    search_fields = ['id']\n    ordering_fields = ['id']\n\n    # filterset_fields = {\n    #     'id': ['exact'],\n    # }\n\n    def get_queryset(self):\n        queryset = super().get_queryset()\n        #return queryset.filter(user_id=self.request.user.id)\n\n    def get_serializer_class(self):\n        if self.action in ['create', 'update', 'partial_update']:\n            return FacilityWriteSerializers\n        elif self.action == 'retrieve':\n            return FacilityRetrieveSerializers\n        return super().get_serializer_class()\n\n    # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n    # def action_name(self, request, *args, **kwargs):\n    #     return super().list(request, *args, **kwargs)\n\n"
        }
    ]
}