{
    "sourceFile": "facilities/viewsets/collegefacility_viewsets.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 29,
            "patches": [
                {
                    "date": 1740650332763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740650340352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,12 +3,13 @@\n from django_filters.rest_framework import DjangoFilterBackend\n from ..models import CollegeFacility\n from ..serializers.collegefacility_serializers import CollegeFacilityListSerializers, CollegeFacilityRetrieveSerializers, CollegeFacilityWriteSerializers\n from ..utilities.importbase import *\n+from main\n \n class collegefacilityViewsets(viewsets.ModelViewSet):\n     serializer_class = CollegeFacilityListSerializers\n-    # permission_classes = [facilitiesPermission]\n+    permission_classes = [facilitiesPermission]\n     # authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = CollegeFacility.objects.all()\n \n"
                },
                {
                    "date": 1740650347716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,13 +3,13 @@\n from django_filters.rest_framework import DjangoFilterBackend\n from ..models import CollegeFacility\n from ..serializers.collegefacility_serializers import CollegeFacilityListSerializers, CollegeFacilityRetrieveSerializers, CollegeFacilityWriteSerializers\n from ..utilities.importbase import *\n-from main\n+from mainproj.permissions import DynamicModelPermission\n \n class collegefacilityViewsets(viewsets.ModelViewSet):\n     serializer_class = CollegeFacilityListSerializers\n-    permission_classes = [facilitiesPermission]\n+    permission_classes = [DynamicModelPermission]\n     # authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = CollegeFacility.objects.all()\n \n"
                },
                {
                    "date": 1740650356684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,11 +16,11 @@\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n     ordering_fields = ['id']\n \n-    # filterset_fields = {\n-    #     'id': ['exact'],\n-    # }\n+    filterset_fields = {\n+        'id': ['exact'],\n+    }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n         #return queryset.filter(user_id=self.request.user.id)\n"
                },
                {
                    "date": 1740650371247,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,9 @@\n     ordering_fields = ['id']\n \n     filterset_fields = {\n         'id': ['exact'],\n+        'id': ['exact'],\n     }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1740650378401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,10 @@\n     ordering_fields = ['id']\n \n     filterset_fields = {\n         'id': ['exact'],\n-        'id': ['exact'],\n+        'college': ['exact'],\n+        'college': ['exact'],\n     }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1740650392934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,10 @@\n \n     filterset_fields = {\n         'id': ['exact'],\n         'college': ['exact'],\n-        'college': ['exact'],\n+        'facility': ['exact'],\n+        \n     }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1740650398055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     filterset_fields = {\n         'id': ['exact'],\n         'college': ['exact'],\n         'facility': ['exact'],\n-        \n+        'created_date': ['exact','gte','lte'],\n     }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1740650405262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n     }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n-        #return queryset.filter(user_id=self.request.user.id)\n+        return queryset\n \n     def get_serializer_class(self):\n         if self.action in ['create', 'update', 'partial_update']:\n             return CollegeFacilityWriteSerializers\n"
                },
                {
                    "date": 1740666468911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,11 +23,9 @@\n         'facility': ['exact'],\n         'created_date': ['exact','gte','lte'],\n     }\n \n-    def get_queryset(self):\n-        queryset = super().get_queryset()\n-        return queryset\n+    queryset = super().get_queryset().filter(colleges = self.request.user.college)\n \n     def get_serializer_class(self):\n         if self.action in ['create', 'update', 'partial_update']:\n             return CollegeFacilityWriteSerializers\n"
                },
                {
                    "date": 1740666475176,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,14 @@\n         'facility': ['exact'],\n         'created_date': ['exact','gte','lte'],\n     }\n \n-    queryset = super().get_queryset().filter(colleges = self.request.user.college)\n+    def get_queryset(self):\n+        if self.request.user.is_authenticated:\n+            queryset = super().get_queryset().filter(college = self.request.user.college)\n+        else:\n+            queryset = super().get_queryset()\n+        return queryset\n \n     def get_serializer_class(self):\n         if self.action in ['create', 'update', 'partial_update']:\n             return CollegeFacilityWriteSerializers\n"
                },
                {
                    "date": 1740685536690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,8 +36,9 @@\n             return CollegeFacilityWriteSerializers\n         elif self.action == 'retrieve':\n             return CollegeFacilityRetrieveSerializers\n         return super().get_serializer_class()\n+    \n \n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n"
                },
                {
                    "date": 1740685542157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,8 +37,9 @@\n         elif self.action == 'retrieve':\n             return CollegeFacilityRetrieveSerializers\n         return super().get_serializer_class()\n     \n+    \n \n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n"
                },
                {
                    "date": 1740685553057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,10 +37,24 @@\n         elif self.action == 'retrieve':\n             return CollegeFacilityRetrieveSerializers\n         return super().get_serializer_class()\n     \n-    \n+    def create(self, request, *args, **kwargs):\n+        serializer = self.get_serializer(data=request.data)\n+        \n+        if serializer.is_valid():\n+            try:\n+                college_facility = serializer.save()\n+                \n+                # Serialize response with the retrieve serializer (nested objects)\n+                response_serializer = CollegeFacilityRetrieveSerializers(college_facility)\n \n+                return Response(response_serializer.data, status=status.HTTP_201_CREATED)\n+            except IntegrityError:\n+                return Response({\"error\": \"Invalid data. College and Facility are required.\"}, status=status.HTTP_400_BAD_REQUEST)\n+\n+        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\n+\n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n \n"
                },
                {
                    "date": 1740685623504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,11 @@\n from ..models import CollegeFacility\n from ..serializers.collegefacility_serializers import CollegeFacilityListSerializers, CollegeFacilityRetrieveSerializers, CollegeFacilityWriteSerializers\n from ..utilities.importbase import *\n from mainproj.permissions import DynamicModelPermission\n+from rest_framework import status, viewsets\n+from rest_framework.response import Response\n+from django.db import IntegrityError\n \n class collegefacilityViewsets(viewsets.ModelViewSet):\n     serializer_class = CollegeFacilityListSerializers\n     permission_classes = [DynamicModelPermission]\n"
                },
                {
                    "date": 1740726598140,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,8 +42,9 @@\n         return super().get_serializer_class()\n     \n     def create(self, request, *args, **kwargs):\n         serializer = self.get_serializer(data=request.data)\n+        print\n         \n         if serializer.is_valid():\n             try:\n                 college_facility = serializer.save()\n"
                },
                {
                    "date": 1740726603537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n         return super().get_serializer_class()\n     \n     def create(self, request, *args, **kwargs):\n         serializer = self.get_serializer(data=request.data)\n-        print\n+        print(request.data,\"\")\n         \n         if serializer.is_valid():\n             try:\n                 college_facility = serializer.save()\n"
                },
                {
                    "date": 1740726609678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n         return super().get_serializer_class()\n     \n     def create(self, request, *args, **kwargs):\n         serializer = self.get_serializer(data=request.data)\n-        print(request.data,\"\")\n+        print(request.data,\"line 46!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\")\n         \n         if serializer.is_valid():\n             try:\n                 college_facility = serializer.save()\n"
                },
                {
                    "date": 1740726679207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n         if self.request.user.is_authenticated:\n             queryset = super().get_queryset().filter(college = self.request.user.college)\n         else:\n             queryset = super().get_queryset()\n-        return queryset\n+    return queryset\n \n     def get_serializer_class(self):\n         if self.action in ['create', 'update', 'partial_update']:\n             return CollegeFacilityWriteSerializers\n"
                },
                {
                    "date": 1740726701028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,11 +29,12 @@\n \n     def get_queryset(self):\n         if self.request.user.is_authenticated:\n             queryset = super().get_queryset().filter(college = self.request.user.college)\n+            print\n         else:\n             queryset = super().get_queryset()\n-    return queryset\n+        return queryset\n \n     def get_serializer_class(self):\n         if self.action in ['create', 'update', 'partial_update']:\n             return CollegeFacilityWriteSerializers\n"
                },
                {
                    "date": 1740726722079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n \n     def get_queryset(self):\n         if self.request.user.is_authenticated:\n             queryset = super().get_queryset().filter(college = self.request.user.college)\n-            print\n+            print(college = self.request.user.college)\n         else:\n             queryset = super().get_queryset()\n         return queryset\n \n"
                },
                {
                    "date": 1740726728859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n \n     def get_queryset(self):\n         if self.request.user.is_authenticated:\n             queryset = super().get_queryset().filter(college = self.request.user.college)\n-            print(college = self.request.user.college)\n+            print(college = self.request.user.college,\"line 33!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\")\n         else:\n             queryset = super().get_queryset()\n         return queryset\n \n"
                },
                {
                    "date": 1740726752196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n \n     def get_queryset(self):\n         if self.request.user.is_authenticated:\n             queryset = super().get_queryset().filter(college = self.request.user.college)\n-            print(college = self.request.user.college,\"line 33!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\")\n+            print(college = self.request.user.college)\n         else:\n             queryset = super().get_queryset()\n         return queryset\n \n"
                },
                {
                    "date": 1740726759025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,9 @@\n     def get_queryset(self):\n         if self.request.user.is_authenticated:\n             queryset = super().get_queryset().filter(college = self.request.user.college)\n             print(college = self.request.user.college)\n+            print()\n         else:\n             queryset = super().get_queryset()\n         return queryset\n \n"
                },
                {
                    "date": 1740726833008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,12 +27,13 @@\n         'created_date': ['exact','gte','lte'],\n     }\n \n     def get_queryset(self):\n+        return queryset\n         if self.request.user.is_authenticated:\n             queryset = super().get_queryset().filter(college = self.request.user.college)\n             print(college = self.request.user.college)\n-            print()\n+            print(\"line 46!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\")\n         else:\n             queryset = super().get_queryset()\n         return queryset\n \n"
                },
                {
                    "date": 1740726844673,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,11 @@\n         'created_date': ['exact','gte','lte'],\n     }\n \n     def get_queryset(self):\n+               queryset = super().get_queryset()\n         return queryset\n+        \n         if self.request.user.is_authenticated:\n             queryset = super().get_queryset().filter(college = self.request.user.college)\n             print(college = self.request.user.college)\n             print(\"line 46!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\")\n"
                },
                {
                    "date": 1740726850787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,18 +27,18 @@\n         'created_date': ['exact','gte','lte'],\n     }\n \n     def get_queryset(self):\n-               queryset = super().get_queryset()\n+        queryset = super().get_queryset()\n         return queryset\n         \n-        if self.request.user.is_authenticated:\n-            queryset = super().get_queryset().filter(college = self.request.user.college)\n-            print(college = self.request.user.college)\n-            print(\"line 46!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\")\n-        else:\n-            queryset = super().get_queryset()\n-        return queryset\n+        # if self.request.user.is_authenticated:\n+        #     queryset = super().get_queryset().filter(college = self.request.user.college)\n+        #     print(college = self.request.user.college)\n+        #     print(\"line 46!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\")\n+        # else:\n+        #     queryset = super().get_queryset()\n+        # return queryset\n \n     def get_serializer_class(self):\n         if self.action in ['create', 'update', 'partial_update']:\n             return CollegeFacilityWriteSerializers\n"
                },
                {
                    "date": 1740726949997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,18 +27,13 @@\n         'created_date': ['exact','gte','lte'],\n     }\n \n     def get_queryset(self):\n-        queryset = super().get_queryset()\n+        if self.request.user.is_authenticated:\n+            queryset = super().get_queryset().filter(college = self.request.user.college)\n+        else:\n+            queryset = super().get_queryset()\n         return queryset\n-        \n-        # if self.request.user.is_authenticated:\n-        #     queryset = super().get_queryset().filter(college = self.request.user.college)\n-        #     print(college = self.request.user.college)\n-        #     print(\"line 46!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\")\n-        # else:\n-        #     queryset = super().get_queryset()\n-        # return queryset\n \n     def get_serializer_class(self):\n         if self.action in ['create', 'update', 'partial_update']:\n             return CollegeFacilityWriteSerializers\n"
                },
                {
                    "date": 1740726955177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n         return super().get_serializer_class()\n     \n     def create(self, request, *args, **kwargs):\n         serializer = self.get_serializer(data=request.data)\n-        print(request.data,\"line 46!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\")\n+        print(request.data,\"line\")\n         \n         if serializer.is_valid():\n             try:\n                 college_facility = serializer.save()\n"
                },
                {
                    "date": 1740727027558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,14 +27,20 @@\n         'created_date': ['exact','gte','lte'],\n     }\n \n     def get_queryset(self):\n-        if self.request.user.is_authenticated:\n-            queryset = super().get_queryset().filter(college = self.request.user.college)\n+    \"\"\"Admins see all data, normal users see only their college's data\"\"\"\n+    queryset = super().get_queryset()\n+\n+    if self.request.user.is_authenticated:\n+        if self.request.user.is_superuser:\n+            return queryset  # Superusers get all records\n         else:\n-            queryset = super().get_queryset()\n-        return queryset\n+            return queryset.filter(college=self.request.user.college)  # Normal users get their college data only\n \n+    return queryset  # If unauthenticated (unlikely due to permissions), return all\n+\n+\n     def get_serializer_class(self):\n         if self.action in ['create', 'update', 'partial_update']:\n             return CollegeFacilityWriteSerializers\n         elif self.action == 'retrieve':\n"
                }
            ],
            "date": 1740650332763,
            "name": "Commit-0",
            "content": "from rest_framework import viewsets\nfrom rest_framework.filters import SearchFilter, OrderingFilter\nfrom django_filters.rest_framework import DjangoFilterBackend\nfrom ..models import CollegeFacility\nfrom ..serializers.collegefacility_serializers import CollegeFacilityListSerializers, CollegeFacilityRetrieveSerializers, CollegeFacilityWriteSerializers\nfrom ..utilities.importbase import *\n\nclass collegefacilityViewsets(viewsets.ModelViewSet):\n    serializer_class = CollegeFacilityListSerializers\n    # permission_classes = [facilitiesPermission]\n    # authentication_classes = [JWTAuthentication]\n    pagination_class = MyPageNumberPagination\n    queryset = CollegeFacility.objects.all()\n\n    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n    search_fields = ['id']\n    ordering_fields = ['id']\n\n    # filterset_fields = {\n    #     'id': ['exact'],\n    # }\n\n    def get_queryset(self):\n        queryset = super().get_queryset()\n        #return queryset.filter(user_id=self.request.user.id)\n\n    def get_serializer_class(self):\n        if self.action in ['create', 'update', 'partial_update']:\n            return CollegeFacilityWriteSerializers\n        elif self.action == 'retrieve':\n            return CollegeFacilityRetrieveSerializers\n        return super().get_serializer_class()\n\n    # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n    # def action_name(self, request, *args, **kwargs):\n    #     return super().list(request, *args, **kwargs)\n\n"
        }
    ]
}