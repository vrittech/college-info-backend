{
    "sourceFile": "facilities/viewsets/collegefacility_viewsets.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1740650332763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740650340352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,12 +3,13 @@\n from django_filters.rest_framework import DjangoFilterBackend\n from ..models import CollegeFacility\n from ..serializers.collegefacility_serializers import CollegeFacilityListSerializers, CollegeFacilityRetrieveSerializers, CollegeFacilityWriteSerializers\n from ..utilities.importbase import *\n+from main\n \n class collegefacilityViewsets(viewsets.ModelViewSet):\n     serializer_class = CollegeFacilityListSerializers\n-    # permission_classes = [facilitiesPermission]\n+    permission_classes = [facilitiesPermission]\n     # authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = CollegeFacility.objects.all()\n \n"
                },
                {
                    "date": 1740650347716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,13 +3,13 @@\n from django_filters.rest_framework import DjangoFilterBackend\n from ..models import CollegeFacility\n from ..serializers.collegefacility_serializers import CollegeFacilityListSerializers, CollegeFacilityRetrieveSerializers, CollegeFacilityWriteSerializers\n from ..utilities.importbase import *\n-from main\n+from mainproj.permissions import DynamicModelPermission\n \n class collegefacilityViewsets(viewsets.ModelViewSet):\n     serializer_class = CollegeFacilityListSerializers\n-    permission_classes = [facilitiesPermission]\n+    permission_classes = [DynamicModelPermission]\n     # authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = CollegeFacility.objects.all()\n \n"
                },
                {
                    "date": 1740650356684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,11 +16,11 @@\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n     ordering_fields = ['id']\n \n-    # filterset_fields = {\n-    #     'id': ['exact'],\n-    # }\n+    filterset_fields = {\n+        'id': ['exact'],\n+    }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n         #return queryset.filter(user_id=self.request.user.id)\n"
                },
                {
                    "date": 1740650371247,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,9 @@\n     ordering_fields = ['id']\n \n     filterset_fields = {\n         'id': ['exact'],\n+        'id': ['exact'],\n     }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1740650378401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,10 @@\n     ordering_fields = ['id']\n \n     filterset_fields = {\n         'id': ['exact'],\n-        'id': ['exact'],\n+        'college': ['exact'],\n+        'college': ['exact'],\n     }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1740650392934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,10 @@\n \n     filterset_fields = {\n         'id': ['exact'],\n         'college': ['exact'],\n-        'college': ['exact'],\n+        'facility': ['exact'],\n+        \n     }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1740650398055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     filterset_fields = {\n         'id': ['exact'],\n         'college': ['exact'],\n         'facility': ['exact'],\n-        \n+        'created_date': ['exact','gte','lte'],\n     }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1740650405262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n     }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n-        #return queryset.filter(user_id=self.request.user.id)\n+        return queryset\n \n     def get_serializer_class(self):\n         if self.action in ['create', 'update', 'partial_update']:\n             return CollegeFacilityWriteSerializers\n"
                },
                {
                    "date": 1740666468911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,11 +23,9 @@\n         'facility': ['exact'],\n         'created_date': ['exact','gte','lte'],\n     }\n \n-    def get_queryset(self):\n-        queryset = super().get_queryset()\n-        return queryset\n+    queryset = super().get_queryset().filter(colleges = self.request.user.college)\n \n     def get_serializer_class(self):\n         if self.action in ['create', 'update', 'partial_update']:\n             return CollegeFacilityWriteSerializers\n"
                },
                {
                    "date": 1740666475176,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,14 @@\n         'facility': ['exact'],\n         'created_date': ['exact','gte','lte'],\n     }\n \n-    queryset = super().get_queryset().filter(colleges = self.request.user.college)\n+    def get_queryset(self):\n+        if self.request.user.is_authenticated:\n+            queryset = super().get_queryset().filter(college = self.request.user.college)\n+        else:\n+            queryset = super().get_queryset()\n+        return queryset\n \n     def get_serializer_class(self):\n         if self.action in ['create', 'update', 'partial_update']:\n             return CollegeFacilityWriteSerializers\n"
                }
            ],
            "date": 1740650332763,
            "name": "Commit-0",
            "content": "from rest_framework import viewsets\nfrom rest_framework.filters import SearchFilter, OrderingFilter\nfrom django_filters.rest_framework import DjangoFilterBackend\nfrom ..models import CollegeFacility\nfrom ..serializers.collegefacility_serializers import CollegeFacilityListSerializers, CollegeFacilityRetrieveSerializers, CollegeFacilityWriteSerializers\nfrom ..utilities.importbase import *\n\nclass collegefacilityViewsets(viewsets.ModelViewSet):\n    serializer_class = CollegeFacilityListSerializers\n    # permission_classes = [facilitiesPermission]\n    # authentication_classes = [JWTAuthentication]\n    pagination_class = MyPageNumberPagination\n    queryset = CollegeFacility.objects.all()\n\n    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n    search_fields = ['id']\n    ordering_fields = ['id']\n\n    # filterset_fields = {\n    #     'id': ['exact'],\n    # }\n\n    def get_queryset(self):\n        queryset = super().get_queryset()\n        #return queryset.filter(user_id=self.request.user.id)\n\n    def get_serializer_class(self):\n        if self.action in ['create', 'update', 'partial_update']:\n            return CollegeFacilityWriteSerializers\n        elif self.action == 'retrieve':\n            return CollegeFacilityRetrieveSerializers\n        return super().get_serializer_class()\n\n    # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n    # def action_name(self, request, *args, **kwargs):\n    #     return super().list(request, *args, **kwargs)\n\n"
        }
    ]
}