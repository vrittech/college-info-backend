{
    "sourceFile": "informationmanagement/models.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1739786154635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739945765730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n     # template_name  = models.CharField(max_length=255,null=True,blank=True)\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n     slug = models.SlugField(max_length=255, unique=True, null=True, blank=True)\n     title = models.CharField(max_length=510,unique=True)\n-    publish_date = models.DateTimeField()\n+    publish_date = models.DateField()\n     active_period_start = models.DateField()\n     active_period_end = models.DateField()\n     \n     level = models.ManyToManyField(Level, blank=True)\n"
                },
                {
                    "date": 1739945778179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n     # template_name  = models.CharField(max_length=255,null=True,blank=True)\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n     slug = models.SlugField(max_length=255, unique=True, null=True, blank=True)\n     title = models.CharField(max_length=510,unique=True)\n-    publish_date = models.DateField()\n+    publish_date = models.DateField(null=)\n     active_period_start = models.DateField()\n     active_period_end = models.DateField()\n     \n     level = models.ManyToManyField(Level, blank=True)\n"
                },
                {
                    "date": 1739945785580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,11 +62,11 @@\n     # template_name  = models.CharField(max_length=255,null=True,blank=True)\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n     slug = models.SlugField(max_length=255, unique=True, null=True, blank=True)\n     title = models.CharField(max_length=510,unique=True)\n-    publish_date = models.DateField(null=)\n-    active_period_start = models.DateField()\n-    active_period_end = models.DateField()\n+    publish_date = models.DateField(null=True, blank=True)\n+    active_period_start = models.DateField(null=True, blank=True))\n+    active_period_end = models.DateField(null=True, blank=True))\n     \n     level = models.ManyToManyField(Level, blank=True)\n     sublevel = models.ManyToManyField(SubLevel, blank=True)\n     course = models.ManyToManyField(Course, blank=True)\n"
                },
                {
                    "date": 1739945798047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n     slug = models.SlugField(max_length=255, unique=True, null=True, blank=True)\n     title = models.CharField(max_length=510,unique=True)\n     publish_date = models.DateField(null=True, blank=True)\n-    active_period_start = models.DateField(null=True, blank=True))\n+    active_period_start = models.DateField(null=True, blank=True)\n     active_period_end = models.DateField(null=True, blank=True))\n     \n     level = models.ManyToManyField(Level, blank=True)\n     sublevel = models.ManyToManyField(SubLevel, blank=True)\n"
                },
                {
                    "date": 1740031769456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n     slug = models.SlugField(max_length=255, unique=True, null=True, blank=True)\n     title = models.CharField(max_length=510,unique=True)\n     publish_date = models.DateField(null=True, blank=True)\n     active_period_start = models.DateField(null=True, blank=True)\n-    active_period_end = models.DateField(null=True, blank=True))\n+    active_period_end = models.DateField(null=True, blank=True)\n     \n     level = models.ManyToManyField(Level, blank=True)\n     sublevel = models.ManyToManyField(SubLevel, blank=True)\n     course = models.ManyToManyField(Course, blank=True)\n@@ -122,8 +122,9 @@\n     image = models.ImageField(upload_to='information_category/',null=True,blank=True)\n     is_featured = models.BooleanField(default=False)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n+    \n \n     \n     class Meta:\n         permissions = [\n"
                },
                {
                    "date": 1740031777925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,9 +122,9 @@\n     image = models.ImageField(upload_to='information_category/',null=True,blank=True)\n     is_featured = models.BooleanField(default=False)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n-    \n+    manager = models.Man\n \n     \n     class Meta:\n         permissions = [\n"
                },
                {
                    "date": 1740031784987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,9 +122,8 @@\n     image = models.ImageField(upload_to='information_category/',null=True,blank=True)\n     is_featured = models.BooleanField(default=False)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n     updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n-    manager = models.Man\n \n     \n     class Meta:\n         permissions = [\n"
                },
                {
                    "date": 1740130555252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,8 +33,10 @@\n         ]\n \n \n class InformationCategory(models.Model):\n+    public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n+    slug = models.SlugField(max_length=255, unique=True, null=True, blank=True)\n     name = models.CharField(max_length=100)\n     is_show = models.BooleanField(default=False)\n     image = models.ImageField(upload_to='information_category/',null=True,blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n"
                },
                {
                    "date": 1740130581593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,8 +52,11 @@\n             count = InformationCategory.objects.filter(is_show=True).exclude(pk=self.pk).count()\n             if count >= 2:\n                 raise ValidationError(\"Only two categories can be shown at a time.\")\n         \n+        if not self.slug:\n+            self.slug = slugify(self.name)\n+        \n         super().save(*args, **kwargs)\n     \n     class Meta:\n         permissions = [\n"
                }
            ],
            "date": 1739786154635,
            "name": "Commit-0",
            "content": "from django.db import models\nfrom affiliation.models import Affiliation\n# from college.models import College\nfrom coursemanagement.models import Course\nfrom collegemanagement.models import College\nfrom district.models import District\nfrom faculty.models import Faculty\nfrom level.models import Level, SubLevel\n# from semester.models import Semester  \nfrom collegetype.models import CollegeType\n# from collegeleveltype.models import CollegeLevelType\nfrom certification.models import Certification\nfrom mainproj.utilities.seo import SEOFields\nfrom django.core.exceptions import ValidationError\nfrom django.utils.text import slugify\nimport uuid\n\nclass InformationTagging(models.Model):\n    name = models.CharField(max_length=100,null=True,blank = True)\n    url = models.URLField(blank=True, null=True)\n    is_show = models.BooleanField(default=False)\n    image = models.ImageField(upload_to='information_tagging/',null=True,blank=True)\n    created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n    updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n\n\n    def __str__(self):\n        return self.name if self.name else \"Unnamed\"\n    \n    class Meta:\n        permissions = [\n            ('manage_information_tagging', 'Manage Information Tagging'),\n        ]\n\n\nclass InformationCategory(models.Model):\n    name = models.CharField(max_length=100)\n    is_show = models.BooleanField(default=False)\n    image = models.ImageField(upload_to='information_category/',null=True,blank=True)\n    created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n    updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n\n\n    def __str__(self):\n       return self.name if self.name else \"Unnamed\"\n    \n    def save(self, *args, **kwargs):\n        # If is_show is being set to True, check the current count of True entries\n        if self.is_show:\n            count = InformationCategory.objects.filter(is_show=True).exclude(pk=self.pk).count()\n            if count >= 2:\n                raise ValidationError(\"Only two categories can be shown at a time.\")\n        \n        super().save(*args, **kwargs)\n    \n    class Meta:\n        permissions = [\n            ('manage_information_category', 'Manage Information Category'),\n        ]\n    \nclass Information(SEOFields):\n    # template_name  = models.CharField(max_length=255,null=True,blank=True)\n    public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n    slug = models.SlugField(max_length=255, unique=True, null=True, blank=True)\n    title = models.CharField(max_length=510,unique=True)\n    publish_date = models.DateTimeField()\n    active_period_start = models.DateField()\n    active_period_end = models.DateField()\n    \n    level = models.ManyToManyField(Level, blank=True)\n    sublevel = models.ManyToManyField(SubLevel, blank=True)\n    course = models.ManyToManyField(Course, blank=True)\n    affiliation = models.ManyToManyField(Affiliation)\n  \n    district = models.ManyToManyField(District, blank=True)\n    college = models.ManyToManyField(College, blank=True)\n    faculty = models.ManyToManyField(Faculty, blank=True)\n    \n    information_tagging = models.ManyToManyField(InformationTagging, blank=True)\n    information_category = models.ManyToManyField(InformationCategory, blank=True)\n    \n    short_description = models.TextField(null=True, blank=True)\n    description = models.TextField(null=True, blank=True)\n    # image = models.ManyToManyField(InformationGallery, blank=True)\n    # file = models.ManyToManyField(InformationFiles, blank=True)\n    state = models.BooleanField(default=False)\n\n    created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n    updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n    \n    def __str__(self):\n        return self.title if self.title else \"Unnamed\"\n    \n    def save(self, *args, **kwargs):\n        if not self.slug:\n            self.slug = slugify(self.name)\n        super().save(*args, **kwargs)\n    \n    class Meta:\n        permissions = [\n            ('manage_information', 'Manage Information'),\n        ]\n\n    def get_active_period(self):\n        return f\"{self.active_period_start} to {self.active_period_end}\"\n\n\nclass InformationFiles(models.Model):\n    information  = models.ForeignKey(Information, on_delete=models.CASCADE,related_name='information_files')\n    file = models.FileField(upload_to='information_docs/',null=True,blank=True)\n    \n    created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n    updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n   \n    class Meta:\n        permissions = [\n            ('manage_informationfiles', 'Manage Information Files'),\n        ]\n        \nclass InformationGallery(models.Model):\n    information = models.ForeignKey(Information, on_delete=models.CASCADE,related_name='information_gallery')\n    image = models.ImageField(upload_to='information_category/',null=True,blank=True)\n    is_featured = models.BooleanField(default=False)\n    created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n    updated_date = models.DateTimeField(auto_now=True, null=True, blank=True)\n\n    \n    class Meta:\n        permissions = [\n            ('manage_informationgallery', 'Manage Information Gallery'),\n        ]"
        }
    ]
}