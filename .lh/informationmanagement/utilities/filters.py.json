{
    "sourceFile": "informationmanagement/utilities/filters.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1738142088924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741583009214,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import django_filters\n-from .models import Information\n+from ..models import Information\n \n class InformationFilter(django_filters.FilterSet):\n     \"\"\"\n     Filter class for searching Information by multiple keys and values.\n@@ -10,19 +10,21 @@\n     level = django_filters.BaseInFilter(field_name=\"level__id\", lookup_expr=\"in\")\n     sublevel = django_filters.BaseInFilter(field_name=\"sublevel__id\", lookup_expr=\"in\")\n     course = django_filters.BaseInFilter(field_name=\"course__id\", lookup_expr=\"in\")\n     affiliation = django_filters.BaseInFilter(field_name=\"affiliation__id\", lookup_expr=\"in\")\n+    affiliation_type = django_filters.CharFilter(field_name=\"affiliated__affiliation_type\", lookup_expr=\"icontains\")\n     district = django_filters.BaseInFilter(field_name=\"district__id\", lookup_expr=\"in\")\n     college = django_filters.BaseInFilter(field_name=\"college__id\", lookup_expr=\"in\")\n     faculty = django_filters.BaseInFilter(field_name=\"faculty__id\", lookup_expr=\"in\")\n     information_tagging = django_filters.BaseInFilter(field_name=\"information_tagging__id\", lookup_expr=\"in\")\n     information_category = django_filters.BaseInFilter(field_name=\"information_category__id\", lookup_expr=\"in\")\n+    information_category_slug = django_filters.BaseInFilter(field_name=\"information_category__slug\", lookup_expr=\"in\")\n     \n     publish_date = django_filters.DateFromToRangeFilter(field_name=\"publish_date\")\n     active_period_start = django_filters.DateFromToRangeFilter(field_name=\"active_period_start\")\n     active_period_end = django_filters.DateFromToRangeFilter(field_name=\"active_period_end\")\n \n     class Meta:\n         model = Information\n         fields = ['level', 'sublevel', 'course', 'affiliation', 'district', 'college',\n-                  'faculty', 'information_tagging', 'information_category',\n+                  'faculty', 'information_tagging', 'information_category','information_category_slug',\n                   'publish_date', 'active_period_start', 'active_period_end']\n"
                },
                {
                    "date": 1741583016827,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,5 +26,5 @@\n     class Meta:\n         model = Information\n         fields = ['level', 'sublevel', 'course', 'affiliation', 'district', 'college',\n                   'faculty', 'information_tagging', 'information_category','information_category_slug',\n-                  'publish_date', 'active_period_start', 'active_period_end']\n+                  'publish_date', 'active_period_start', 'active_period_end',\"affiliation_type\"]\n"
                },
                {
                    "date": 1741583029199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,4 +27,9 @@\n         model = Information\n         fields = ['level', 'sublevel', 'course', 'affiliation', 'district', 'college',\n                   'faculty', 'information_tagging', 'information_category','information_category_slug',\n                   'publish_date', 'active_period_start', 'active_period_end',\"affiliation_type\"]\n+        \n+        \n+    def filter_by_university_type(self, queryset, name, value):\n+        \"\"\"Filter by university type in Affiliation model\"\"\"\n+        return queryset.filter(affiliated__university_type__icontains=value).distinct()\n"
                },
                {
                    "date": 1741583091578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     level = django_filters.BaseInFilter(field_name=\"level__id\", lookup_expr=\"in\")\n     sublevel = django_filters.BaseInFilter(field_name=\"sublevel__id\", lookup_expr=\"in\")\n     course = django_filters.BaseInFilter(field_name=\"course__id\", lookup_expr=\"in\")\n     affiliation = django_filters.BaseInFilter(field_name=\"affiliation__id\", lookup_expr=\"in\")\n-    affiliation_type = django_filters.CharFilter(field_name=\"affiliated__affiliation_type\", lookup_expr=\"icontains\")\n+    university_type = django_filters.CharFilter(method=\"filter_by_university_type\")\n     district = django_filters.BaseInFilter(field_name=\"district__id\", lookup_expr=\"in\")\n     college = django_filters.BaseInFilter(field_name=\"college__id\", lookup_expr=\"in\")\n     faculty = django_filters.BaseInFilter(field_name=\"faculty__id\", lookup_expr=\"in\")\n     information_tagging = django_filters.BaseInFilter(field_name=\"information_tagging__id\", lookup_expr=\"in\")\n"
                },
                {
                    "date": 1741583097670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     level = django_filters.BaseInFilter(field_name=\"level__id\", lookup_expr=\"in\")\n     sublevel = django_filters.BaseInFilter(field_name=\"sublevel__id\", lookup_expr=\"in\")\n     course = django_filters.BaseInFilter(field_name=\"course__id\", lookup_expr=\"in\")\n     affiliation = django_filters.BaseInFilter(field_name=\"affiliation__id\", lookup_expr=\"in\")\n-    university_type = django_filters.CharFilter(method=\"filter_by_university_type\")\n+    affiliation_type = django_filters.CharFilter(method=\"filter_by_university_type\")\n     district = django_filters.BaseInFilter(field_name=\"district__id\", lookup_expr=\"in\")\n     college = django_filters.BaseInFilter(field_name=\"college__id\", lookup_expr=\"in\")\n     faculty = django_filters.BaseInFilter(field_name=\"faculty__id\", lookup_expr=\"in\")\n     information_tagging = django_filters.BaseInFilter(field_name=\"information_tagging__id\", lookup_expr=\"in\")\n"
                },
                {
                    "date": 1741583146409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,5 +31,5 @@\n         \n         \n     def filter_by_university_type(self, queryset, name, value):\n         \"\"\"Filter by university type in Affiliation model\"\"\"\n-        return queryset.filter(affiliated__university_type__icontains=value).distinct()\n+        return queryset.filter(affiliat__university_type__icontains=value).distinct()\n"
                }
            ],
            "date": 1738142088924,
            "name": "Commit-0",
            "content": "import django_filters\nfrom .models import Information\n\nclass InformationFilter(django_filters.FilterSet):\n    \"\"\"\n    Filter class for searching Information by multiple keys and values.\n    Allows filtering by comma-separated IDs for Many-to-Many fields.\n    \"\"\"\n\n    level = django_filters.BaseInFilter(field_name=\"level__id\", lookup_expr=\"in\")\n    sublevel = django_filters.BaseInFilter(field_name=\"sublevel__id\", lookup_expr=\"in\")\n    course = django_filters.BaseInFilter(field_name=\"course__id\", lookup_expr=\"in\")\n    affiliation = django_filters.BaseInFilter(field_name=\"affiliation__id\", lookup_expr=\"in\")\n    district = django_filters.BaseInFilter(field_name=\"district__id\", lookup_expr=\"in\")\n    college = django_filters.BaseInFilter(field_name=\"college__id\", lookup_expr=\"in\")\n    faculty = django_filters.BaseInFilter(field_name=\"faculty__id\", lookup_expr=\"in\")\n    information_tagging = django_filters.BaseInFilter(field_name=\"information_tagging__id\", lookup_expr=\"in\")\n    information_category = django_filters.BaseInFilter(field_name=\"information_category__id\", lookup_expr=\"in\")\n    \n    publish_date = django_filters.DateFromToRangeFilter(field_name=\"publish_date\")\n    active_period_start = django_filters.DateFromToRangeFilter(field_name=\"active_period_start\")\n    active_period_end = django_filters.DateFromToRangeFilter(field_name=\"active_period_end\")\n\n    class Meta:\n        model = Information\n        fields = ['level', 'sublevel', 'course', 'affiliation', 'district', 'college',\n                  'faculty', 'information_tagging', 'information_category',\n                  'publish_date', 'active_period_start', 'active_period_end']\n"
        }
    ]
}