{
    "sourceFile": "informationmanagement/viewsets/informationcategory_viewsets.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 24,
            "patches": [
                {
                    "date": 1733481590443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1733481595888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     serializer_class = InformationCategoryListSerializers\n     # permission_classes = [informationmanagementPermission]\n     # authentication_classes = [JWTAuthentication]\n     #pagination_class = MyPageNumberPagination\n-    queryset = InformationCategory.objects.all().order_by\n+    queryset = InformationCategory.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n     ordering_fields = ['id']\n@@ -21,9 +21,9 @@\n     # }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n-        #return queryset.filter(user_id=self.request.user.id)\n+        return queryset\n \n     def get_serializer_class(self):\n         if self.action in ['create', 'update', 'partial_update']:\n             return InformationCategoryWriteSerializers\n"
                },
                {
                    "date": 1733728177529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n     ordering_fields = ['id']\n-\n+('title', 'publish_date', 'active_period_start', 'active_period_end', 'level', 'sublevel', 'course', 'affiliation', 'district', 'college', 'faculty', 'information_tagging', 'information_category', 'short_description', 'description', 'image', 'file', 'state', 'created_date', 'updated_date', )\n     # filterset_fields = {\n     #     'id': ['exact'],\n     # }\n \n"
                },
                {
                    "date": 1733728201506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n     ordering_fields = ['id']\n-('title', 'publish_date', 'active_period_start', 'active_period_end', 'level', 'sublevel', 'course', 'affiliation', 'district', 'college', 'faculty', 'information_tagging', 'information_category', 'short_description', 'description', 'image', 'file', 'state', 'created_date', 'updated_date', )\n+\n     # filterset_fields = {\n     #     'id': ['exact'],\n     # }\n \n"
                },
                {
                    "date": 1733728228279,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n     ordering_fields = ['id']\n-\n+('name', 'is_show', 'image', 'created_date', 'updated_date', )\n     # filterset_fields = {\n     #     'id': ['exact'],\n     # }\n \n"
                },
                {
                    "date": 1733728235956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n     #pagination_class = MyPageNumberPagination\n     queryset = InformationCategory.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = ['id']\n+    search_fields = ['id','name', 'is_show', 'image', 'created_date', 'updated_date']\n     ordering_fields = ['id']\n ('name', 'is_show', 'image', 'created_date', 'updated_date', )\n     # filterset_fields = {\n     #     'id': ['exact'],\n"
                },
                {
                    "date": 1733728242913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,11 +12,11 @@\n     #pagination_class = MyPageNumberPagination\n     queryset = InformationCategory.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n-    search_fields = ['id','name', 'is_show', 'image', 'created_date', 'updated_date']\n+    search_fields = ['id','name', 'is_show', 'created_date', 'updated_date']\n     ordering_fields = ['id']\n-('name', 'is_show', 'image', 'created_date', 'updated_date', )\n+# ('name', 'is_show', 'image', 'created_date', 'updated_date', )\n     # filterset_fields = {\n     #     'id': ['exact'],\n     # }\n \n"
                },
                {
                    "date": 1733728250737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n     queryset = InformationCategory.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id','name', 'is_show', 'created_date', 'updated_date']\n-    ordering_fields = ['id']\n+    ordering_fields = ['id','name', 'is_show', 'created_date', 'updated_date']\n # ('name', 'is_show', 'image', 'created_date', 'updated_date', )\n     # filterset_fields = {\n     #     'id': ['exact'],\n     # }\n"
                },
                {
                    "date": 1733728282302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,9 @@\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id','name', 'is_show', 'created_date', 'updated_date']\n     ordering_fields = ['id','name', 'is_show', 'created_date', 'updated_date']\n # ('name', 'is_show', 'image', 'created_date', 'updated_date', )\n+   \n     # filterset_fields = {\n     #     'id': ['exact'],\n     # }\n \n"
                },
                {
                    "date": 1737963590672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n class informationcategoryViewsets(viewsets.ModelViewSet):\n     serializer_class = InformationCategoryListSerializers\n     # permission_classes = [informationmanagementPermission]\n     # authentication_classes = [JWTAuthentication]\n-    #pagination_class = MyPageNumberPagination\n+    pagination_class = MyPageNumberPagination\n     queryset = InformationCategory.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id','name', 'is_show', 'created_date', 'updated_date']\n"
                },
                {
                    "date": 1738748554858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n \n class informationcategoryViewsets(viewsets.ModelViewSet):\n     serializer_class = InformationCategoryListSerializers\n     # permission_classes = [informationmanagementPermission]\n-    # authentication_classes = [JWTAuthentication]\n+    authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = InformationCategory.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n"
                },
                {
                    "date": 1739264690012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n from ..utilities.importbase import *\n \n class informationcategoryViewsets(viewsets.ModelViewSet):\n     serializer_class = InformationCategoryListSerializers\n-    # permission_classes = [informationmanagementPermission]\n+    permission_classes = [informationmanagementPermission]\n     authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = InformationCategory.objects.all().order_by('-id')\n \n"
                },
                {
                    "date": 1739509565329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n from django_filters.rest_framework import DjangoFilterBackend\n from ..models import InformationCategory\n from ..serializers.informationcategory_serializers import InformationCategoryListSerializers, InformationCategoryRetrieveSerializers, InformationCategoryWriteSerializers\n from ..utilities.importbase import *\n+from mainproj.permissions\n \n class informationcategoryViewsets(viewsets.ModelViewSet):\n     serializer_class = InformationCategoryListSerializers\n     permission_classes = [informationmanagementPermission]\n"
                },
                {
                    "date": 1739509571601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,13 +3,13 @@\n from django_filters.rest_framework import DjangoFilterBackend\n from ..models import InformationCategory\n from ..serializers.informationcategory_serializers import InformationCategoryListSerializers, InformationCategoryRetrieveSerializers, InformationCategoryWriteSerializers\n from ..utilities.importbase import *\n-from mainproj.permissions\n+from mainproj.permissions import DynamicModelPermission\n \n class informationcategoryViewsets(viewsets.ModelViewSet):\n     serializer_class = InformationCategoryListSerializers\n-    permission_classes = [informationmanagementPermission]\n+    permission_classes = [DynamicModelPermission]\n     authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = InformationCategory.objects.all().order_by('-id')\n \n"
                },
                {
                    "date": 1739767358429,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n \n class informationcategoryViewsets(viewsets.ModelViewSet):\n     serializer_class = InformationCategoryListSerializers\n     permission_classes = [DynamicModelPermission]\n-    authentication_classes = [JWTAuthentication]\n+    # authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = InformationCategory.objects.all().order_by('-id')\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n"
                },
                {
                    "date": 1739959243392,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,11 +17,11 @@\n     search_fields = ['id','name', 'is_show', 'created_date', 'updated_date']\n     ordering_fields = ['id','name', 'is_show', 'created_date', 'updated_date']\n # ('name', 'is_show', 'image', 'created_date', 'updated_date', )\n    \n-    # filterset_fields = {\n-    #     'id': ['exact'],\n-    # }\n+    filterset_fields = {\n+        'id': ['exact'],\n+    }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n         return queryset\n"
                },
                {
                    "date": 1739959254600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n # ('name', 'is_show', 'image', 'created_date', 'updated_date', )\n    \n     filterset_fields = {\n         'id': ['exact'],\n+        'id': ['exact'],\n     }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1740130603463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,17 +11,18 @@\n     permission_classes = [DynamicModelPermission]\n     # authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = InformationCategory.objects.all().order_by('-id')\n+    lookup_field = \"slug\"\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id','name', 'is_show', 'created_date', 'updated_date']\n     ordering_fields = ['id','name', 'is_show', 'created_date', 'updated_date']\n # ('name', 'is_show', 'image', 'created_date', 'updated_date', )\n    \n     filterset_fields = {\n         'id': ['exact'],\n-        'id': ['exact'],\n+        'name': ['exact'],\n     }\n \n     def get_queryset(self):\n         queryset = super().get_queryset()\n"
                },
                {
                    "date": 1740130614075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n     ordering_fields = ['id','name', 'is_show', 'created_date', 'updated_date']\n # ('name', 'is_show', 'image', 'created_date', 'updated_date', )\n    \n     filterset_fields = {\n+        ''\n         'id': ['exact'],\n         'name': ['exact'],\n     }\n \n"
                },
                {
                    "date": 1740130621021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,10 @@\n     ordering_fields = ['id','name', 'is_show', 'created_date', 'updated_date']\n # ('name', 'is_show', 'image', 'created_date', 'updated_date', )\n    \n     filterset_fields = {\n-        ''\n+        'is_show': ['exact'],\n+        'slug': ['exact'],\n         'id': ['exact'],\n         'name': ['exact'],\n     }\n \n"
                },
                {
                    "date": 1741071794853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n from ..models import InformationCategory\n from ..serializers.informationcategory_serializers import InformationCategoryListSerializers, InformationCategoryRetrieveSerializers, InformationCategoryWriteSerializers\n from ..utilities.importbase import *\n from mainproj.permissions import DynamicModelPermission\n+from ..utilities.pagination import MyPageNumberPagination\n \n class informationcategoryViewsets(viewsets.ModelViewSet):\n     serializer_class = InformationCategoryListSerializers\n     permission_classes = [DynamicModelPermission]\n@@ -17,8 +18,10 @@\n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id','name', 'is_show', 'created_date', 'updated_date']\n     ordering_fields = ['id','name', 'is_show', 'created_date', 'updated_date']\n # ('name', 'is_show', 'image', 'created_date', 'updated_date', )\n+\n+\n    \n     filterset_fields = {\n         'is_show': ['exact'],\n         'slug': ['exact'],\n"
                },
                {
                    "date": 1741071879191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,11 @@\n from ..serializers.informationcategory_serializers import InformationCategoryListSerializers, InformationCategoryRetrieveSerializers, InformationCategoryWriteSerializers\n from ..utilities.importbase import *\n from mainproj.permissions import DynamicModelPermission\n from ..utilities.pagination import MyPageNumberPagination\n+from django.shortcuts import get_object_or_404\n \n+\n class informationcategoryViewsets(viewsets.ModelViewSet):\n     serializer_class = InformationCategoryListSerializers\n     permission_classes = [DynamicModelPermission]\n     # authentication_classes = [JWTAuthentication]\n@@ -19,9 +21,17 @@\n     search_fields = ['id','name', 'is_show', 'created_date', 'updated_date']\n     ordering_fields = ['id','name', 'is_show', 'created_date', 'updated_date']\n # ('name', 'is_show', 'image', 'created_date', 'updated_date', )\n \n-\n+    def get_object(self):\n+        \"\"\"\n+        Override get_object to allow lookup by either 'id' or 'slug'.\n+        \"\"\"\n+        queryset = self.get_queryset()\n+        lookup_value = self.kwargs.get(self.lookup_field)  # Get lookup value from URL\n+        if lookup_value.isdigit():  # Check if lookup_value is numeric (ID)\n+            return get_object_or_404(queryset, id=int(lookup_value))\n+        return get_object_or_404(queryset, slug=lookup_value)  # Otherwise, lookup by slug\n    \n     filterset_fields = {\n         'is_show': ['exact'],\n         'slug': ['exact'],\n"
                },
                {
                    "date": 1746435327867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,14 @@\n from mainproj.permissions import DynamicModelPermission\n from ..utilities.pagination import MyPageNumberPagination\n from django.shortcuts import get_object_or_404\n \n+from django.views.decorators.cache import cache_page\n+from django.utils.decorators import method_decorator\n \n+cache_time = 900  # 15 minutes\n+\n+\n class informationcategoryViewsets(viewsets.ModelViewSet):\n     serializer_class = InformationCategoryListSerializers\n     permission_classes = [DynamicModelPermission]\n     # authentication_classes = [JWTAuthentication]\n"
                },
                {
                    "date": 1746435333786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n \n from django.views.decorators.cache import cache_page\n from django.utils.decorators import method_decorator\n \n-cache_time = 900  # 15 minutes\n+cache_time = 1800  # 15 minutes\n \n \n class informationcategoryViewsets(viewsets.ModelViewSet):\n     serializer_class = InformationCategoryListSerializers\n"
                },
                {
                    "date": 1746435353567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,41 @@\n             return InformationCategoryWriteSerializers\n         elif self.action == 'retrieve':\n             return InformationCategoryRetrieveSerializers\n         return super().get_serializer_class()\n+    \n+    # List action caching\n+    def _list(self, request, *args, **kwargs):\n+        \"\"\"Actual list implementation\"\"\"\n+        print(\"InformationCategory List - uncached version\")\n+        return super().list(request, *args, **kwargs)\n \n+    @method_decorator(cache_page(cache_time, key_prefix=\"InformationCategoryList\"))\n+    def _cached_list(self, request, *args, **kwargs):\n+        \"\"\"Cached version of list\"\"\"\n+        return self._list(request, *args, **kwargs)\n+\n+    def list(self, request, *args, **kwargs):\n+        if not request.user.is_authenticated:\n+            return self._cached_list(request, *args, **kwargs)\n+        return self._list(request, *args, **kwargs)\n+\n+    # Retrieve action caching\n+    def _retrieve(self, request, *args, **kwargs):\n+        \"\"\"Actual retrieve implementation\"\"\"\n+        print(\"InformationCategory Retrieve - uncached version\")\n+        return super().retrieve(request, *args, **kwargs)\n+\n+    @method_decorator(cache_page(cache_time, key_prefix=\"InformationCategoryRetrieve\"))\n+    def _cached_retrieve(self, request, *args, **kwargs):\n+        \"\"\"Cached version of retrieve\"\"\"\n+        return self._retrieve(request, *args, **kwargs)\n+\n+    def retrieve(self, request, *args, **kwargs):\n+        if not request.user.is_authenticated:\n+            return self._cached_retrieve(request, *args, **kwargs)\n+        return self._retrieve(request, *args, **kwargs)\n+\n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n \n"
                }
            ],
            "date": 1733481590443,
            "name": "Commit-0",
            "content": "from rest_framework import viewsets\nfrom rest_framework.filters import SearchFilter, OrderingFilter\nfrom django_filters.rest_framework import DjangoFilterBackend\nfrom ..models import InformationCategory\nfrom ..serializers.informationcategory_serializers import InformationCategoryListSerializers, InformationCategoryRetrieveSerializers, InformationCategoryWriteSerializers\nfrom ..utilities.importbase import *\n\nclass informationcategoryViewsets(viewsets.ModelViewSet):\n    serializer_class = InformationCategoryListSerializers\n    # permission_classes = [informationmanagementPermission]\n    # authentication_classes = [JWTAuthentication]\n    #pagination_class = MyPageNumberPagination\n    queryset = InformationCategory.objects.all().order_by\n\n    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n    search_fields = ['id']\n    ordering_fields = ['id']\n\n    # filterset_fields = {\n    #     'id': ['exact'],\n    # }\n\n    def get_queryset(self):\n        queryset = super().get_queryset()\n        #return queryset.filter(user_id=self.request.user.id)\n\n    def get_serializer_class(self):\n        if self.action in ['create', 'update', 'partial_update']:\n            return InformationCategoryWriteSerializers\n        elif self.action == 'retrieve':\n            return InformationCategoryRetrieveSerializers\n        return super().get_serializer_class()\n\n    # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n    # def action_name(self, request, *args, **kwargs):\n    #     return super().list(request, *args, **kwargs)\n\n"
        }
    ]
}